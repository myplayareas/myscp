,hash_commit,filename,old_path,new_path,change_type,diff,diff_parsed,added_lines,deleted_lines,source_code,source_code_before,methods,methods_before,changed_methods,nloc,complexity,token_count
0,642da2f28c9bc6e373603d6d9119ce33684090f5,CONTRIBUTORS,,CONTRIBUTORS,ModificationType.ADD,"@@ -0,0 +1,10 @@
+Jay Kreps
+Rui Wang
+Jun Rao
+Neha Narkhede
+Fatih Emekci
+Lin Guo
+Shirshanka Das
+Roshan Sumbaly
+Sam Shah
+Chris Burroughs
\ No newline at end of file
","{'added': [(1, 'Jay Kreps'), (2, 'Rui Wang'), (3, 'Jun Rao'), (4, 'Neha Narkhede'), (5, 'Fatih Emekci'), (6, 'Lin Guo'), (7, 'Shirshanka Das'), (8, 'Roshan Sumbaly'), (9, 'Sam Shah'), (10, 'Chris Burroughs')], 'deleted': []}",10,0,"Jay Kreps
Rui Wang
Jun Rao
Neha Narkhede
Fatih Emekci
Lin Guo
Shirshanka Das
Roshan Sumbaly
Sam Shah
Chris Burroughs",,[],[],[],,,
1,642da2f28c9bc6e373603d6d9119ce33684090f5,LICENSE,,LICENSE,ModificationType.ADD,"@@ -0,0 +1,202 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      ""License"" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      ""Licensor"" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      ""Legal Entity"" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      ""control"" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      ""You"" (or ""Your"") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      ""Source"" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      ""Object"" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      ""Work"" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      ""Derivative Works"" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      ""Contribution"" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, ""submitted""
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as ""Not a Contribution.""
+
+      ""Contributor"" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a ""NOTICE"" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an ""AS IS"" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets ""[]""
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same ""printed page"" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright 2010 LinkedIn
+
+   Licensed under the Apache License, Version 2.0 (the ""License"");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an ""AS IS"" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
","{'added': [(1, ''), (2, '                                 Apache License'), (3, '                           Version 2.0, January 2004'), (4, '                        http://www.apache.org/licenses/'), (5, ''), (6, '   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION'), (7, ''), (8, '   1. Definitions.'), (9, ''), (10, '      ""License"" shall mean the terms and conditions for use, reproduction,'), (11, '      and distribution as defined by Sections 1 through 9 of this document.'), (12, ''), (13, '      ""Licensor"" shall mean the copyright owner or entity authorized by'), (14, '      the copyright owner that is granting the License.'), (15, ''), (16, '      ""Legal Entity"" shall mean the union of the acting entity and all'), (17, '      other entities that control, are controlled by, or are under common'), (18, '      control with that entity. For the purposes of this definition,'), (19, '      ""control"" means (i) the power, direct or indirect, to cause the'), (20, '      direction or management of such entity, whether by contract or'), (21, '      otherwise, or (ii) ownership of fifty percent (50%) or more of the'), (22, '      outstanding shares, or (iii) beneficial ownership of such entity.'), (23, ''), (24, '      ""You"" (or ""Your"") shall mean an individual or Legal Entity'), (25, '      exercising permissions granted by this License.'), (26, ''), (27, '      ""Source"" form shall mean the preferred form for making modifications,'), (28, '      including but not limited to software source code, documentation'), (29, '      source, and configuration files.'), (30, ''), (31, '      ""Object"" form shall mean any form resulting from mechanical'), (32, '      transformation or translation of a Source form, including but'), (33, '      not limited to compiled object code, generated documentation,'), (34, '      and conversions to other media types.'), (35, ''), (36, '      ""Work"" shall mean the work of authorship, whether in Source or'), (37, '      Object form, made available under the License, as indicated by a'), (38, '      copyright notice that is included in or attached to the work'), (39, '      (an example is provided in the Appendix below).'), (40, ''), (41, '      ""Derivative Works"" shall mean any work, whether in Source or Object'), (42, '      form, that is based on (or derived from) the Work and for which the'), (43, '      editorial revisions, annotations, elaborations, or other modifications'), (44, '      represent, as a whole, an original work of authorship. For the purposes'), (45, '      of this License, Derivative Works shall not include works that remain'), (46, '      separable from, or merely link (or bind by name) to the interfaces of,'), (47, '      the Work and Derivative Works thereof.'), (48, ''), (49, '      ""Contribution"" shall mean any work of authorship, including'), (50, '      the original version of the Work and any modifications or additions'), (51, '      to that Work or Derivative Works thereof, that is intentionally'), (52, '      submitted to Licensor for inclusion in the Work by the copyright owner'), (53, '      or by an individual or Legal Entity authorized to submit on behalf of'), (54, '      the copyright owner. For the purposes of this definition, ""submitted""'), (55, '      means any form of electronic, verbal, or written communication sent'), (56, '      to the Licensor or its representatives, including but not limited to'), (57, '      communication on electronic mailing lists, source code control systems,'), (58, '      and issue tracking systems that are managed by, or on behalf of, the'), (59, '      Licensor for the purpose of discussing and improving the Work, but'), (60, '      excluding communication that is conspicuously marked or otherwise'), (61, '      designated in writing by the copyright owner as ""Not a Contribution.""'), (62, ''), (63, '      ""Contributor"" shall mean Licensor and any individual or Legal Entity'), (64, '      on behalf of whom a Contribution has been received by Licensor and'), (65, '      subsequently incorporated within the Work.'), (66, ''), (67, '   2. Grant of Copyright License. Subject to the terms and conditions of'), (68, '      this License, each Contributor hereby grants to You a perpetual,'), (69, '      worldwide, non-exclusive, no-charge, royalty-free, irrevocable'), (70, '      copyright license to reproduce, prepare Derivative Works of,'), (71, '      publicly display, publicly perform, sublicense, and distribute the'), (72, '      Work and such Derivative Works in Source or Object form.'), (73, ''), (74, '   3. Grant of Patent License. Subject to the terms and conditions of'), (75, '      this License, each Contributor hereby grants to You a perpetual,'), (76, '      worldwide, non-exclusive, no-charge, royalty-free, irrevocable'), (77, '      (except as stated in this section) patent license to make, have made,'), (78, '      use, offer to sell, sell, import, and otherwise transfer the Work,'), (79, '      where such license applies only to those patent claims licensable'), (80, '      by such Contributor that are necessarily infringed by their'), (81, '      Contribution(s) alone or by combination of their Contribution(s)'), (82, '      with the Work to which such Contribution(s) was submitted. If You'), (83, '      institute patent litigation against any entity (including a'), (84, '      cross-claim or counterclaim in a lawsuit) alleging that the Work'), (85, '      or a Contribution incorporated within the Work constitutes direct'), (86, '      or contributory patent infringement, then any patent licenses'), (87, '      granted to You under this License for that Work shall terminate'), (88, '      as of the date such litigation is filed.'), (89, ''), (90, '   4. Redistribution. You may reproduce and distribute copies of the'), (91, '      Work or Derivative Works thereof in any medium, with or without'), (92, '      modifications, and in Source or Object form, provided that You'), (93, '      meet the following conditions:'), (94, ''), (95, '      (a) You must give any other recipients of the Work or'), (96, '          Derivative Works a copy of this License; and'), (97, ''), (98, '      (b) You must cause any modified files to carry prominent notices'), (99, '          stating that You changed the files; and'), (100, ''), (101, '      (c) You must retain, in the Source form of any Derivative Works'), (102, '          that You distribute, all copyright, patent, trademark, and'), (103, '          attribution notices from the Source form of the Work,'), (104, '          excluding those notices that do not pertain to any part of'), (105, '          the Derivative Works; and'), (106, ''), (107, '      (d) If the Work includes a ""NOTICE"" text file as part of its'), (108, '          distribution, then any Derivative Works that You distribute must'), (109, '          include a readable copy of the attribution notices contained'), (110, '          within such NOTICE file, excluding those notices that do not'), (111, '          pertain to any part of the Derivative Works, in at least one'), (112, '          of the following places: within a NOTICE text file distributed'), (113, '          as part of the Derivative Works; within the Source form or'), (114, '          documentation, if provided along with the Derivative Works; or,'), (115, '          within a display generated by the Derivative Works, if and'), (116, '          wherever such third-party notices normally appear. The contents'), (117, '          of the NOTICE file are for informational purposes only and'), (118, '          do not modify the License. You may add Your own attribution'), (119, '          notices within Derivative Works that You distribute, alongside'), (120, '          or as an addendum to the NOTICE text from the Work, provided'), (121, '          that such additional attribution notices cannot be construed'), (122, '          as modifying the License.'), (123, ''), (124, '      You may add Your own copyright statement to Your modifications and'), (125, '      may provide additional or different license terms and conditions'), (126, '      for use, reproduction, or distribution of Your modifications, or'), (127, '      for any such Derivative Works as a whole, provided Your use,'), (128, '      reproduction, and distribution of the Work otherwise complies with'), (129, '      the conditions stated in this License.'), (130, ''), (131, '   5. Submission of Contributions. Unless You explicitly state otherwise,'), (132, '      any Contribution intentionally submitted for inclusion in the Work'), (133, '      by You to the Licensor shall be under the terms and conditions of'), (134, '      this License, without any additional terms or conditions.'), (135, '      Notwithstanding the above, nothing herein shall supersede or modify'), (136, '      the terms of any separate license agreement you may have executed'), (137, '      with Licensor regarding such Contributions.'), (138, ''), (139, '   6. Trademarks. This License does not grant permission to use the trade'), (140, '      names, trademarks, service marks, or product names of the Licensor,'), (141, '      except as required for reasonable and customary use in describing the'), (142, '      origin of the Work and reproducing the content of the NOTICE file.'), (143, ''), (144, '   7. Disclaimer of Warranty. Unless required by applicable law or'), (145, '      agreed to in writing, Licensor provides the Work (and each'), (146, '      Contributor provides its Contributions) on an ""AS IS"" BASIS,'), (147, '      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'), (148, '      implied, including, without limitation, any warranties or conditions'), (149, '      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A'), (150, '      PARTICULAR PURPOSE. You are solely responsible for determining the'), (151, '      appropriateness of using or redistributing the Work and assume any'), (152, '      risks associated with Your exercise of permissions under this License.'), (153, ''), (154, '   8. Limitation of Liability. In no event and under no legal theory,'), (155, '      whether in tort (including negligence), contract, or otherwise,'), (156, '      unless required by applicable law (such as deliberate and grossly'), (157, '      negligent acts) or agreed to in writing, shall any Contributor be'), (158, '      liable to You for damages, including any direct, indirect, special,'), (159, '      incidental, or consequential damages of any character arising as a'), (160, '      result of this License or out of the use or inability to use the'), (161, '      Work (including but not limited to damages for loss of goodwill,'), (162, '      work stoppage, computer failure or malfunction, or any and all'), (163, '      other commercial damages or losses), even if such Contributor'), (164, '      has been advised of the possibility of such damages.'), (165, ''), (166, '   9. Accepting Warranty or Additional Liability. While redistributing'), (167, '      the Work or Derivative Works thereof, You may choose to offer,'), (168, '      and charge a fee for, acceptance of support, warranty, indemnity,'), (169, '      or other liability obligations and/or rights consistent with this'), (170, '      License. However, in accepting such obligations, You may act only'), (171, '      on Your own behalf and on Your sole responsibility, not on behalf'), (172, '      of any other Contributor, and only if You agree to indemnify,'), (173, '      defend, and hold each Contributor harmless for any liability'), (174, '      incurred by, or claims asserted against, such Contributor by reason'), (175, '      of your accepting any such warranty or additional liability.'), (176, ''), (177, '   END OF TERMS AND CONDITIONS'), (178, ''), (179, '   APPENDIX: How to apply the Apache License to your work.'), (180, ''), (181, '      To apply the Apache License to your work, attach the following'), (182, '      boilerplate notice, with the fields enclosed by brackets ""[]""'), (183, ""      replaced with your own identifying information. (Don't include""), (184, '      the brackets!)  The text should be enclosed in the appropriate'), (185, '      comment syntax for the file format. We also recommend that a'), (186, '      file or class name and description of purpose be included on the'), (187, '      same ""printed page"" as the copyright notice for easier'), (188, '      identification within third-party archives.'), (189, ''), (190, '   Copyright 2010 LinkedIn'), (191, ''), (192, '   Licensed under the Apache License, Version 2.0 (the ""License"");'), (193, '   you may not use this file except in compliance with the License.'), (194, '   You may obtain a copy of the License at'), (195, ''), (196, '       http://www.apache.org/licenses/LICENSE-2.0'), (197, ''), (198, '   Unless required by applicable law or agreed to in writing, software'), (199, '   distributed under the License is distributed on an ""AS IS"" BASIS,'), (200, '   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (201, '   See the License for the specific language governing permissions and'), (202, '   limitations under the License.')], 'deleted': []}",202,0,"
                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      ""License"" shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      ""Licensor"" shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      ""Legal Entity"" shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      ""control"" means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      ""You"" (or ""Your"") shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      ""Source"" form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      ""Object"" form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      ""Work"" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      ""Derivative Works"" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      ""Contribution"" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, ""submitted""
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as ""Not a Contribution.""

      ""Contributor"" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a ""NOTICE"" text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an ""AS IS"" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets ""[]""
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same ""printed page"" as the copyright notice for easier
      identification within third-party archives.

   Copyright 2010 LinkedIn

   Licensed under the Apache License, Version 2.0 (the ""License"");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an ""AS IS"" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
",,[],[],[],,,
2,642da2f28c9bc6e373603d6d9119ce33684090f5,NOTICE,,NOTICE,ModificationType.ADD,"@@ -0,0 +1,64 @@
+Kafka
+
+This product includes software developed by the Apache Software Foundation (http://www.apache.org/).
+
+This product includes jopt-simple, a library for parsing command line options (http://jopt-simple.sourceforge.net/).
+
+This product includes junit, developed by junit.org.
+
+This product includes zkclient, developed by Stefan Groschupf, http://github.com/sgroschupf/zkclient
+
+This produce includes joda-time, developed by joda.org (joda-time.sourceforge.net)
+
+This product includes the scala runtime and compiler (www.scala-lang.org) developed by EPFL, which includes the following license:
+
+This product includes zookeeper, a Hadoop sub-project (http://hadoop.apache.org/zookeeper)
+
+This product includes log4j, an Apache project (http://logging.apache.org/log4j)
+
+This product includes easymock, developed by easymock.org (http://easymock.org)
+
+This product includes objenesis, developed by Joe Walnes, Henri Tremblay, Leonardo Mesquita (http://code.google.com/p/objenesis)
+
+This product includes cglib, developed by sourceforge.net (http://cglib.sourceforge.net)
+
+This product includes asm, developed by OW2 consortium (http://asm.ow2.org)
+-----------------------------------------------------------------------
+
+SCALA LICENSE
+
+Copyright (c) 2002-2010 EPFL, Lausanne, unless otherwise specified.
+All rights reserved.
+
+This software was developed by the Programming Methods Laboratory of the
+Swiss Federal Institute of Technology (EPFL), Lausanne, Switzerland.
+
+Permission to use, copy, modify, and distribute this software in source
+or binary form for any purpose with or without fee is hereby granted,
+provided that the following conditions are met:
+
+   1. Redistributions of source code must retain the above copyright
+      notice, this list of conditions and the following disclaimer.
+
+   2. Redistributions in binary form must reproduce the above copyright
+      notice, this list of conditions and the following disclaimer in the
+      documentation and/or other materials provided with the distribution.
+
+   3. Neither the name of the EPFL nor the names of its contributors
+      may be used to endorse or promote products derived from this
+      software without specific prior written permission.
+
+
+THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGE.
+
+-----------------------------------------------------------------------
","{'added': [(1, 'Kafka'), (2, ''), (3, 'This product includes software developed by the Apache Software Foundation (http://www.apache.org/).'), (4, ''), (5, 'This product includes jopt-simple, a library for parsing command line options (http://jopt-simple.sourceforge.net/).'), (6, ''), (7, 'This product includes junit, developed by junit.org.'), (8, ''), (9, 'This product includes zkclient, developed by Stefan Groschupf, http://github.com/sgroschupf/zkclient'), (10, ''), (11, 'This produce includes joda-time, developed by joda.org (joda-time.sourceforge.net)'), (12, ''), (13, 'This product includes the scala runtime and compiler (www.scala-lang.org) developed by EPFL, which includes the following license:'), (14, ''), (15, 'This product includes zookeeper, a Hadoop sub-project (http://hadoop.apache.org/zookeeper)'), (16, ''), (17, 'This product includes log4j, an Apache project (http://logging.apache.org/log4j)'), (18, ''), (19, 'This product includes easymock, developed by easymock.org (http://easymock.org)'), (20, ''), (21, 'This product includes objenesis, developed by Joe Walnes, Henri Tremblay, Leonardo Mesquita (http://code.google.com/p/objenesis)'), (22, ''), (23, 'This product includes cglib, developed by sourceforge.net (http://cglib.sourceforge.net)'), (24, ''), (25, 'This product includes asm, developed by OW2 consortium (http://asm.ow2.org)'), (26, '-----------------------------------------------------------------------'), (27, ''), (28, 'SCALA LICENSE'), (29, ''), (30, 'Copyright (c) 2002-2010 EPFL, Lausanne, unless otherwise specified.'), (31, 'All rights reserved.'), (32, ''), (33, 'This software was developed by the Programming Methods Laboratory of the'), (34, 'Swiss Federal Institute of Technology (EPFL), Lausanne, Switzerland.'), (35, ''), (36, 'Permission to use, copy, modify, and distribute this software in source'), (37, 'or binary form for any purpose with or without fee is hereby granted,'), (38, 'provided that the following conditions are met:'), (39, ''), (40, '   1. Redistributions of source code must retain the above copyright'), (41, '      notice, this list of conditions and the following disclaimer.'), (42, ''), (43, '   2. Redistributions in binary form must reproduce the above copyright'), (44, '      notice, this list of conditions and the following disclaimer in the'), (45, '      documentation and/or other materials provided with the distribution.'), (46, ''), (47, '   3. Neither the name of the EPFL nor the names of its contributors'), (48, '      may be used to endorse or promote products derived from this'), (49, '      software without specific prior written permission.'), (50, ''), (51, ''), (52, ""THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND""), (53, 'ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE'), (54, 'IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE'), (55, 'ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE'), (56, 'FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL'), (57, 'DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR'), (58, 'SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER'), (59, 'CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT'), (60, 'LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY'), (61, 'OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF'), (62, 'SUCH DAMAGE.'), (63, ''), (64, '-----------------------------------------------------------------------')], 'deleted': []}",64,0,"Kafka

This product includes software developed by the Apache Software Foundation (http://www.apache.org/).

This product includes jopt-simple, a library for parsing command line options (http://jopt-simple.sourceforge.net/).

This product includes junit, developed by junit.org.

This product includes zkclient, developed by Stefan Groschupf, http://github.com/sgroschupf/zkclient

This produce includes joda-time, developed by joda.org (joda-time.sourceforge.net)

This product includes the scala runtime and compiler (www.scala-lang.org) developed by EPFL, which includes the following license:

This product includes zookeeper, a Hadoop sub-project (http://hadoop.apache.org/zookeeper)

This product includes log4j, an Apache project (http://logging.apache.org/log4j)

This product includes easymock, developed by easymock.org (http://easymock.org)

This product includes objenesis, developed by Joe Walnes, Henri Tremblay, Leonardo Mesquita (http://code.google.com/p/objenesis)

This product includes cglib, developed by sourceforge.net (http://cglib.sourceforge.net)

This product includes asm, developed by OW2 consortium (http://asm.ow2.org)
-----------------------------------------------------------------------

SCALA LICENSE

Copyright (c) 2002-2010 EPFL, Lausanne, unless otherwise specified.
All rights reserved.

This software was developed by the Programming Methods Laboratory of the
Swiss Federal Institute of Technology (EPFL), Lausanne, Switzerland.

Permission to use, copy, modify, and distribute this software in source
or binary form for any purpose with or without fee is hereby granted,
provided that the following conditions are met:

   1. Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

   2. Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

   3. Neither the name of the EPFL nor the names of its contributors
      may be used to endorse or promote products derived from this
      software without specific prior written permission.


THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.

-----------------------------------------------------------------------
",,[],[],[],,,
3,642da2f28c9bc6e373603d6d9119ce33684090f5,README.md,,README.md,ModificationType.ADD,"@@ -0,0 +1,55 @@
+# Kafka is a distributed publish/subscribe messaging system #
+
+It is designed to support the following
+
+* Persistent messaging with O(1) disk structures that provide constant time performance even with many TB of stored messages.
+* High-throughput: even with very modest hardware Kafka can support hundreds of thousands of messages per second.
+* Explicit support for partitioning messages over Kafka servers and distributing consumption over a cluster of consumer machines while maintaining per-partition ordering semantics.
+* Support for parallel data load into Hadoop.
+
+Kafka is aimed at providing a publish-subscribe solution that can handle all activity stream data and processing on a consumer-scale web site. This kind of activity (page views, searches, and other user actions) are a key ingredient in many of the social feature on the modern web. This data is typically handled by ""logging"" and ad hoc log aggregation solutions due to the throughput requirements. This kind of ad hoc solution is a viable solution to providing logging data to an offline analysis system like Hadoop, but is very limiting for building real-time processing. Kafka aims to unify offline and online processing by providing a mechanism for parallel load into Hadoop as well as the ability to partition real-time consumption over a cluster of machines.
+
+See our [web site](http://sna-projects.com/kafka) for more details on the project.
+
+## Contribution ##
+
+Kafka is a new project, and we are interested in building the community; we would welcome any thoughts or patches. You can reach us [here](http://groups.google.com/group/kafka-dev). 
+
+To get kafka code:
+  git clone git@github.com:kafka-dev/kafka.git kafka
+
+To build: 
+
+1. ./sbt
+2. update - This downloads all the dependencies for all sub projects
+3. package - This will compile all sub projects and creates all the jars
+
+Here are some useful sbt commands, to be executed at the sbt command prompt (./sbt) -
+
+actions : Lists all the sbt commands and their descriptions
+
+clean : Deletes all generated files (the target directory).
+
+clean-cache : Deletes the cache of artifacts downloaded for automatically managed dependencies.
+
+clean-lib : Deletes the managed library directory.
+
+compile : Compile all the sub projects, but not create the jars
+
+test : Run all unit tests in all sub projects
+
+release-zip : Create all the jars, run unit tests and create a deployable release zip
+
+package-all: Creates jars for src, test, docs etc
+
+projects : List all the sub projects 
+
+project sub_project_name : Switch to a particular sub-project. For example, to switch to the core kafka code, use ""project core-kafka""
+
+Following commands can be run only on a particular sub project -
+
+test-only package.test.TestName : Runs only the specified test in the current sub project
+
+run : Provides options to run any of the classes that have a main method. For example, you can switch to project java-examples, and run the examples there by executing ""project java-examples"" followed by ""run"" 
+
+
","{'added': [(1, '# Kafka is a distributed publish/subscribe messaging system #'), (2, ''), (3, 'It is designed to support the following'), (4, ''), (5, '* Persistent messaging with O(1) disk structures that provide constant time performance even with many TB of stored messages.'), (6, '* High-throughput: even with very modest hardware Kafka can support hundreds of thousands of messages per second.'), (7, '* Explicit support for partitioning messages over Kafka servers and distributing consumption over a cluster of consumer machines while maintaining per-partition ordering semantics.'), (8, '* Support for parallel data load into Hadoop.'), (9, ''), (10, 'Kafka is aimed at providing a publish-subscribe solution that can handle all activity stream data and processing on a consumer-scale web site. This kind of activity (page views, searches, and other user actions) are a key ingredient in many of the social feature on the modern web. This data is typically handled by ""logging"" and ad hoc log aggregation solutions due to the throughput requirements. This kind of ad hoc solution is a viable solution to providing logging data to an offline analysis system like Hadoop, but is very limiting for building real-time processing. Kafka aims to unify offline and online processing by providing a mechanism for parallel load into Hadoop as well as the ability to partition real-time consumption over a cluster of machines.'), (11, ''), (12, 'See our [web site](http://sna-projects.com/kafka) for more details on the project.'), (13, ''), (14, '## Contribution ##'), (15, ''), (16, 'Kafka is a new project, and we are interested in building the community; we would welcome any thoughts or patches. You can reach us [here](http://groups.google.com/group/kafka-dev).'), (17, ''), (18, 'To get kafka code:'), (19, '  git clone git@github.com:kafka-dev/kafka.git kafka'), (20, ''), (21, 'To build:'), (22, ''), (23, '1. ./sbt'), (24, '2. update - This downloads all the dependencies for all sub projects'), (25, '3. package - This will compile all sub projects and creates all the jars'), (26, ''), (27, 'Here are some useful sbt commands, to be executed at the sbt command prompt (./sbt) -'), (28, ''), (29, 'actions : Lists all the sbt commands and their descriptions'), (30, ''), (31, 'clean : Deletes all generated files (the target directory).'), (32, ''), (33, 'clean-cache : Deletes the cache of artifacts downloaded for automatically managed dependencies.'), (34, ''), (35, 'clean-lib : Deletes the managed library directory.'), (36, ''), (37, 'compile : Compile all the sub projects, but not create the jars'), (38, ''), (39, 'test : Run all unit tests in all sub projects'), (40, ''), (41, 'release-zip : Create all the jars, run unit tests and create a deployable release zip'), (42, ''), (43, 'package-all: Creates jars for src, test, docs etc'), (44, ''), (45, 'projects : List all the sub projects'), (46, ''), (47, 'project sub_project_name : Switch to a particular sub-project. For example, to switch to the core kafka code, use ""project core-kafka""'), (48, ''), (49, 'Following commands can be run only on a particular sub project -'), (50, ''), (51, 'test-only package.test.TestName : Runs only the specified test in the current sub project'), (52, ''), (53, 'run : Provides options to run any of the classes that have a main method. For example, you can switch to project java-examples, and run the examples there by executing ""project java-examples"" followed by ""run""'), (54, ''), (55, '')], 'deleted': []}",55,0,"# Kafka is a distributed publish/subscribe messaging system #

It is designed to support the following

* Persistent messaging with O(1) disk structures that provide constant time performance even with many TB of stored messages.
* High-throughput: even with very modest hardware Kafka can support hundreds of thousands of messages per second.
* Explicit support for partitioning messages over Kafka servers and distributing consumption over a cluster of consumer machines while maintaining per-partition ordering semantics.
* Support for parallel data load into Hadoop.

Kafka is aimed at providing a publish-subscribe solution that can handle all activity stream data and processing on a consumer-scale web site. This kind of activity (page views, searches, and other user actions) are a key ingredient in many of the social feature on the modern web. This data is typically handled by ""logging"" and ad hoc log aggregation solutions due to the throughput requirements. This kind of ad hoc solution is a viable solution to providing logging data to an offline analysis system like Hadoop, but is very limiting for building real-time processing. Kafka aims to unify offline and online processing by providing a mechanism for parallel load into Hadoop as well as the ability to partition real-time consumption over a cluster of machines.

See our [web site](http://sna-projects.com/kafka) for more details on the project.

## Contribution ##

Kafka is a new project, and we are interested in building the community; we would welcome any thoughts or patches. You can reach us [here](http://groups.google.com/group/kafka-dev). 

To get kafka code:
  git clone git@github.com:kafka-dev/kafka.git kafka

To build: 

1. ./sbt
2. update - This downloads all the dependencies for all sub projects
3. package - This will compile all sub projects and creates all the jars

Here are some useful sbt commands, to be executed at the sbt command prompt (./sbt) -

actions : Lists all the sbt commands and their descriptions

clean : Deletes all generated files (the target directory).

clean-cache : Deletes the cache of artifacts downloaded for automatically managed dependencies.

clean-lib : Deletes the managed library directory.

compile : Compile all the sub projects, but not create the jars

test : Run all unit tests in all sub projects

release-zip : Create all the jars, run unit tests and create a deployable release zip

package-all: Creates jars for src, test, docs etc

projects : List all the sub projects 

project sub_project_name : Switch to a particular sub-project. For example, to switch to the core kafka code, use ""project core-kafka""

Following commands can be run only on a particular sub project -

test-only package.test.TestName : Runs only the specified test in the current sub project

run : Provides options to run any of the classes that have a main method. For example, you can switch to project java-examples, and run the examples there by executing ""project java-examples"" followed by ""run"" 


",,[],[],[],,,
4,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-console-consumer-log4j.properties,,bin/kafka-console-consumer-log4j.properties,ModificationType.ADD,"@@ -0,0 +1,7 @@
+log4j.rootLogger=INFO, stderr
+
+log4j.appender.stderr=org.apache.log4j.ConsoleAppender
+log4j.appender.stderr.target=System.err
+log4j.appender.stderr.layout=org.apache.log4j.PatternLayout
+log4j.appender.stderr.layout.ConversionPattern=[%d] %p %m (%c)%n
+
","{'added': [(1, 'log4j.rootLogger=INFO, stderr'), (2, ''), (3, 'log4j.appender.stderr=org.apache.log4j.ConsoleAppender'), (4, 'log4j.appender.stderr.target=System.err'), (5, 'log4j.appender.stderr.layout=org.apache.log4j.PatternLayout'), (6, 'log4j.appender.stderr.layout.ConversionPattern=[%d] %p %m (%c)%n'), (7, '')], 'deleted': []}",7,0,"log4j.rootLogger=INFO, stderr

log4j.appender.stderr=org.apache.log4j.ConsoleAppender
log4j.appender.stderr.target=System.err
log4j.appender.stderr.layout=org.apache.log4j.PatternLayout
log4j.appender.stderr.layout.ConversionPattern=[%d] %p %m (%c)%n

",,[],[],[],,,
5,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-console-consumer.sh,,bin/kafka-console-consumer.sh,ModificationType.ADD,"@@ -0,0 +1,5 @@
+#!/bin/bash
+
+base_dir=$(dirname $0)
+export KAFKA_OPTS=""-Xmx512M -server -Dcom.sun.management.jmxremote -Dlog4j.configuration=file:$base_dir/kafka-console-consumer-log4j.properties""
+$base_dir/kafka-run-class.sh kafka.consumer.ConsoleConsumer $@
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, 'base_dir=$(dirname $0)'), (4, 'export KAFKA_OPTS=""-Xmx512M -server -Dcom.sun.management.jmxremote -Dlog4j.configuration=file:$base_dir/kafka-console-consumer-log4j.properties""'), (5, '$base_dir/kafka-run-class.sh kafka.consumer.ConsoleConsumer $@')], 'deleted': []}",5,0,"#!/bin/bash

base_dir=$(dirname $0)
export KAFKA_OPTS=""-Xmx512M -server -Dcom.sun.management.jmxremote -Dlog4j.configuration=file:$base_dir/kafka-console-consumer-log4j.properties""
$base_dir/kafka-run-class.sh kafka.consumer.ConsoleConsumer $@
",,[],[],[],,,
6,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-consumer-perf-test.sh,,bin/kafka-consumer-perf-test.sh,ModificationType.ADD,"@@ -0,0 +1,3 @@
+#!/bin/bash
+
+$(dirname $0)/kafka-run-class.sh kafka.tools.ConsumerPerformance $@
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, '$(dirname $0)/kafka-run-class.sh kafka.tools.ConsumerPerformance $@')], 'deleted': []}",3,0,"#!/bin/bash

$(dirname $0)/kafka-run-class.sh kafka.tools.ConsumerPerformance $@
",,[],[],[],,,
7,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-consumer-shell.sh,,bin/kafka-consumer-shell.sh,ModificationType.ADD,"@@ -0,0 +1,3 @@
+#!/bin/bash
+
+$(dirname $0)/kafka-run-class.sh kafka.tools.ConsumerShell $@
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, '$(dirname $0)/kafka-run-class.sh kafka.tools.ConsumerShell $@')], 'deleted': []}",3,0,"#!/bin/bash

$(dirname $0)/kafka-run-class.sh kafka.tools.ConsumerShell $@
",,[],[],[],,,
8,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-producer-perf-test.sh,,bin/kafka-producer-perf-test.sh,ModificationType.ADD,"@@ -0,0 +1,3 @@
+#!/bin/bash
+
+$(dirname $0)/kafka-run-class.sh kafka.tools.ProducerPerformance $@
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, '$(dirname $0)/kafka-run-class.sh kafka.tools.ProducerPerformance $@')], 'deleted': []}",3,0,"#!/bin/bash

$(dirname $0)/kafka-run-class.sh kafka.tools.ProducerPerformance $@
",,[],[],[],,,
9,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-producer-shell.sh,,bin/kafka-producer-shell.sh,ModificationType.ADD,"@@ -0,0 +1,3 @@
+#!/bin/bash
+
+$(dirname $0)/kafka-run-class.sh kafka.tools.ProducerShell $@
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, '$(dirname $0)/kafka-run-class.sh kafka.tools.ProducerShell $@')], 'deleted': []}",3,0,"#!/bin/bash

$(dirname $0)/kafka-run-class.sh kafka.tools.ProducerShell $@
",,[],[],[],,,
10,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-replay-log-producer.sh,,bin/kafka-replay-log-producer.sh,ModificationType.ADD,"@@ -0,0 +1,5 @@
+#!/bin/bash
+
+base_dir=$(dirname $0)
+export KAFKA_OPTS=""-Xmx512M -server -Dcom.sun.management.jmxremote -Dlog4j.configuration=file:$base_dir/../config/log4j.properties""
+$base_dir/kafka-run-class.sh kafka.tools.ReplayLogProducer $@
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, 'base_dir=$(dirname $0)'), (4, 'export KAFKA_OPTS=""-Xmx512M -server -Dcom.sun.management.jmxremote -Dlog4j.configuration=file:$base_dir/../config/log4j.properties""'), (5, '$base_dir/kafka-run-class.sh kafka.tools.ReplayLogProducer $@')], 'deleted': []}",5,0,"#!/bin/bash

base_dir=$(dirname $0)
export KAFKA_OPTS=""-Xmx512M -server -Dcom.sun.management.jmxremote -Dlog4j.configuration=file:$base_dir/../config/log4j.properties""
$base_dir/kafka-run-class.sh kafka.tools.ReplayLogProducer $@
",,[],[],[],,,
11,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-run-class.sh,,bin/kafka-run-class.sh,ModificationType.ADD,"@@ -0,0 +1,47 @@
+#!/bin/bash
+
+if [ $# -lt 1 ];
+then
+  echo ""USAGE: $0 classname [opts]""
+  exit 1
+fi
+
+base_dir=$(dirname $0)/..
+
+for file in $base_dir/project/boot/scala-2.8.0/lib/*.jar;
+do
+  CLASSPATH=$CLASSPATH:$file
+done
+
+for file in $base_dir/core/target/scala_2.8.0/*.jar;
+do
+  CLASSPATH=$CLASSPATH:$file
+done
+
+for file in $base_dir/core/lib/*.jar;
+do
+  CLASSPATH=$CLASSPATH:$file
+done
+
+for file in $base_dir/core/lib_managed/scala_2.8.0/compile/*.jar;
+do
+  if [ ${file##*/} != ""sbt-launch.jar"" ]; then
+    CLASSPATH=$CLASSPATH:$file
+  fi
+done
+if [ -z ""$KAFKA_JMX_OPTS"" ]; then
+  KAFKA_JMX_OPTS=""-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false ""
+fi
+if [ -z ""$KAFKA_OPTS"" ]; then
+  KAFKA_OPTS=""-Xmx512M -server  -Dlog4j.configuration=file:$base_dir/config/log4j.properties""
+fi
+if [  $JMX_PORT ]; then
+  KAFKA_JMX_OPTS=""$KAFKA_JMX_OPTS -Dcom.sun.management.jmxremote.port=$JMX_PORT ""
+fi
+if [ -z ""$JAVA_HOME"" ]; then
+  JAVA=""java""
+else
+  JAVA=""$JAVA_HOME/bin/java""
+fi
+
+$JAVA $KAFKA_OPTS $KAFKA_JMX_OPTS -cp $CLASSPATH $@
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, 'if [ $# -lt 1 ];'), (4, 'then'), (5, '  echo ""USAGE: $0 classname [opts]""'), (6, '  exit 1'), (7, 'fi'), (8, ''), (9, 'base_dir=$(dirname $0)/..'), (10, ''), (11, 'for file in $base_dir/project/boot/scala-2.8.0/lib/*.jar;'), (12, 'do'), (13, '  CLASSPATH=$CLASSPATH:$file'), (14, 'done'), (15, ''), (16, 'for file in $base_dir/core/target/scala_2.8.0/*.jar;'), (17, 'do'), (18, '  CLASSPATH=$CLASSPATH:$file'), (19, 'done'), (20, ''), (21, 'for file in $base_dir/core/lib/*.jar;'), (22, 'do'), (23, '  CLASSPATH=$CLASSPATH:$file'), (24, 'done'), (25, ''), (26, 'for file in $base_dir/core/lib_managed/scala_2.8.0/compile/*.jar;'), (27, 'do'), (28, '  if [ ${file##*/} != ""sbt-launch.jar"" ]; then'), (29, '    CLASSPATH=$CLASSPATH:$file'), (30, '  fi'), (31, 'done'), (32, 'if [ -z ""$KAFKA_JMX_OPTS"" ]; then'), (33, '  KAFKA_JMX_OPTS=""-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false ""'), (34, 'fi'), (35, 'if [ -z ""$KAFKA_OPTS"" ]; then'), (36, '  KAFKA_OPTS=""-Xmx512M -server  -Dlog4j.configuration=file:$base_dir/config/log4j.properties""'), (37, 'fi'), (38, 'if [  $JMX_PORT ]; then'), (39, '  KAFKA_JMX_OPTS=""$KAFKA_JMX_OPTS -Dcom.sun.management.jmxremote.port=$JMX_PORT ""'), (40, 'fi'), (41, 'if [ -z ""$JAVA_HOME"" ]; then'), (42, '  JAVA=""java""'), (43, 'else'), (44, '  JAVA=""$JAVA_HOME/bin/java""'), (45, 'fi'), (46, ''), (47, '$JAVA $KAFKA_OPTS $KAFKA_JMX_OPTS -cp $CLASSPATH $@')], 'deleted': []}",47,0,"#!/bin/bash

if [ $# -lt 1 ];
then
  echo ""USAGE: $0 classname [opts]""
  exit 1
fi

base_dir=$(dirname $0)/..

for file in $base_dir/project/boot/scala-2.8.0/lib/*.jar;
do
  CLASSPATH=$CLASSPATH:$file
done

for file in $base_dir/core/target/scala_2.8.0/*.jar;
do
  CLASSPATH=$CLASSPATH:$file
done

for file in $base_dir/core/lib/*.jar;
do
  CLASSPATH=$CLASSPATH:$file
done

for file in $base_dir/core/lib_managed/scala_2.8.0/compile/*.jar;
do
  if [ ${file##*/} != ""sbt-launch.jar"" ]; then
    CLASSPATH=$CLASSPATH:$file
  fi
done
if [ -z ""$KAFKA_JMX_OPTS"" ]; then
  KAFKA_JMX_OPTS=""-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false ""
fi
if [ -z ""$KAFKA_OPTS"" ]; then
  KAFKA_OPTS=""-Xmx512M -server  -Dlog4j.configuration=file:$base_dir/config/log4j.properties""
fi
if [  $JMX_PORT ]; then
  KAFKA_JMX_OPTS=""$KAFKA_JMX_OPTS -Dcom.sun.management.jmxremote.port=$JMX_PORT ""
fi
if [ -z ""$JAVA_HOME"" ]; then
  JAVA=""java""
else
  JAVA=""$JAVA_HOME/bin/java""
fi

$JAVA $KAFKA_OPTS $KAFKA_JMX_OPTS -cp $CLASSPATH $@
",,[],[],[],,,
12,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-server-start.sh,,bin/kafka-server-start.sh,ModificationType.ADD,"@@ -0,0 +1,11 @@
+#!/bin/bash
+
+if [ $# -lt 1 ];
+then
+	echo ""USAGE: $0 server.properties [consumer.properties]""
+	exit 1
+fi
+
+export JMX_PORT=""9999""
+
+$(dirname $0)/kafka-run-class.sh kafka.Kafka $@
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, 'if [ $# -lt 1 ];'), (4, 'then'), (5, '\techo ""USAGE: $0 server.properties [consumer.properties]""'), (6, '\texit 1'), (7, 'fi'), (8, ''), (9, 'export JMX_PORT=""9999""'), (10, ''), (11, '$(dirname $0)/kafka-run-class.sh kafka.Kafka $@')], 'deleted': []}",11,0,"#!/bin/bash

if [ $# -lt 1 ];
then
	echo ""USAGE: $0 server.properties [consumer.properties]""
	exit 1
fi

export JMX_PORT=""9999""

$(dirname $0)/kafka-run-class.sh kafka.Kafka $@
",,[],[],[],,,
13,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-server-stop.sh,,bin/kafka-server-stop.sh,ModificationType.ADD,"@@ -0,0 +1,2 @@
+#!/bin/sh
+ps ax | grep -i 'kafka.Kafka' | grep -v grep | awk '{print $1}' | xargs kill -SIGINT
","{'added': [(1, '#!/bin/sh'), (2, ""ps ax | grep -i 'kafka.Kafka' | grep -v grep | awk '{print $1}' | xargs kill -SIGINT"")], 'deleted': []}",2,0,"#!/bin/sh
ps ax | grep -i 'kafka.Kafka' | grep -v grep | awk '{print $1}' | xargs kill -SIGINT
",,[],[],[],,,
14,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-simple-consumer-perf-test.sh,,bin/kafka-simple-consumer-perf-test.sh,ModificationType.ADD,"@@ -0,0 +1,3 @@
+#!/bin/bash
+
+$(dirname $0)/kafka-run-class.sh kafka.tools.SimpleConsumerPerformance $@
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, '$(dirname $0)/kafka-run-class.sh kafka.tools.SimpleConsumerPerformance $@')], 'deleted': []}",3,0,"#!/bin/bash

$(dirname $0)/kafka-run-class.sh kafka.tools.SimpleConsumerPerformance $@
",,[],[],[],,,
15,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka-simple-consumer-shell.sh,,bin/kafka-simple-consumer-shell.sh,ModificationType.ADD,"@@ -0,0 +1,3 @@
+#!/bin/bash
+
+$(dirname $0)/kafka-run-class.sh kafka.tools.SimpleConsumerShell $@
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, '$(dirname $0)/kafka-run-class.sh kafka.tools.SimpleConsumerShell $@')], 'deleted': []}",3,0,"#!/bin/bash

$(dirname $0)/kafka-run-class.sh kafka.tools.SimpleConsumerShell $@
",,[],[],[],,,
16,642da2f28c9bc6e373603d6d9119ce33684090f5,zookeeper-server-start.sh,,bin/zookeeper-server-start.sh,ModificationType.ADD,"@@ -0,0 +1,9 @@
+#!/bin/bash
+
+if [ $# -ne 1 ];
+then
+	echo ""USAGE: $0 zookeeper.properties""
+	exit 1
+fi
+
+$(dirname $0)/kafka-run-class.sh org.apache.zookeeper.server.quorum.QuorumPeerMain $@
\ No newline at end of file
","{'added': [(1, '#!/bin/bash'), (2, ''), (3, 'if [ $# -ne 1 ];'), (4, 'then'), (5, '\techo ""USAGE: $0 zookeeper.properties""'), (6, '\texit 1'), (7, 'fi'), (8, ''), (9, '$(dirname $0)/kafka-run-class.sh org.apache.zookeeper.server.quorum.QuorumPeerMain $@')], 'deleted': []}",9,0,"#!/bin/bash

if [ $# -ne 1 ];
then
	echo ""USAGE: $0 zookeeper.properties""
	exit 1
fi

$(dirname $0)/kafka-run-class.sh org.apache.zookeeper.server.quorum.QuorumPeerMain $@",,[],[],[],,,
17,642da2f28c9bc6e373603d6d9119ce33684090f5,zookeeper-server-stop.sh,,bin/zookeeper-server-stop.sh,ModificationType.ADD,"@@ -0,0 +1,2 @@
+#!/bin/sh
+ps ax | grep -i 'zookeeper' | grep -v grep | awk '{print $1}' | xargs kill -SIGINT
","{'added': [(1, '#!/bin/sh'), (2, ""ps ax | grep -i 'zookeeper' | grep -v grep | awk '{print $1}' | xargs kill -SIGINT"")], 'deleted': []}",2,0,"#!/bin/sh
ps ax | grep -i 'zookeeper' | grep -v grep | awk '{print $1}' | xargs kill -SIGINT
",,[],[],[],,,
18,642da2f28c9bc6e373603d6d9119ce33684090f5,.gitignore,,clients/clojure/.gitignore,ModificationType.ADD,"@@ -0,0 +1,2 @@
+lib
+classes
","{'added': [(1, 'lib'), (2, 'classes')], 'deleted': []}",2,0,"lib
classes
",,[],[],[],,,
19,642da2f28c9bc6e373603d6d9119ce33684090f5,LICENSE,,clients/clojure/LICENSE,ModificationType.ADD,"@@ -0,0 +1,202 @@
+
+                              Apache License
+                        Version 2.0, January 2004
+                     http://www.apache.org/licenses/
+
+TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+1. Definitions.
+
+   ""License"" shall mean the terms and conditions for use, reproduction,
+   and distribution as defined by Sections 1 through 9 of this document.
+
+   ""Licensor"" shall mean the copyright owner or entity authorized by
+   the copyright owner that is granting the License.
+
+   ""Legal Entity"" shall mean the union of the acting entity and all
+   other entities that control, are controlled by, or are under common
+   control with that entity. For the purposes of this definition,
+   ""control"" means (i) the power, direct or indirect, to cause the
+   direction or management of such entity, whether by contract or
+   otherwise, or (ii) ownership of fifty percent (50%) or more of the
+   outstanding shares, or (iii) beneficial ownership of such entity.
+
+   ""You"" (or ""Your"") shall mean an individual or Legal Entity
+   exercising permissions granted by this License.
+
+   ""Source"" form shall mean the preferred form for making modifications,
+   including but not limited to software source code, documentation
+   source, and configuration files.
+
+   ""Object"" form shall mean any form resulting from mechanical
+   transformation or translation of a Source form, including but
+   not limited to compiled object code, generated documentation,
+   and conversions to other media types.
+
+   ""Work"" shall mean the work of authorship, whether in Source or
+   Object form, made available under the License, as indicated by a
+   copyright notice that is included in or attached to the work
+   (an example is provided in the Appendix below).
+
+   ""Derivative Works"" shall mean any work, whether in Source or Object
+   form, that is based on (or derived from) the Work and for which the
+   editorial revisions, annotations, elaborations, or other modifications
+   represent, as a whole, an original work of authorship. For the purposes
+   of this License, Derivative Works shall not include works that remain
+   separable from, or merely link (or bind by name) to the interfaces of,
+   the Work and Derivative Works thereof.
+
+   ""Contribution"" shall mean any work of authorship, including
+   the original version of the Work and any modifications or additions
+   to that Work or Derivative Works thereof, that is intentionally
+   submitted to Licensor for inclusion in the Work by the copyright owner
+   or by an individual or Legal Entity authorized to submit on behalf of
+   the copyright owner. For the purposes of this definition, ""submitted""
+   means any form of electronic, verbal, or written communication sent
+   to the Licensor or its representatives, including but not limited to
+   communication on electronic mailing lists, source code control systems,
+   and issue tracking systems that are managed by, or on behalf of, the
+   Licensor for the purpose of discussing and improving the Work, but
+   excluding communication that is conspicuously marked or otherwise
+   designated in writing by the copyright owner as ""Not a Contribution.""
+
+   ""Contributor"" shall mean Licensor and any individual or Legal Entity
+   on behalf of whom a Contribution has been received by Licensor and
+   subsequently incorporated within the Work.
+
+2. Grant of Copyright License. Subject to the terms and conditions of
+   this License, each Contributor hereby grants to You a perpetual,
+   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+   copyright license to reproduce, prepare Derivative Works of,
+   publicly display, publicly perform, sublicense, and distribute the
+   Work and such Derivative Works in Source or Object form.
+
+3. Grant of Patent License. Subject to the terms and conditions of
+   this License, each Contributor hereby grants to You a perpetual,
+   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+   (except as stated in this section) patent license to make, have made,
+   use, offer to sell, sell, import, and otherwise transfer the Work,
+   where such license applies only to those patent claims licensable
+   by such Contributor that are necessarily infringed by their
+   Contribution(s) alone or by combination of their Contribution(s)
+   with the Work to which such Contribution(s) was submitted. If You
+   institute patent litigation against any entity (including a
+   cross-claim or counterclaim in a lawsuit) alleging that the Work
+   or a Contribution incorporated within the Work constitutes direct
+   or contributory patent infringement, then any patent licenses
+   granted to You under this License for that Work shall terminate
+   as of the date such litigation is filed.
+
+4. Redistribution. You may reproduce and distribute copies of the
+   Work or Derivative Works thereof in any medium, with or without
+   modifications, and in Source or Object form, provided that You
+   meet the following conditions:
+
+   (a) You must give any other recipients of the Work or
+       Derivative Works a copy of this License; and
+
+   (b) You must cause any modified files to carry prominent notices
+       stating that You changed the files; and
+
+   (c) You must retain, in the Source form of any Derivative Works
+       that You distribute, all copyright, patent, trademark, and
+       attribution notices from the Source form of the Work,
+       excluding those notices that do not pertain to any part of
+       the Derivative Works; and
+
+   (d) If the Work includes a ""NOTICE"" text file as part of its
+       distribution, then any Derivative Works that You distribute must
+       include a readable copy of the attribution notices contained
+       within such NOTICE file, excluding those notices that do not
+       pertain to any part of the Derivative Works, in at least one
+       of the following places: within a NOTICE text file distributed
+       as part of the Derivative Works; within the Source form or
+       documentation, if provided along with the Derivative Works; or,
+       within a display generated by the Derivative Works, if and
+       wherever such third-party notices normally appear. The contents
+       of the NOTICE file are for informational purposes only and
+       do not modify the License. You may add Your own attribution
+       notices within Derivative Works that You distribute, alongside
+       or as an addendum to the NOTICE text from the Work, provided
+       that such additional attribution notices cannot be construed
+       as modifying the License.
+
+   You may add Your own copyright statement to Your modifications and
+   may provide additional or different license terms and conditions
+   for use, reproduction, or distribution of Your modifications, or
+   for any such Derivative Works as a whole, provided Your use,
+   reproduction, and distribution of the Work otherwise complies with
+   the conditions stated in this License.
+
+5. Submission of Contributions. Unless You explicitly state otherwise,
+   any Contribution intentionally submitted for inclusion in the Work
+   by You to the Licensor shall be under the terms and conditions of
+   this License, without any additional terms or conditions.
+   Notwithstanding the above, nothing herein shall supersede or modify
+   the terms of any separate license agreement you may have executed
+   with Licensor regarding such Contributions.
+
+6. Trademarks. This License does not grant permission to use the trade
+   names, trademarks, service marks, or product names of the Licensor,
+   except as required for reasonable and customary use in describing the
+   origin of the Work and reproducing the content of the NOTICE file.
+
+7. Disclaimer of Warranty. Unless required by applicable law or
+   agreed to in writing, Licensor provides the Work (and each
+   Contributor provides its Contributions) on an ""AS IS"" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+   implied, including, without limitation, any warranties or conditions
+   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+   PARTICULAR PURPOSE. You are solely responsible for determining the
+   appropriateness of using or redistributing the Work and assume any
+   risks associated with Your exercise of permissions under this License.
+
+8. Limitation of Liability. In no event and under no legal theory,
+   whether in tort (including negligence), contract, or otherwise,
+   unless required by applicable law (such as deliberate and grossly
+   negligent acts) or agreed to in writing, shall any Contributor be
+   liable to You for damages, including any direct, indirect, special,
+   incidental, or consequential damages of any character arising as a
+   result of this License or out of the use or inability to use the
+   Work (including but not limited to damages for loss of goodwill,
+   work stoppage, computer failure or malfunction, or any and all
+   other commercial damages or losses), even if such Contributor
+   has been advised of the possibility of such damages.
+
+9. Accepting Warranty or Additional Liability. While redistributing
+   the Work or Derivative Works thereof, You may choose to offer,
+   and charge a fee for, acceptance of support, warranty, indemnity,
+   or other liability obligations and/or rights consistent with this
+   License. However, in accepting such obligations, You may act only
+   on Your own behalf and on Your sole responsibility, not on behalf
+   of any other Contributor, and only if You agree to indemnify,
+   defend, and hold each Contributor harmless for any liability
+   incurred by, or claims asserted against, such Contributor by reason
+   of your accepting any such warranty or additional liability.
+
+END OF TERMS AND CONDITIONS
+
+APPENDIX: How to apply the Apache License to your work.
+
+   To apply the Apache License to your work, attach the following
+   boilerplate notice, with the fields enclosed by brackets ""[]""
+   replaced with your own identifying information. (Don't include
+   the brackets!)  The text should be enclosed in the appropriate
+   comment syntax for the file format. We also recommend that a
+   file or class name and description of purpose be included on the
+   same ""printed page"" as the copyright notice for easier
+   identification within third-party archives.
+
+Copyright 2011 LinkedIn
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
","{'added': [(1, ''), (2, '                              Apache License'), (3, '                        Version 2.0, January 2004'), (4, '                     http://www.apache.org/licenses/'), (5, ''), (6, 'TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION'), (7, ''), (8, '1. Definitions.'), (9, ''), (10, '   ""License"" shall mean the terms and conditions for use, reproduction,'), (11, '   and distribution as defined by Sections 1 through 9 of this document.'), (12, ''), (13, '   ""Licensor"" shall mean the copyright owner or entity authorized by'), (14, '   the copyright owner that is granting the License.'), (15, ''), (16, '   ""Legal Entity"" shall mean the union of the acting entity and all'), (17, '   other entities that control, are controlled by, or are under common'), (18, '   control with that entity. For the purposes of this definition,'), (19, '   ""control"" means (i) the power, direct or indirect, to cause the'), (20, '   direction or management of such entity, whether by contract or'), (21, '   otherwise, or (ii) ownership of fifty percent (50%) or more of the'), (22, '   outstanding shares, or (iii) beneficial ownership of such entity.'), (23, ''), (24, '   ""You"" (or ""Your"") shall mean an individual or Legal Entity'), (25, '   exercising permissions granted by this License.'), (26, ''), (27, '   ""Source"" form shall mean the preferred form for making modifications,'), (28, '   including but not limited to software source code, documentation'), (29, '   source, and configuration files.'), (30, ''), (31, '   ""Object"" form shall mean any form resulting from mechanical'), (32, '   transformation or translation of a Source form, including but'), (33, '   not limited to compiled object code, generated documentation,'), (34, '   and conversions to other media types.'), (35, ''), (36, '   ""Work"" shall mean the work of authorship, whether in Source or'), (37, '   Object form, made available under the License, as indicated by a'), (38, '   copyright notice that is included in or attached to the work'), (39, '   (an example is provided in the Appendix below).'), (40, ''), (41, '   ""Derivative Works"" shall mean any work, whether in Source or Object'), (42, '   form, that is based on (or derived from) the Work and for which the'), (43, '   editorial revisions, annotations, elaborations, or other modifications'), (44, '   represent, as a whole, an original work of authorship. For the purposes'), (45, '   of this License, Derivative Works shall not include works that remain'), (46, '   separable from, or merely link (or bind by name) to the interfaces of,'), (47, '   the Work and Derivative Works thereof.'), (48, ''), (49, '   ""Contribution"" shall mean any work of authorship, including'), (50, '   the original version of the Work and any modifications or additions'), (51, '   to that Work or Derivative Works thereof, that is intentionally'), (52, '   submitted to Licensor for inclusion in the Work by the copyright owner'), (53, '   or by an individual or Legal Entity authorized to submit on behalf of'), (54, '   the copyright owner. For the purposes of this definition, ""submitted""'), (55, '   means any form of electronic, verbal, or written communication sent'), (56, '   to the Licensor or its representatives, including but not limited to'), (57, '   communication on electronic mailing lists, source code control systems,'), (58, '   and issue tracking systems that are managed by, or on behalf of, the'), (59, '   Licensor for the purpose of discussing and improving the Work, but'), (60, '   excluding communication that is conspicuously marked or otherwise'), (61, '   designated in writing by the copyright owner as ""Not a Contribution.""'), (62, ''), (63, '   ""Contributor"" shall mean Licensor and any individual or Legal Entity'), (64, '   on behalf of whom a Contribution has been received by Licensor and'), (65, '   subsequently incorporated within the Work.'), (66, ''), (67, '2. Grant of Copyright License. Subject to the terms and conditions of'), (68, '   this License, each Contributor hereby grants to You a perpetual,'), (69, '   worldwide, non-exclusive, no-charge, royalty-free, irrevocable'), (70, '   copyright license to reproduce, prepare Derivative Works of,'), (71, '   publicly display, publicly perform, sublicense, and distribute the'), (72, '   Work and such Derivative Works in Source or Object form.'), (73, ''), (74, '3. Grant of Patent License. Subject to the terms and conditions of'), (75, '   this License, each Contributor hereby grants to You a perpetual,'), (76, '   worldwide, non-exclusive, no-charge, royalty-free, irrevocable'), (77, '   (except as stated in this section) patent license to make, have made,'), (78, '   use, offer to sell, sell, import, and otherwise transfer the Work,'), (79, '   where such license applies only to those patent claims licensable'), (80, '   by such Contributor that are necessarily infringed by their'), (81, '   Contribution(s) alone or by combination of their Contribution(s)'), (82, '   with the Work to which such Contribution(s) was submitted. If You'), (83, '   institute patent litigation against any entity (including a'), (84, '   cross-claim or counterclaim in a lawsuit) alleging that the Work'), (85, '   or a Contribution incorporated within the Work constitutes direct'), (86, '   or contributory patent infringement, then any patent licenses'), (87, '   granted to You under this License for that Work shall terminate'), (88, '   as of the date such litigation is filed.'), (89, ''), (90, '4. Redistribution. You may reproduce and distribute copies of the'), (91, '   Work or Derivative Works thereof in any medium, with or without'), (92, '   modifications, and in Source or Object form, provided that You'), (93, '   meet the following conditions:'), (94, ''), (95, '   (a) You must give any other recipients of the Work or'), (96, '       Derivative Works a copy of this License; and'), (97, ''), (98, '   (b) You must cause any modified files to carry prominent notices'), (99, '       stating that You changed the files; and'), (100, ''), (101, '   (c) You must retain, in the Source form of any Derivative Works'), (102, '       that You distribute, all copyright, patent, trademark, and'), (103, '       attribution notices from the Source form of the Work,'), (104, '       excluding those notices that do not pertain to any part of'), (105, '       the Derivative Works; and'), (106, ''), (107, '   (d) If the Work includes a ""NOTICE"" text file as part of its'), (108, '       distribution, then any Derivative Works that You distribute must'), (109, '       include a readable copy of the attribution notices contained'), (110, '       within such NOTICE file, excluding those notices that do not'), (111, '       pertain to any part of the Derivative Works, in at least one'), (112, '       of the following places: within a NOTICE text file distributed'), (113, '       as part of the Derivative Works; within the Source form or'), (114, '       documentation, if provided along with the Derivative Works; or,'), (115, '       within a display generated by the Derivative Works, if and'), (116, '       wherever such third-party notices normally appear. The contents'), (117, '       of the NOTICE file are for informational purposes only and'), (118, '       do not modify the License. You may add Your own attribution'), (119, '       notices within Derivative Works that You distribute, alongside'), (120, '       or as an addendum to the NOTICE text from the Work, provided'), (121, '       that such additional attribution notices cannot be construed'), (122, '       as modifying the License.'), (123, ''), (124, '   You may add Your own copyright statement to Your modifications and'), (125, '   may provide additional or different license terms and conditions'), (126, '   for use, reproduction, or distribution of Your modifications, or'), (127, '   for any such Derivative Works as a whole, provided Your use,'), (128, '   reproduction, and distribution of the Work otherwise complies with'), (129, '   the conditions stated in this License.'), (130, ''), (131, '5. Submission of Contributions. Unless You explicitly state otherwise,'), (132, '   any Contribution intentionally submitted for inclusion in the Work'), (133, '   by You to the Licensor shall be under the terms and conditions of'), (134, '   this License, without any additional terms or conditions.'), (135, '   Notwithstanding the above, nothing herein shall supersede or modify'), (136, '   the terms of any separate license agreement you may have executed'), (137, '   with Licensor regarding such Contributions.'), (138, ''), (139, '6. Trademarks. This License does not grant permission to use the trade'), (140, '   names, trademarks, service marks, or product names of the Licensor,'), (141, '   except as required for reasonable and customary use in describing the'), (142, '   origin of the Work and reproducing the content of the NOTICE file.'), (143, ''), (144, '7. Disclaimer of Warranty. Unless required by applicable law or'), (145, '   agreed to in writing, Licensor provides the Work (and each'), (146, '   Contributor provides its Contributions) on an ""AS IS"" BASIS,'), (147, '   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'), (148, '   implied, including, without limitation, any warranties or conditions'), (149, '   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A'), (150, '   PARTICULAR PURPOSE. You are solely responsible for determining the'), (151, '   appropriateness of using or redistributing the Work and assume any'), (152, '   risks associated with Your exercise of permissions under this License.'), (153, ''), (154, '8. Limitation of Liability. In no event and under no legal theory,'), (155, '   whether in tort (including negligence), contract, or otherwise,'), (156, '   unless required by applicable law (such as deliberate and grossly'), (157, '   negligent acts) or agreed to in writing, shall any Contributor be'), (158, '   liable to You for damages, including any direct, indirect, special,'), (159, '   incidental, or consequential damages of any character arising as a'), (160, '   result of this License or out of the use or inability to use the'), (161, '   Work (including but not limited to damages for loss of goodwill,'), (162, '   work stoppage, computer failure or malfunction, or any and all'), (163, '   other commercial damages or losses), even if such Contributor'), (164, '   has been advised of the possibility of such damages.'), (165, ''), (166, '9. Accepting Warranty or Additional Liability. While redistributing'), (167, '   the Work or Derivative Works thereof, You may choose to offer,'), (168, '   and charge a fee for, acceptance of support, warranty, indemnity,'), (169, '   or other liability obligations and/or rights consistent with this'), (170, '   License. However, in accepting such obligations, You may act only'), (171, '   on Your own behalf and on Your sole responsibility, not on behalf'), (172, '   of any other Contributor, and only if You agree to indemnify,'), (173, '   defend, and hold each Contributor harmless for any liability'), (174, '   incurred by, or claims asserted against, such Contributor by reason'), (175, '   of your accepting any such warranty or additional liability.'), (176, ''), (177, 'END OF TERMS AND CONDITIONS'), (178, ''), (179, 'APPENDIX: How to apply the Apache License to your work.'), (180, ''), (181, '   To apply the Apache License to your work, attach the following'), (182, '   boilerplate notice, with the fields enclosed by brackets ""[]""'), (183, ""   replaced with your own identifying information. (Don't include""), (184, '   the brackets!)  The text should be enclosed in the appropriate'), (185, '   comment syntax for the file format. We also recommend that a'), (186, '   file or class name and description of purpose be included on the'), (187, '   same ""printed page"" as the copyright notice for easier'), (188, '   identification within third-party archives.'), (189, ''), (190, 'Copyright 2011 LinkedIn'), (191, ''), (192, 'Licensed under the Apache License, Version 2.0 (the ""License"");'), (193, 'you may not use this file except in compliance with the License.'), (194, 'You may obtain a copy of the License at'), (195, ''), (196, '    http://www.apache.org/licenses/LICENSE-2.0'), (197, ''), (198, 'Unless required by applicable law or agreed to in writing, software'), (199, 'distributed under the License is distributed on an ""AS IS"" BASIS,'), (200, 'WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (201, 'See the License for the specific language governing permissions and'), (202, 'limitations under the License.')], 'deleted': []}",202,0,"
                              Apache License
                        Version 2.0, January 2004
                     http://www.apache.org/licenses/

TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

1. Definitions.

   ""License"" shall mean the terms and conditions for use, reproduction,
   and distribution as defined by Sections 1 through 9 of this document.

   ""Licensor"" shall mean the copyright owner or entity authorized by
   the copyright owner that is granting the License.

   ""Legal Entity"" shall mean the union of the acting entity and all
   other entities that control, are controlled by, or are under common
   control with that entity. For the purposes of this definition,
   ""control"" means (i) the power, direct or indirect, to cause the
   direction or management of such entity, whether by contract or
   otherwise, or (ii) ownership of fifty percent (50%) or more of the
   outstanding shares, or (iii) beneficial ownership of such entity.

   ""You"" (or ""Your"") shall mean an individual or Legal Entity
   exercising permissions granted by this License.

   ""Source"" form shall mean the preferred form for making modifications,
   including but not limited to software source code, documentation
   source, and configuration files.

   ""Object"" form shall mean any form resulting from mechanical
   transformation or translation of a Source form, including but
   not limited to compiled object code, generated documentation,
   and conversions to other media types.

   ""Work"" shall mean the work of authorship, whether in Source or
   Object form, made available under the License, as indicated by a
   copyright notice that is included in or attached to the work
   (an example is provided in the Appendix below).

   ""Derivative Works"" shall mean any work, whether in Source or Object
   form, that is based on (or derived from) the Work and for which the
   editorial revisions, annotations, elaborations, or other modifications
   represent, as a whole, an original work of authorship. For the purposes
   of this License, Derivative Works shall not include works that remain
   separable from, or merely link (or bind by name) to the interfaces of,
   the Work and Derivative Works thereof.

   ""Contribution"" shall mean any work of authorship, including
   the original version of the Work and any modifications or additions
   to that Work or Derivative Works thereof, that is intentionally
   submitted to Licensor for inclusion in the Work by the copyright owner
   or by an individual or Legal Entity authorized to submit on behalf of
   the copyright owner. For the purposes of this definition, ""submitted""
   means any form of electronic, verbal, or written communication sent
   to the Licensor or its representatives, including but not limited to
   communication on electronic mailing lists, source code control systems,
   and issue tracking systems that are managed by, or on behalf of, the
   Licensor for the purpose of discussing and improving the Work, but
   excluding communication that is conspicuously marked or otherwise
   designated in writing by the copyright owner as ""Not a Contribution.""

   ""Contributor"" shall mean Licensor and any individual or Legal Entity
   on behalf of whom a Contribution has been received by Licensor and
   subsequently incorporated within the Work.

2. Grant of Copyright License. Subject to the terms and conditions of
   this License, each Contributor hereby grants to You a perpetual,
   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   copyright license to reproduce, prepare Derivative Works of,
   publicly display, publicly perform, sublicense, and distribute the
   Work and such Derivative Works in Source or Object form.

3. Grant of Patent License. Subject to the terms and conditions of
   this License, each Contributor hereby grants to You a perpetual,
   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   (except as stated in this section) patent license to make, have made,
   use, offer to sell, sell, import, and otherwise transfer the Work,
   where such license applies only to those patent claims licensable
   by such Contributor that are necessarily infringed by their
   Contribution(s) alone or by combination of their Contribution(s)
   with the Work to which such Contribution(s) was submitted. If You
   institute patent litigation against any entity (including a
   cross-claim or counterclaim in a lawsuit) alleging that the Work
   or a Contribution incorporated within the Work constitutes direct
   or contributory patent infringement, then any patent licenses
   granted to You under this License for that Work shall terminate
   as of the date such litigation is filed.

4. Redistribution. You may reproduce and distribute copies of the
   Work or Derivative Works thereof in any medium, with or without
   modifications, and in Source or Object form, provided that You
   meet the following conditions:

   (a) You must give any other recipients of the Work or
       Derivative Works a copy of this License; and

   (b) You must cause any modified files to carry prominent notices
       stating that You changed the files; and

   (c) You must retain, in the Source form of any Derivative Works
       that You distribute, all copyright, patent, trademark, and
       attribution notices from the Source form of the Work,
       excluding those notices that do not pertain to any part of
       the Derivative Works; and

   (d) If the Work includes a ""NOTICE"" text file as part of its
       distribution, then any Derivative Works that You distribute must
       include a readable copy of the attribution notices contained
       within such NOTICE file, excluding those notices that do not
       pertain to any part of the Derivative Works, in at least one
       of the following places: within a NOTICE text file distributed
       as part of the Derivative Works; within the Source form or
       documentation, if provided along with the Derivative Works; or,
       within a display generated by the Derivative Works, if and
       wherever such third-party notices normally appear. The contents
       of the NOTICE file are for informational purposes only and
       do not modify the License. You may add Your own attribution
       notices within Derivative Works that You distribute, alongside
       or as an addendum to the NOTICE text from the Work, provided
       that such additional attribution notices cannot be construed
       as modifying the License.

   You may add Your own copyright statement to Your modifications and
   may provide additional or different license terms and conditions
   for use, reproduction, or distribution of Your modifications, or
   for any such Derivative Works as a whole, provided Your use,
   reproduction, and distribution of the Work otherwise complies with
   the conditions stated in this License.

5. Submission of Contributions. Unless You explicitly state otherwise,
   any Contribution intentionally submitted for inclusion in the Work
   by You to the Licensor shall be under the terms and conditions of
   this License, without any additional terms or conditions.
   Notwithstanding the above, nothing herein shall supersede or modify
   the terms of any separate license agreement you may have executed
   with Licensor regarding such Contributions.

6. Trademarks. This License does not grant permission to use the trade
   names, trademarks, service marks, or product names of the Licensor,
   except as required for reasonable and customary use in describing the
   origin of the Work and reproducing the content of the NOTICE file.

7. Disclaimer of Warranty. Unless required by applicable law or
   agreed to in writing, Licensor provides the Work (and each
   Contributor provides its Contributions) on an ""AS IS"" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
   implied, including, without limitation, any warranties or conditions
   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
   PARTICULAR PURPOSE. You are solely responsible for determining the
   appropriateness of using or redistributing the Work and assume any
   risks associated with Your exercise of permissions under this License.

8. Limitation of Liability. In no event and under no legal theory,
   whether in tort (including negligence), contract, or otherwise,
   unless required by applicable law (such as deliberate and grossly
   negligent acts) or agreed to in writing, shall any Contributor be
   liable to You for damages, including any direct, indirect, special,
   incidental, or consequential damages of any character arising as a
   result of this License or out of the use or inability to use the
   Work (including but not limited to damages for loss of goodwill,
   work stoppage, computer failure or malfunction, or any and all
   other commercial damages or losses), even if such Contributor
   has been advised of the possibility of such damages.

9. Accepting Warranty or Additional Liability. While redistributing
   the Work or Derivative Works thereof, You may choose to offer,
   and charge a fee for, acceptance of support, warranty, indemnity,
   or other liability obligations and/or rights consistent with this
   License. However, in accepting such obligations, You may act only
   on Your own behalf and on Your sole responsibility, not on behalf
   of any other Contributor, and only if You agree to indemnify,
   defend, and hold each Contributor harmless for any liability
   incurred by, or claims asserted against, such Contributor by reason
   of your accepting any such warranty or additional liability.

END OF TERMS AND CONDITIONS

APPENDIX: How to apply the Apache License to your work.

   To apply the Apache License to your work, attach the following
   boilerplate notice, with the fields enclosed by brackets ""[]""
   replaced with your own identifying information. (Don't include
   the brackets!)  The text should be enclosed in the appropriate
   comment syntax for the file format. We also recommend that a
   file or class name and description of purpose be included on the
   same ""printed page"" as the copyright notice for easier
   identification within third-party archives.

Copyright 2011 LinkedIn

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
",,[],[],[],,,
20,642da2f28c9bc6e373603d6d9119ce33684090f5,README.md,,clients/clojure/README.md,ModificationType.ADD,"@@ -0,0 +1,50 @@
+# kafka-clj
+kafka-clj provides a producer and consumer that supports a basic fetch API as well as a managed sequence interface. Multifetch is not supported yet.
+
+## Quick Start
+
+Download and start [Kafka](http://sna-projects.com/kafka/quickstart.php). 
+
+Pull dependencies with [Leiningen](https://github.com/technomancy/leiningen):
+
+    $ lein deps
+
+And run the example:
+
+    $ lein run-example
+
+## Usage
+
+### Sending messages
+
+    (with-open [p (producer ""localhost"" 9092)]
+      (produce p ""test"" 0 ""Message 1"")
+      (produce p ""test"" 0 [""Message 2"" ""Message 3""]))
+
+### Simple consumer
+
+    (with-open [c (consumer ""localhost"" 9092)]
+      (let [offs (offsets c ""test"" 0 -1 10)]
+        (consume c ""test"" 0 (last offs) 1000000)))
+
+### Consumer sequence
+
+    (with-open [c (consumer ""localhost"" 9092)]
+      (doseq [m (consume-seq c ""test"" 0 {:blocking true})]
+        (println m)))
+
+Following options are supported:
+
+* :blocking _boolean_ default false, sequence returns nil the first time fetch does not return new messages. If set to true, the sequence tries to fetch new messages :repeat-count times every :repeat-timeout milliseconds. 
+* :repeat-count _int_ number of attempts to fetch new messages before terminating, default 10.
+* :repeat-timeout _int_ wait time in milliseconds between fetch attempts, default 1000.
+* :offset   _long_ initialized to highest offset if not provided.
+* :max-size _int_  max result message size, default 1000000.
+
+### Serialization
+
+Load namespace _kafka.print_ for basic print_dup/read-string serialization or _kafka.serializeable_ for Java object serialization. For custom serialization implement Pack and Unpack protocols.
+
+
+Questions? Email adam.smyczek \_at\_ gmail.com.
+
","{'added': [(1, '# kafka-clj'), (2, 'kafka-clj provides a producer and consumer that supports a basic fetch API as well as a managed sequence interface. Multifetch is not supported yet.'), (3, ''), (4, '## Quick Start'), (5, ''), (6, 'Download and start [Kafka](http://sna-projects.com/kafka/quickstart.php).'), (7, ''), (8, 'Pull dependencies with [Leiningen](https://github.com/technomancy/leiningen):'), (9, ''), (10, '    $ lein deps'), (11, ''), (12, 'And run the example:'), (13, ''), (14, '    $ lein run-example'), (15, ''), (16, '## Usage'), (17, ''), (18, '### Sending messages'), (19, ''), (20, '    (with-open [p (producer ""localhost"" 9092)]'), (21, '      (produce p ""test"" 0 ""Message 1"")'), (22, '      (produce p ""test"" 0 [""Message 2"" ""Message 3""]))'), (23, ''), (24, '### Simple consumer'), (25, ''), (26, '    (with-open [c (consumer ""localhost"" 9092)]'), (27, '      (let [offs (offsets c ""test"" 0 -1 10)]'), (28, '        (consume c ""test"" 0 (last offs) 1000000)))'), (29, ''), (30, '### Consumer sequence'), (31, ''), (32, '    (with-open [c (consumer ""localhost"" 9092)]'), (33, '      (doseq [m (consume-seq c ""test"" 0 {:blocking true})]'), (34, '        (println m)))'), (35, ''), (36, 'Following options are supported:'), (37, ''), (38, '* :blocking _boolean_ default false, sequence returns nil the first time fetch does not return new messages. If set to true, the sequence tries to fetch new messages :repeat-count times every :repeat-timeout milliseconds.'), (39, '* :repeat-count _int_ number of attempts to fetch new messages before terminating, default 10.'), (40, '* :repeat-timeout _int_ wait time in milliseconds between fetch attempts, default 1000.'), (41, '* :offset   _long_ initialized to highest offset if not provided.'), (42, '* :max-size _int_  max result message size, default 1000000.'), (43, ''), (44, '### Serialization'), (45, ''), (46, 'Load namespace _kafka.print_ for basic print_dup/read-string serialization or _kafka.serializeable_ for Java object serialization. For custom serialization implement Pack and Unpack protocols.'), (47, ''), (48, ''), (49, 'Questions? Email adam.smyczek \\_at\\_ gmail.com.'), (50, '')], 'deleted': []}",50,0,"# kafka-clj
kafka-clj provides a producer and consumer that supports a basic fetch API as well as a managed sequence interface. Multifetch is not supported yet.

## Quick Start

Download and start [Kafka](http://sna-projects.com/kafka/quickstart.php). 

Pull dependencies with [Leiningen](https://github.com/technomancy/leiningen):

    $ lein deps

And run the example:

    $ lein run-example

## Usage

### Sending messages

    (with-open [p (producer ""localhost"" 9092)]
      (produce p ""test"" 0 ""Message 1"")
      (produce p ""test"" 0 [""Message 2"" ""Message 3""]))

### Simple consumer

    (with-open [c (consumer ""localhost"" 9092)]
      (let [offs (offsets c ""test"" 0 -1 10)]
        (consume c ""test"" 0 (last offs) 1000000)))

### Consumer sequence

    (with-open [c (consumer ""localhost"" 9092)]
      (doseq [m (consume-seq c ""test"" 0 {:blocking true})]
        (println m)))

Following options are supported:

* :blocking _boolean_ default false, sequence returns nil the first time fetch does not return new messages. If set to true, the sequence tries to fetch new messages :repeat-count times every :repeat-timeout milliseconds. 
* :repeat-count _int_ number of attempts to fetch new messages before terminating, default 10.
* :repeat-timeout _int_ wait time in milliseconds between fetch attempts, default 1000.
* :offset   _long_ initialized to highest offset if not provided.
* :max-size _int_  max result message size, default 1000000.

### Serialization

Load namespace _kafka.print_ for basic print_dup/read-string serialization or _kafka.serializeable_ for Java object serialization. For custom serialization implement Pack and Unpack protocols.


Questions? Email adam.smyczek \_at\_ gmail.com.

",,[],[],[],,,
21,642da2f28c9bc6e373603d6d9119ce33684090f5,run_example.clj,,clients/clojure/leiningen/run_example.clj,ModificationType.ADD,"@@ -0,0 +1,10 @@
+(ns leiningen.run-example
+  (:use [leiningen.compile :only (eval-in-project)]))
+
+(defn run-example
+  [project & args]
+  (eval-in-project project
+    `(do
+       (require 'kafka.example)
+       (kafka.example/run))))
+
","{'added': [(1, '(ns leiningen.run-example'), (2, '  (:use [leiningen.compile :only (eval-in-project)]))'), (3, ''), (4, '(defn run-example'), (5, '  [project & args]'), (6, '  (eval-in-project project'), (7, '    `(do'), (8, ""       (require 'kafka.example)""), (9, '       (kafka.example/run))))'), (10, '')], 'deleted': []}",10,0,"(ns leiningen.run-example
  (:use [leiningen.compile :only (eval-in-project)]))

(defn run-example
  [project & args]
  (eval-in-project project
    `(do
       (require 'kafka.example)
       (kafka.example/run))))

",,[],[],[],,,
22,642da2f28c9bc6e373603d6d9119ce33684090f5,project.clj,,clients/clojure/project.clj,ModificationType.ADD,"@@ -0,0 +1,13 @@
+(defproject kafka-clj ""0.1-SNAPSHOT""
+  :description ""Kafka client for Clojure.""
+  :url          ""http://sna-projects.com/kafka/""
+  :dependencies [[org.clojure/clojure	""1.2.0""]
+                 [org.clojure/clojure-contrib	""1.2.0""]
+                 [log4j ""1.2.15"" :exclusions [javax.mail/mail
+                                              javax.jms/jms
+                                              com.sun.jdmk/jmxtools
+                                              com.sun.jmx/jmxri]]]
+  :disable-deps-clean false
+  :warn-on-reflection true
+  :source-path ""src""
+  :test-path ""test"")
","{'added': [(1, '(defproject kafka-clj ""0.1-SNAPSHOT""'), (2, '  :description ""Kafka client for Clojure.""'), (3, '  :url          ""http://sna-projects.com/kafka/""'), (4, '  :dependencies [[org.clojure/clojure\t""1.2.0""]'), (5, '                 [org.clojure/clojure-contrib\t""1.2.0""]'), (6, '                 [log4j ""1.2.15"" :exclusions [javax.mail/mail'), (7, '                                              javax.jms/jms'), (8, '                                              com.sun.jdmk/jmxtools'), (9, '                                              com.sun.jmx/jmxri]]]'), (10, '  :disable-deps-clean false'), (11, '  :warn-on-reflection true'), (12, '  :source-path ""src""'), (13, '  :test-path ""test"")')], 'deleted': []}",13,0,"(defproject kafka-clj ""0.1-SNAPSHOT""
  :description ""Kafka client for Clojure.""
  :url          ""http://sna-projects.com/kafka/""
  :dependencies [[org.clojure/clojure	""1.2.0""]
                 [org.clojure/clojure-contrib	""1.2.0""]
                 [log4j ""1.2.15"" :exclusions [javax.mail/mail
                                              javax.jms/jms
                                              com.sun.jdmk/jmxtools
                                              com.sun.jmx/jmxri]]]
  :disable-deps-clean false
  :warn-on-reflection true
  :source-path ""src""
  :test-path ""test"")
",,[],[],[],,,
23,642da2f28c9bc6e373603d6d9119ce33684090f5,log4j.properties,,clients/clojure/resources/log4j.properties,ModificationType.ADD,"@@ -0,0 +1,5 @@
+log4j.rootLogger=INFO, A1
+ 
+log4j.appender.A1=org.apache.log4j.ConsoleAppender
+log4j.appender.A1.layout=org.apache.log4j.PatternLayout
+log4j.appender.A1.layout.ConversionPattern= %-5p %c - %m%n
","{'added': [(1, 'log4j.rootLogger=INFO, A1'), (2, ''), (3, 'log4j.appender.A1=org.apache.log4j.ConsoleAppender'), (4, 'log4j.appender.A1.layout=org.apache.log4j.PatternLayout'), (5, 'log4j.appender.A1.layout.ConversionPattern= %-5p %c - %m%n')], 'deleted': []}",5,0,"log4j.rootLogger=INFO, A1
 
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern= %-5p %c - %m%n
",,[],[],[],,,
24,642da2f28c9bc6e373603d6d9119ce33684090f5,buffer.clj,,clients/clojure/src/kafka/buffer.clj,ModificationType.ADD,"@@ -0,0 +1,175 @@
+(ns #^{:doc ""Wrapper around ByteBuffer,
+            provides a DSL to model byte messages.""}
+  kafka.buffer
+  (:import (java.nio ByteBuffer)
+           (java.nio.channels SocketChannel)))
+
+(def #^{:doc ""Buffer stack bind in with-buffer.""}
+  *buf* [])
+
+(def #^{:doc ""Number of attempts to read a complete buffer from channel.""}
+  *channel-read-count* 5)
+
+;
+; Main buffer functions
+;
+
+(defn buffer
+  ""Creates a new ByteBuffer of argument size.""
+  [^int size]
+  (ByteBuffer/allocate size))
+
+(defn ^ByteBuffer top
+  ""Returns top buffer from *buf* stack.""
+  []
+  (peek *buf*))
+
+(defn flip
+  []
+  (.flip (top)))
+
+(defn rewind
+  []
+  (.rewind (top)))
+
+(defn clear
+  []
+  (.clear (top)))
+
+(defn has-remaining
+  []
+  (.hasRemaining (top)))
+
+;
+; Write to buffer
+;
+
+(defprotocol Put
+  ""Put protocol defines a generic buffer put method.""
+  (put [this]))
+
+(extend-type Byte
+  Put
+    (put [this] (.put (top) this)))
+
+(extend-type Integer
+  Put
+    (put [this] (.putInt (top) this)))
+
+(extend-type Short
+  Put
+    (put [this] (.putShort (top) this)))
+
+(extend-type Long
+  Put
+    (put [this] (.putLong (top) this)))
+
+(extend-type String
+  Put
+    (put [this] (.put (top) (.getBytes this ""UTF-8""))))
+
+(extend-type (class (byte-array 0))
+  Put
+    (put [this] (.put (top) ^bytes this)))
+
+(extend-type clojure.lang.IPersistentCollection
+  Put
+    (put [this] (doseq [e this] (put e))))
+
+(defmacro length-encoded
+  [type & body]
+  `(with-buffer (.slice (top))
+     (put (~type 0))
+     (let [^ByteBuffer this#      (top)
+           ^ByteBuffer parent#    (peek (pop *buf*))
+                       type-size# (.position this#)]
+       ~@body
+       (let [size# (.position this#)]
+         (.rewind this#)
+         (put (~type (- size# type-size#)))
+         (.position parent# (+ (.position parent#) size#))))))
+
+(defmacro with-put
+  [size f & body]
+  `(with-buffer (.slice (top))
+     (put (byte-array ~size))
+     ~@body
+     (let [^ByteBuffer this#   (top)
+           ^ByteBuffer parent# (peek (pop *buf*))
+                       pos#    (.position this#)
+                       ba#     (byte-array (- pos# ~size))]
+       (doto this# (.rewind) (.get (byte-array ~size)) (.get ba#))
+       (.rewind this#)
+       (put (~f ba#))
+       (.position parent# (+ (.position parent#) pos#)))))
+
+;
+; Read from buffer
+;
+
+(defn get-byte
+  []
+  (.get (top)))
+
+(defn get-short
+  []
+  (.getShort (top)))
+
+(defn get-int
+  []
+  (.getInt (top)))
+
+(defn get-long
+  []
+  (.getLong (top)))
+
+(defn get-array
+  ""Reads byte array of argument length from buffer.""
+  [^int length]
+  (let [ba (byte-array length)]
+    (.get (top) ba)
+    ba))
+
+(defn get-string
+  ""Reads string of argument length from buffer.""
+  [^int length]
+  (let [ba (byte-array length)]
+    (.get (top) ba)
+    (String. ba ""UTF-8"")))
+
+;
+; Util functions and macros
+;
+
+(defmacro with-buffer
+  ""Evaluates body in the context of the buffer.""
+  [buffer & body]
+  `(binding [*buf* (conj *buf* ~buffer)]
+     ~@body))
+
+(defn read-from
+  ""Reads from channel to the underlying top buffer.
+  Throws ConnectException if channel is closed.""
+  [^SocketChannel channel]
+  (let [size (.read channel (top))]
+    (if (< size 0)
+      (throw (java.net.ConnectException. ""Channel closed?""))
+      size)))
+
+(defn read-completely-from
+  ""Read the complete top buffer from the channel.""
+  [^SocketChannel channel]
+  (loop [t *channel-read-count* size 0]
+    (let [s (read-from channel)]
+      (cond
+        (< t 0)
+          (throw (Exception. ""Unable to read complete buffer from channel.""))
+        (has-remaining)
+          (recur (dec t) (+ size s))
+        :else size))))
+
+(defn write-to
+  ""Writes underlying top buffer to channel.""
+  [^SocketChannel channel]
+  (.write channel (top)))
+
","{'added': [(1, '(ns #^{:doc ""Wrapper around ByteBuffer,'), (2, '            provides a DSL to model byte messages.""}'), (3, '  kafka.buffer'), (4, '  (:import (java.nio ByteBuffer)'), (5, '           (java.nio.channels SocketChannel)))'), (6, ''), (7, '(def #^{:doc ""Buffer stack bind in with-buffer.""}'), (8, '  *buf* [])'), (9, ''), (10, '(def #^{:doc ""Number of attempts to read a complete buffer from channel.""}'), (11, '  *channel-read-count* 5)'), (12, ''), (13, ';'), (14, '; Main buffer functions'), (15, ';'), (16, ''), (17, '(defn buffer'), (18, '  ""Creates a new ByteBuffer of argument size.""'), (19, '  [^int size]'), (20, '  (ByteBuffer/allocate size))'), (21, ''), (22, '(defn ^ByteBuffer top'), (23, '  ""Returns top buffer from *buf* stack.""'), (24, '  []'), (25, '  (peek *buf*))'), (26, ''), (27, '(defn flip'), (28, '  []'), (29, '  (.flip (top)))'), (30, ''), (31, '(defn rewind'), (32, '  []'), (33, '  (.rewind (top)))'), (34, ''), (35, '(defn clear'), (36, '  []'), (37, '  (.clear (top)))'), (38, ''), (39, '(defn has-remaining'), (40, '  []'), (41, '  (.hasRemaining (top)))'), (42, ''), (43, ';'), (44, '; Write to buffer'), (45, ';'), (46, ''), (47, '(defprotocol Put'), (48, '  ""Put protocol defines a generic buffer put method.""'), (49, '  (put [this]))'), (50, ''), (51, '(extend-type Byte'), (52, '  Put'), (53, '    (put [this] (.put (top) this)))'), (54, ''), (55, '(extend-type Integer'), (56, '  Put'), (57, '    (put [this] (.putInt (top) this)))'), (58, ''), (59, '(extend-type Short'), (60, '  Put'), (61, '    (put [this] (.putShort (top) this)))'), (62, ''), (63, '(extend-type Long'), (64, '  Put'), (65, '    (put [this] (.putLong (top) this)))'), (66, ''), (67, '(extend-type String'), (68, '  Put'), (69, '    (put [this] (.put (top) (.getBytes this ""UTF-8""))))'), (70, ''), (71, '(extend-type (class (byte-array 0))'), (72, '  Put'), (73, '    (put [this] (.put (top) ^bytes this)))'), (74, ''), (75, '(extend-type clojure.lang.IPersistentCollection'), (76, '  Put'), (77, '    (put [this] (doseq [e this] (put e))))'), (78, ''), (79, '(defmacro length-encoded'), (80, '  [type & body]'), (81, '  `(with-buffer (.slice (top))'), (82, '     (put (~type 0))'), (83, '     (let [^ByteBuffer this#      (top)'), (84, '           ^ByteBuffer parent#    (peek (pop *buf*))'), (85, '                       type-size# (.position this#)]'), (86, '       ~@body'), (87, '       (let [size# (.position this#)]'), (88, '         (.rewind this#)'), (89, '         (put (~type (- size# type-size#)))'), (90, '         (.position parent# (+ (.position parent#) size#))))))'), (91, ''), (92, '(defmacro with-put'), (93, '  [size f & body]'), (94, '  `(with-buffer (.slice (top))'), (95, '     (put (byte-array ~size))'), (96, '     ~@body'), (97, '     (let [^ByteBuffer this#   (top)'), (98, '           ^ByteBuffer parent# (peek (pop *buf*))'), (99, '                       pos#    (.position this#)'), (100, '                       ba#     (byte-array (- pos# ~size))]'), (101, '       (doto this# (.rewind) (.get (byte-array ~size)) (.get ba#))'), (102, '       (.rewind this#)'), (103, '       (put (~f ba#))'), (104, '       (.position parent# (+ (.position parent#) pos#)))))'), (105, ''), (106, ';'), (107, '; Read from buffer'), (108, ';'), (109, ''), (110, '(defn get-byte'), (111, '  []'), (112, '  (.get (top)))'), (113, ''), (114, '(defn get-short'), (115, '  []'), (116, '  (.getShort (top)))'), (117, ''), (118, '(defn get-int'), (119, '  []'), (120, '  (.getInt (top)))'), (121, ''), (122, '(defn get-long'), (123, '  []'), (124, '  (.getLong (top)))'), (125, ''), (126, '(defn get-array'), (127, '  ""Reads byte array of argument length from buffer.""'), (128, '  [^int length]'), (129, '  (let [ba (byte-array length)]'), (130, '    (.get (top) ba)'), (131, '    ba))'), (132, ''), (133, '(defn get-string'), (134, '  ""Reads string of argument length from buffer.""'), (135, '  [^int length]'), (136, '  (let [ba (byte-array length)]'), (137, '    (.get (top) ba)'), (138, '    (String. ba ""UTF-8"")))'), (139, ''), (140, ';'), (141, '; Util functions and macros'), (142, ';'), (143, ''), (144, '(defmacro with-buffer'), (145, '  ""Evaluates body in the context of the buffer.""'), (146, '  [buffer & body]'), (147, '  `(binding [*buf* (conj *buf* ~buffer)]'), (148, '     ~@body))'), (149, ''), (150, '(defn read-from'), (151, '  ""Reads from channel to the underlying top buffer.'), (152, '  Throws ConnectException if channel is closed.""'), (153, '  [^SocketChannel channel]'), (154, '  (let [size (.read channel (top))]'), (155, '    (if (< size 0)'), (156, '      (throw (java.net.ConnectException. ""Channel closed?""))'), (157, '      size)))'), (158, ''), (159, '(defn read-completely-from'), (160, '  ""Read the complete top buffer from the channel.""'), (161, '  [^SocketChannel channel]'), (162, '  (loop [t *channel-read-count* size 0]'), (163, '    (let [s (read-from channel)]'), (164, '      (cond'), (165, '        (< t 0)'), (166, '          (throw (Exception. ""Unable to read complete buffer from channel.""))'), (167, '        (has-remaining)'), (168, '          (recur (dec t) (+ size s))'), (169, '        :else size))))'), (170, ''), (171, '(defn write-to'), (172, '  ""Writes underlying top buffer to channel.""'), (173, '  [^SocketChannel channel]'), (174, '  (.write channel (top)))'), (175, '')], 'deleted': []}",175,0,"(ns #^{:doc ""Wrapper around ByteBuffer,
            provides a DSL to model byte messages.""}
  kafka.buffer
  (:import (java.nio ByteBuffer)
           (java.nio.channels SocketChannel)))

(def #^{:doc ""Buffer stack bind in with-buffer.""}
  *buf* [])

(def #^{:doc ""Number of attempts to read a complete buffer from channel.""}
  *channel-read-count* 5)

;
; Main buffer functions
;

(defn buffer
  ""Creates a new ByteBuffer of argument size.""
  [^int size]
  (ByteBuffer/allocate size))

(defn ^ByteBuffer top
  ""Returns top buffer from *buf* stack.""
  []
  (peek *buf*))

(defn flip
  []
  (.flip (top)))

(defn rewind
  []
  (.rewind (top)))

(defn clear
  []
  (.clear (top)))

(defn has-remaining
  []
  (.hasRemaining (top)))

;
; Write to buffer
;

(defprotocol Put
  ""Put protocol defines a generic buffer put method.""
  (put [this]))

(extend-type Byte
  Put
    (put [this] (.put (top) this)))

(extend-type Integer
  Put
    (put [this] (.putInt (top) this)))

(extend-type Short
  Put
    (put [this] (.putShort (top) this)))

(extend-type Long
  Put
    (put [this] (.putLong (top) this)))

(extend-type String
  Put
    (put [this] (.put (top) (.getBytes this ""UTF-8""))))

(extend-type (class (byte-array 0))
  Put
    (put [this] (.put (top) ^bytes this)))

(extend-type clojure.lang.IPersistentCollection
  Put
    (put [this] (doseq [e this] (put e))))

(defmacro length-encoded
  [type & body]
  `(with-buffer (.slice (top))
     (put (~type 0))
     (let [^ByteBuffer this#      (top)
           ^ByteBuffer parent#    (peek (pop *buf*))
                       type-size# (.position this#)]
       ~@body
       (let [size# (.position this#)]
         (.rewind this#)
         (put (~type (- size# type-size#)))
         (.position parent# (+ (.position parent#) size#))))))

(defmacro with-put
  [size f & body]
  `(with-buffer (.slice (top))
     (put (byte-array ~size))
     ~@body
     (let [^ByteBuffer this#   (top)
           ^ByteBuffer parent# (peek (pop *buf*))
                       pos#    (.position this#)
                       ba#     (byte-array (- pos# ~size))]
       (doto this# (.rewind) (.get (byte-array ~size)) (.get ba#))
       (.rewind this#)
       (put (~f ba#))
       (.position parent# (+ (.position parent#) pos#)))))

;
; Read from buffer
;

(defn get-byte
  []
  (.get (top)))

(defn get-short
  []
  (.getShort (top)))

(defn get-int
  []
  (.getInt (top)))

(defn get-long
  []
  (.getLong (top)))

(defn get-array
  ""Reads byte array of argument length from buffer.""
  [^int length]
  (let [ba (byte-array length)]
    (.get (top) ba)
    ba))

(defn get-string
  ""Reads string of argument length from buffer.""
  [^int length]
  (let [ba (byte-array length)]
    (.get (top) ba)
    (String. ba ""UTF-8"")))

;
; Util functions and macros
;

(defmacro with-buffer
  ""Evaluates body in the context of the buffer.""
  [buffer & body]
  `(binding [*buf* (conj *buf* ~buffer)]
     ~@body))

(defn read-from
  ""Reads from channel to the underlying top buffer.
  Throws ConnectException if channel is closed.""
  [^SocketChannel channel]
  (let [size (.read channel (top))]
    (if (< size 0)
      (throw (java.net.ConnectException. ""Channel closed?""))
      size)))

(defn read-completely-from
  ""Read the complete top buffer from the channel.""
  [^SocketChannel channel]
  (loop [t *channel-read-count* size 0]
    (let [s (read-from channel)]
      (cond
        (< t 0)
          (throw (Exception. ""Unable to read complete buffer from channel.""))
        (has-remaining)
          (recur (dec t) (+ size s))
        :else size))))

(defn write-to
  ""Writes underlying top buffer to channel.""
  [^SocketChannel channel]
  (.write channel (top)))

",,[],[],[],,,
25,642da2f28c9bc6e373603d6d9119ce33684090f5,example.clj,,clients/clojure/src/kafka/example.clj,ModificationType.ADD,"@@ -0,0 +1,38 @@
+(ns #^{:doc ""Producer/Consumer example.""}
+  kafka.example
+  (:use (clojure.contrib logging)
+        (kafka types kafka print)))
+
+(defmacro thread
+  ""Executes body in a thread, logs exceptions.""
+  [ & body]
+  `(future
+     (try
+       ~@body
+       (catch Exception e#
+         (error ""Exception."" e#)))))
+
+(defn start-consumer
+  []
+  (thread
+    (with-open [c (consumer ""localhost"" 9092)]
+      (doseq [m (consume-seq c ""test"" 0 {:blocking true})]
+        (println ""Consumed <-- "" m)))
+    (println ""Finished consuming."")))
+
+(defn start-producer
+  []
+  (thread
+    (with-open [p (producer ""localhost"" 9092)]
+      (doseq [i (range 1 20)]
+        (let [m (str ""Message "" i)]
+          (produce p ""test"" 0 m)
+          (println ""Produced --> "" m)
+          (Thread/sleep 1000))))
+    (println ""Finished producing."")))
+
+(defn run
+  []
+  (start-consumer)
+  (start-producer))
+
","{'added': [(1, '(ns #^{:doc ""Producer/Consumer example.""}'), (2, '  kafka.example'), (3, '  (:use (clojure.contrib logging)'), (4, '        (kafka types kafka print)))'), (5, ''), (6, '(defmacro thread'), (7, '  ""Executes body in a thread, logs exceptions.""'), (8, '  [ & body]'), (9, '  `(future'), (10, '     (try'), (11, '       ~@body'), (12, '       (catch Exception e#'), (13, '         (error ""Exception."" e#)))))'), (14, ''), (15, '(defn start-consumer'), (16, '  []'), (17, '  (thread'), (18, '    (with-open [c (consumer ""localhost"" 9092)]'), (19, '      (doseq [m (consume-seq c ""test"" 0 {:blocking true})]'), (20, '        (println ""Consumed <-- "" m)))'), (21, '    (println ""Finished consuming."")))'), (22, ''), (23, '(defn start-producer'), (24, '  []'), (25, '  (thread'), (26, '    (with-open [p (producer ""localhost"" 9092)]'), (27, '      (doseq [i (range 1 20)]'), (28, '        (let [m (str ""Message "" i)]'), (29, '          (produce p ""test"" 0 m)'), (30, '          (println ""Produced --> "" m)'), (31, '          (Thread/sleep 1000))))'), (32, '    (println ""Finished producing."")))'), (33, ''), (34, '(defn run'), (35, '  []'), (36, '  (start-consumer)'), (37, '  (start-producer))'), (38, '')], 'deleted': []}",38,0,"(ns #^{:doc ""Producer/Consumer example.""}
  kafka.example
  (:use (clojure.contrib logging)
        (kafka types kafka print)))

(defmacro thread
  ""Executes body in a thread, logs exceptions.""
  [ & body]
  `(future
     (try
       ~@body
       (catch Exception e#
         (error ""Exception."" e#)))))

(defn start-consumer
  []
  (thread
    (with-open [c (consumer ""localhost"" 9092)]
      (doseq [m (consume-seq c ""test"" 0 {:blocking true})]
        (println ""Consumed <-- "" m)))
    (println ""Finished consuming."")))

(defn start-producer
  []
  (thread
    (with-open [p (producer ""localhost"" 9092)]
      (doseq [i (range 1 20)]
        (let [m (str ""Message "" i)]
          (produce p ""test"" 0 m)
          (println ""Produced --> "" m)
          (Thread/sleep 1000))))
    (println ""Finished producing."")))

(defn run
  []
  (start-consumer)
  (start-producer))

",,[],[],[],,,
26,642da2f28c9bc6e373603d6d9119ce33684090f5,kafka.clj,,clients/clojure/src/kafka/kafka.clj,ModificationType.ADD,"@@ -0,0 +1,267 @@
+(ns #^{:doc ""Core kafka-clj module,
+            provides producer and consumer factories.""}
+  kafka.kafka
+  (:use (kafka types buffer)
+        (clojure.contrib logging))
+  (:import (kafka.types Message)
+           (java.nio.channels SocketChannel)
+           (java.net Socket InetSocketAddress)
+           (java.util.zip CRC32)))
+
+; 
+; Utils
+;
+
+(defn- crc32-int
+  ""CRC for byte array.""
+  [^bytes ba]
+  (let [crc (doto (CRC32.) (.update ba))
+        lv  (.getValue crc)]
+    (.intValue (bit-and lv 0xffffffff))))
+
+(defn- new-channel
+  ""Create and setup a new channel for a host name, port and options.
+  Supported options:
+  :receive-buffer-size - receive socket buffer size, default 65536.
+  :send-buffer-size    - send socket buffer size, default 65536.
+  :socket-timeout      - socket timeout.""
+  [^String host ^Integer port opts]
+  (let [receive-buf-size (or (:receive-buffer-size opts) 65536)
+        send-buf-size    (or (:send-buffer-size opts) 65536)
+        so-timeout       (or (:socket-timeout opts) 60000)
+        ch (SocketChannel/open)]
+    (doto (.socket ch)
+      (.setReceiveBufferSize receive-buf-size)
+      (.setSendBufferSize send-buf-size)
+      (.setSoTimeout so-timeout))
+    (doto ch
+      (.configureBlocking true)
+      (.connect (InetSocketAddress. host port)))))
+
+(defn- close-channel
+  ""Close the channel.""
+  [^SocketChannel channel]
+  (.close channel)
+  (.close (.socket channel)))
+
+(defn- response-size
+  ""Read first four bytes from channel as an integer.""
+  [channel]
+  (with-buffer (buffer 4)
+    (read-completely-from channel)
+    (flip)
+    (get-int)))
+
+(defmacro with-error-code
+  ""Convenience response error code check.""
+  [request & body]
+  `(let [error-code# (get-short)] ; error code
+     (if (not= error-code# 0)
+       (error (str ""Request "" ~request "" returned error code: "" error-code# "".""))
+       ~@body)))
+
+; 
+; Producer
+;
+
+(defn- send-message
+  ""Send messages.""
+  [channel topic partition messages opts]
+  (let [size (or (:send-buffer-size opts) 65536)]
+    (with-buffer (buffer size)
+        (length-encoded int                   ; request size
+          (put (short 0))                     ; request type
+          (length-encoded short               ; topic size
+            (put topic))                      ; topic
+          (put (int partition))               ; partition
+          (length-encoded int                 ; messages size
+            (doseq [m messages]
+              (let [^Message pm (pack m)]
+                (length-encoded int           ; message size
+                  (put (byte 0))              ; magic
+                  (with-put 4 crc32-int       ; crc
+                    (put (.message pm)))))))) ; message
+        (flip)
+        (write-to channel))))
+
+(defn producer
+  ""Producer factory. See new-channel for list of supported options.""
+  [host port & [opts]]
+  (let [channel (new-channel host port opts)]
+    (reify Producer
+      (produce [this topic partition messages]
+               (let [msg (if (sequential? messages) messages [messages])]
+                 (send-message channel topic partition msg opts)))
+      (close [this]
+             (close-channel channel)))))
+
+;
+; Consumer
+;
+
+; Offset
+
+(defn- offset-fetch-request
+  ""Fetch offsets request.""
+  [channel topic partition time max-offsets]
+  (let [size     (+ 4 2 2 (count topic) 4 8 4)]
+    (with-buffer (buffer size)
+      (length-encoded int         ; request size
+        (put (short 4))           ; request type
+        (length-encoded short     ; topic size
+          (put topic))            ; topic
+        (put (int partition))     ; partition
+        (put (long time))         ; time
+        (put (int max-offsets)))  ; max-offsets
+        (flip)
+        (write-to channel))))
+
+(defn- fetch-offsets
+  ""Fetch offsets as an integer sequence.""
+  [channel topic partition time max-offsets]
+  (offset-fetch-request channel topic partition time max-offsets)
+  (let [rsp-size (response-size channel)]
+    (with-buffer (buffer rsp-size)
+      (read-completely-from channel)
+      (flip)
+      (with-error-code ""Fetch-Offsets""
+        (loop [c (get-int) res []]
+          (if (> c 0)
+            (recur (dec c) (conj res (get-long)))
+            (doall res)))))))
+ 
+; Messages
+
+(defn- message-fetch-request
+  ""Fetch messages request.""
+  [channel topic partition offset max-size]
+  (let [size (+ 4 2 2 (count topic) 4 8 4)]
+    (with-buffer (buffer size)
+      (length-encoded int     ; request size
+        (put (short 1))       ; request type
+        (length-encoded short ; topic size
+          (put topic))        ; topic
+        (put (int partition)) ; partition
+        (put (long offset))   ; offset
+        (put (int max-size))) ; max size
+        (flip)
+        (write-to channel))))
+
+(defn- read-response
+  ""Read response from buffer. Returns a pair [new offset, messages sequence].""
+  [offset]
+  (with-error-code ""Fetch-Messages""
+    (loop [off offset msg []]
+      (if (has-remaining)
+        (let [size    (get-int)  ; message size
+              magic   (get-byte) ; magic
+              crc     (get-int)  ; crc
+              message (get-array (- size 5))]
+          (recur (+ off size 4) (conj msg (unpack (Message. message)))))
+          [off (doall msg)]))))
+
+(defn- fetch-messages
+  ""Message fetch, returns a pair [new offset, messages sequence].""
+  [channel topic partition offset max-size]
+  (message-fetch-request channel topic partition offset max-size)
+  (let [rsp-size (response-size channel)]
+    (with-buffer (buffer rsp-size)
+      (read-completely-from channel)
+      (flip)
+      (read-response offset))))
+
+; Consumer sequence
+
+(defn- seq-fetch
+  ""Non-blocking fetch function used by consumer sequence.""
+  [channel topic partition opts]
+  (let [max-size (or (:max-size opts) 1000000)]
+    (fn [offset]
+      (fetch-messages channel topic partition offset max-size))))
+
+(defn- blocking-seq-fetch
+  ""Blocking fetch function used by consumer sequence.""
+  [channel topic partition opts]
+  (let [repeat-count   (or (:repeat-count opts) 10)
+        repeat-timeout (or (:repeat-timeout opts) 1000)
+        max-size       (or (:max-size opts) 1000000)]
+    (fn [offset]
+      (loop [c repeat-count]
+        (if (> c 0)
+          (let [rs (fetch-messages channel topic partition offset max-size)]
+            (if (or (nil? rs) (= offset (first rs)))
+              (do
+                (Thread/sleep repeat-timeout)
+                (recur (dec c)))
+              (doall rs)))
+          (debug ""Stopping blocking seq fetch.""))))))
+
+(defn- fetch-queue
+  [offset queue fetch-fn]
+  (if (empty? @queue)
+    (let [[new-offset msg] (fetch-fn @offset)]
+      (when new-offset
+        (debug (str ""Fetched "" (count msg) "" messages:""))
+        (debug (str ""New offset "" new-offset "".""))
+        (swap! queue #(reduce conj % (reverse msg)))
+        (reset! offset new-offset)))))
+
+(defn- consumer-seq
+  ""Sequence constructor.""
+  [offset fetch-fn]
+  (let [offset (atom offset)
+        queue  (atom (seq []))]
+    (reify
+      clojure.lang.IPersistentCollection
+        (seq [this]    this)
+        (cons [this _] (throw (Exception. ""cons not supported for consumer sequence."")))
+        (empty [this]  nil)
+        (equiv [this o]
+          (fatal ""Implement equiv for consumer seq!"")
+          false)
+      clojure.lang.ISeq
+        (first [this] 
+          (fetch-queue offset queue fetch-fn)
+          (first @queue))
+        (next [this]
+          (swap! queue rest)
+          (fetch-queue offset queue fetch-fn)
+          (if (not (empty? @queue)) this))
+        (more [this]
+          (swap! queue rest)
+          (fetch-queue offset queue fetch-fn)
+          (if (empty? @queue) (empty) this))
+      Object
+      (toString [this]
+        (str ""ConsumerQueue"")))))
+
+; Consumer factory 
+
+(defn consumer
+  ""Consumer factory. See new-channel for list of supported options.""
+  [host port & [opts]]
+  (let [channel (new-channel host port opts)]
+    (reify Consumer
+      (consume [this topic partition offset max-size]
+        (fetch-messages channel topic partition offset max-size))
+      
+      (offsets [this topic partition time max-offsets]
+        (fetch-offsets channel topic partition time max-offsets))
+
+      (consume-seq [this topic partition]
+        (let [[offset] (fetch-offsets channel topic partition -1 1)]
+          (debug (str ""Initializing last offset to "" offset "".""))
+          (consumer-seq (or offset 0) (seq-fetch channel topic partition opts))))
+
+      (consume-seq [this topic partition opts]
+        (let [[offset] (or (:offset opts)
+                           (fetch-offsets channel topic partition -1 1))
+              fetch-fn (if (:blocking opts)
+                         (blocking-seq-fetch channel topic partition opts)
+                         (seq-fetch channel topic partition opts))]
+          (debug (str ""Initializing last offset to "" offset "".""))
+          (consumer-seq (or offset 0) fetch-fn)))
+
+      (close [this]
+        (close-channel channel)))))
+
","{'added': [(1, '(ns #^{:doc ""Core kafka-clj module,'), (2, '            provides producer and consumer factories.""}'), (3, '  kafka.kafka'), (4, '  (:use (kafka types buffer)'), (5, '        (clojure.contrib logging))'), (6, '  (:import (kafka.types Message)'), (7, '           (java.nio.channels SocketChannel)'), (8, '           (java.net Socket InetSocketAddress)'), (9, '           (java.util.zip CRC32)))'), (10, ''), (11, ';'), (12, '; Utils'), (13, ';'), (14, ''), (15, '(defn- crc32-int'), (16, '  ""CRC for byte array.""'), (17, '  [^bytes ba]'), (18, '  (let [crc (doto (CRC32.) (.update ba))'), (19, '        lv  (.getValue crc)]'), (20, '    (.intValue (bit-and lv 0xffffffff))))'), (21, ''), (22, '(defn- new-channel'), (23, '  ""Create and setup a new channel for a host name, port and options.'), (24, '  Supported options:'), (25, '  :receive-buffer-size - receive socket buffer size, default 65536.'), (26, '  :send-buffer-size    - send socket buffer size, default 65536.'), (27, '  :socket-timeout      - socket timeout.""'), (28, '  [^String host ^Integer port opts]'), (29, '  (let [receive-buf-size (or (:receive-buffer-size opts) 65536)'), (30, '        send-buf-size    (or (:send-buffer-size opts) 65536)'), (31, '        so-timeout       (or (:socket-timeout opts) 60000)'), (32, '        ch (SocketChannel/open)]'), (33, '    (doto (.socket ch)'), (34, '      (.setReceiveBufferSize receive-buf-size)'), (35, '      (.setSendBufferSize send-buf-size)'), (36, '      (.setSoTimeout so-timeout))'), (37, '    (doto ch'), (38, '      (.configureBlocking true)'), (39, '      (.connect (InetSocketAddress. host port)))))'), (40, ''), (41, '(defn- close-channel'), (42, '  ""Close the channel.""'), (43, '  [^SocketChannel channel]'), (44, '  (.close channel)'), (45, '  (.close (.socket channel)))'), (46, ''), (47, '(defn- response-size'), (48, '  ""Read first four bytes from channel as an integer.""'), (49, '  [channel]'), (50, '  (with-buffer (buffer 4)'), (51, '    (read-completely-from channel)'), (52, '    (flip)'), (53, '    (get-int)))'), (54, ''), (55, '(defmacro with-error-code'), (56, '  ""Convenience response error code check.""'), (57, '  [request & body]'), (58, '  `(let [error-code# (get-short)] ; error code'), (59, '     (if (not= error-code# 0)'), (60, '       (error (str ""Request "" ~request "" returned error code: "" error-code# "".""))'), (61, '       ~@body)))'), (62, ''), (63, ';'), (64, '; Producer'), (65, ';'), (66, ''), (67, '(defn- send-message'), (68, '  ""Send messages.""'), (69, '  [channel topic partition messages opts]'), (70, '  (let [size (or (:send-buffer-size opts) 65536)]'), (71, '    (with-buffer (buffer size)'), (72, '        (length-encoded int                   ; request size'), (73, '          (put (short 0))                     ; request type'), (74, '          (length-encoded short               ; topic size'), (75, '            (put topic))                      ; topic'), (76, '          (put (int partition))               ; partition'), (77, '          (length-encoded int                 ; messages size'), (78, '            (doseq [m messages]'), (79, '              (let [^Message pm (pack m)]'), (80, '                (length-encoded int           ; message size'), (81, '                  (put (byte 0))              ; magic'), (82, '                  (with-put 4 crc32-int       ; crc'), (83, '                    (put (.message pm)))))))) ; message'), (84, '        (flip)'), (85, '        (write-to channel))))'), (86, ''), (87, '(defn producer'), (88, '  ""Producer factory. See new-channel for list of supported options.""'), (89, '  [host port & [opts]]'), (90, '  (let [channel (new-channel host port opts)]'), (91, '    (reify Producer'), (92, '      (produce [this topic partition messages]'), (93, '               (let [msg (if (sequential? messages) messages [messages])]'), (94, '                 (send-message channel topic partition msg opts)))'), (95, '      (close [this]'), (96, '             (close-channel channel)))))'), (97, ''), (98, ';'), (99, '; Consumer'), (100, ';'), (101, ''), (102, '; Offset'), (103, ''), (104, '(defn- offset-fetch-request'), (105, '  ""Fetch offsets request.""'), (106, '  [channel topic partition time max-offsets]'), (107, '  (let [size     (+ 4 2 2 (count topic) 4 8 4)]'), (108, '    (with-buffer (buffer size)'), (109, '      (length-encoded int         ; request size'), (110, '        (put (short 4))           ; request type'), (111, '        (length-encoded short     ; topic size'), (112, '          (put topic))            ; topic'), (113, '        (put (int partition))     ; partition'), (114, '        (put (long time))         ; time'), (115, '        (put (int max-offsets)))  ; max-offsets'), (116, '        (flip)'), (117, '        (write-to channel))))'), (118, ''), (119, '(defn- fetch-offsets'), (120, '  ""Fetch offsets as an integer sequence.""'), (121, '  [channel topic partition time max-offsets]'), (122, '  (offset-fetch-request channel topic partition time max-offsets)'), (123, '  (let [rsp-size (response-size channel)]'), (124, '    (with-buffer (buffer rsp-size)'), (125, '      (read-completely-from channel)'), (126, '      (flip)'), (127, '      (with-error-code ""Fetch-Offsets""'), (128, '        (loop [c (get-int) res []]'), (129, '          (if (> c 0)'), (130, '            (recur (dec c) (conj res (get-long)))'), (131, '            (doall res)))))))'), (132, ''), (133, '; Messages'), (134, ''), (135, '(defn- message-fetch-request'), (136, '  ""Fetch messages request.""'), (137, '  [channel topic partition offset max-size]'), (138, '  (let [size (+ 4 2 2 (count topic) 4 8 4)]'), (139, '    (with-buffer (buffer size)'), (140, '      (length-encoded int     ; request size'), (141, '        (put (short 1))       ; request type'), (142, '        (length-encoded short ; topic size'), (143, '          (put topic))        ; topic'), (144, '        (put (int partition)) ; partition'), (145, '        (put (long offset))   ; offset'), (146, '        (put (int max-size))) ; max size'), (147, '        (flip)'), (148, '        (write-to channel))))'), (149, ''), (150, '(defn- read-response'), (151, '  ""Read response from buffer. Returns a pair [new offset, messages sequence].""'), (152, '  [offset]'), (153, '  (with-error-code ""Fetch-Messages""'), (154, '    (loop [off offset msg []]'), (155, '      (if (has-remaining)'), (156, '        (let [size    (get-int)  ; message size'), (157, '              magic   (get-byte) ; magic'), (158, '              crc     (get-int)  ; crc'), (159, '              message (get-array (- size 5))]'), (160, '          (recur (+ off size 4) (conj msg (unpack (Message. message)))))'), (161, '          [off (doall msg)]))))'), (162, ''), (163, '(defn- fetch-messages'), (164, '  ""Message fetch, returns a pair [new offset, messages sequence].""'), (165, '  [channel topic partition offset max-size]'), (166, '  (message-fetch-request channel topic partition offset max-size)'), (167, '  (let [rsp-size (response-size channel)]'), (168, '    (with-buffer (buffer rsp-size)'), (169, '      (read-completely-from channel)'), (170, '      (flip)'), (171, '      (read-response offset))))'), (172, ''), (173, '; Consumer sequence'), (174, ''), (175, '(defn- seq-fetch'), (176, '  ""Non-blocking fetch function used by consumer sequence.""'), (177, '  [channel topic partition opts]'), (178, '  (let [max-size (or (:max-size opts) 1000000)]'), (179, '    (fn [offset]'), (180, '      (fetch-messages channel topic partition offset max-size))))'), (181, ''), (182, '(defn- blocking-seq-fetch'), (183, '  ""Blocking fetch function used by consumer sequence.""'), (184, '  [channel topic partition opts]'), (185, '  (let [repeat-count   (or (:repeat-count opts) 10)'), (186, '        repeat-timeout (or (:repeat-timeout opts) 1000)'), (187, '        max-size       (or (:max-size opts) 1000000)]'), (188, '    (fn [offset]'), (189, '      (loop [c repeat-count]'), (190, '        (if (> c 0)'), (191, '          (let [rs (fetch-messages channel topic partition offset max-size)]'), (192, '            (if (or (nil? rs) (= offset (first rs)))'), (193, '              (do'), (194, '                (Thread/sleep repeat-timeout)'), (195, '                (recur (dec c)))'), (196, '              (doall rs)))'), (197, '          (debug ""Stopping blocking seq fetch.""))))))'), (198, ''), (199, '(defn- fetch-queue'), (200, '  [offset queue fetch-fn]'), (201, '  (if (empty? @queue)'), (202, '    (let [[new-offset msg] (fetch-fn @offset)]'), (203, '      (when new-offset'), (204, '        (debug (str ""Fetched "" (count msg) "" messages:""))'), (205, '        (debug (str ""New offset "" new-offset "".""))'), (206, '        (swap! queue #(reduce conj % (reverse msg)))'), (207, '        (reset! offset new-offset)))))'), (208, ''), (209, '(defn- consumer-seq'), (210, '  ""Sequence constructor.""'), (211, '  [offset fetch-fn]'), (212, '  (let [offset (atom offset)'), (213, '        queue  (atom (seq []))]'), (214, '    (reify'), (215, '      clojure.lang.IPersistentCollection'), (216, '        (seq [this]    this)'), (217, '        (cons [this _] (throw (Exception. ""cons not supported for consumer sequence."")))'), (218, '        (empty [this]  nil)'), (219, '        (equiv [this o]'), (220, '          (fatal ""Implement equiv for consumer seq!"")'), (221, '          false)'), (222, '      clojure.lang.ISeq'), (223, '        (first [this]'), (224, '          (fetch-queue offset queue fetch-fn)'), (225, '          (first @queue))'), (226, '        (next [this]'), (227, '          (swap! queue rest)'), (228, '          (fetch-queue offset queue fetch-fn)'), (229, '          (if (not (empty? @queue)) this))'), (230, '        (more [this]'), (231, '          (swap! queue rest)'), (232, '          (fetch-queue offset queue fetch-fn)'), (233, '          (if (empty? @queue) (empty) this))'), (234, '      Object'), (235, '      (toString [this]'), (236, '        (str ""ConsumerQueue"")))))'), (237, ''), (238, '; Consumer factory'), (239, ''), (240, '(defn consumer'), (241, '  ""Consumer factory. See new-channel for list of supported options.""'), (242, '  [host port & [opts]]'), (243, '  (let [channel (new-channel host port opts)]'), (244, '    (reify Consumer'), (245, '      (consume [this topic partition offset max-size]'), (246, '        (fetch-messages channel topic partition offset max-size))'), (247, ''), (248, '      (offsets [this topic partition time max-offsets]'), (249, '        (fetch-offsets channel topic partition time max-offsets))'), (250, ''), (251, '      (consume-seq [this topic partition]'), (252, '        (let [[offset] (fetch-offsets channel topic partition -1 1)]'), (253, '          (debug (str ""Initializing last offset to "" offset "".""))'), (254, '          (consumer-seq (or offset 0) (seq-fetch channel topic partition opts))))'), (255, ''), (256, '      (consume-seq [this topic partition opts]'), (257, '        (let [[offset] (or (:offset opts)'), (258, '                           (fetch-offsets channel topic partition -1 1))'), (259, '              fetch-fn (if (:blocking opts)'), (260, '                         (blocking-seq-fetch channel topic partition opts)'), (261, '                         (seq-fetch channel topic partition opts))]'), (262, '          (debug (str ""Initializing last offset to "" offset "".""))'), (263, '          (consumer-seq (or offset 0) fetch-fn)))'), (264, ''), (265, '      (close [this]'), (266, '        (close-channel channel)))))'), (267, '')], 'deleted': []}",267,0,"(ns #^{:doc ""Core kafka-clj module,
            provides producer and consumer factories.""}
  kafka.kafka
  (:use (kafka types buffer)
        (clojure.contrib logging))
  (:import (kafka.types Message)
           (java.nio.channels SocketChannel)
           (java.net Socket InetSocketAddress)
           (java.util.zip CRC32)))

; 
; Utils
;

(defn- crc32-int
  ""CRC for byte array.""
  [^bytes ba]
  (let [crc (doto (CRC32.) (.update ba))
        lv  (.getValue crc)]
    (.intValue (bit-and lv 0xffffffff))))

(defn- new-channel
  ""Create and setup a new channel for a host name, port and options.
  Supported options:
  :receive-buffer-size - receive socket buffer size, default 65536.
  :send-buffer-size    - send socket buffer size, default 65536.
  :socket-timeout      - socket timeout.""
  [^String host ^Integer port opts]
  (let [receive-buf-size (or (:receive-buffer-size opts) 65536)
        send-buf-size    (or (:send-buffer-size opts) 65536)
        so-timeout       (or (:socket-timeout opts) 60000)
        ch (SocketChannel/open)]
    (doto (.socket ch)
      (.setReceiveBufferSize receive-buf-size)
      (.setSendBufferSize send-buf-size)
      (.setSoTimeout so-timeout))
    (doto ch
      (.configureBlocking true)
      (.connect (InetSocketAddress. host port)))))

(defn- close-channel
  ""Close the channel.""
  [^SocketChannel channel]
  (.close channel)
  (.close (.socket channel)))

(defn- response-size
  ""Read first four bytes from channel as an integer.""
  [channel]
  (with-buffer (buffer 4)
    (read-completely-from channel)
    (flip)
    (get-int)))

(defmacro with-error-code
  ""Convenience response error code check.""
  [request & body]
  `(let [error-code# (get-short)] ; error code
     (if (not= error-code# 0)
       (error (str ""Request "" ~request "" returned error code: "" error-code# "".""))
       ~@body)))

; 
; Producer
;

(defn- send-message
  ""Send messages.""
  [channel topic partition messages opts]
  (let [size (or (:send-buffer-size opts) 65536)]
    (with-buffer (buffer size)
        (length-encoded int                   ; request size
          (put (short 0))                     ; request type
          (length-encoded short               ; topic size
            (put topic))                      ; topic
          (put (int partition))               ; partition
          (length-encoded int                 ; messages size
            (doseq [m messages]
              (let [^Message pm (pack m)]
                (length-encoded int           ; message size
                  (put (byte 0))              ; magic
                  (with-put 4 crc32-int       ; crc
                    (put (.message pm)))))))) ; message
        (flip)
        (write-to channel))))

(defn producer
  ""Producer factory. See new-channel for list of supported options.""
  [host port & [opts]]
  (let [channel (new-channel host port opts)]
    (reify Producer
      (produce [this topic partition messages]
               (let [msg (if (sequential? messages) messages [messages])]
                 (send-message channel topic partition msg opts)))
      (close [this]
             (close-channel channel)))))

;
; Consumer
;

; Offset

(defn- offset-fetch-request
  ""Fetch offsets request.""
  [channel topic partition time max-offsets]
  (let [size     (+ 4 2 2 (count topic) 4 8 4)]
    (with-buffer (buffer size)
      (length-encoded int         ; request size
        (put (short 4))           ; request type
        (length-encoded short     ; topic size
          (put topic))            ; topic
        (put (int partition))     ; partition
        (put (long time))         ; time
        (put (int max-offsets)))  ; max-offsets
        (flip)
        (write-to channel))))

(defn- fetch-offsets
  ""Fetch offsets as an integer sequence.""
  [channel topic partition time max-offsets]
  (offset-fetch-request channel topic partition time max-offsets)
  (let [rsp-size (response-size channel)]
    (with-buffer (buffer rsp-size)
      (read-completely-from channel)
      (flip)
      (with-error-code ""Fetch-Offsets""
        (loop [c (get-int) res []]
          (if (> c 0)
            (recur (dec c) (conj res (get-long)))
            (doall res)))))))
 
; Messages

(defn- message-fetch-request
  ""Fetch messages request.""
  [channel topic partition offset max-size]
  (let [size (+ 4 2 2 (count topic) 4 8 4)]
    (with-buffer (buffer size)
      (length-encoded int     ; request size
        (put (short 1))       ; request type
        (length-encoded short ; topic size
          (put topic))        ; topic
        (put (int partition)) ; partition
        (put (long offset))   ; offset
        (put (int max-size))) ; max size
        (flip)
        (write-to channel))))

(defn- read-response
  ""Read response from buffer. Returns a pair [new offset, messages sequence].""
  [offset]
  (with-error-code ""Fetch-Messages""
    (loop [off offset msg []]
      (if (has-remaining)
        (let [size    (get-int)  ; message size
              magic   (get-byte) ; magic
              crc     (get-int)  ; crc
              message (get-array (- size 5))]
          (recur (+ off size 4) (conj msg (unpack (Message. message)))))
          [off (doall msg)]))))

(defn- fetch-messages
  ""Message fetch, returns a pair [new offset, messages sequence].""
  [channel topic partition offset max-size]
  (message-fetch-request channel topic partition offset max-size)
  (let [rsp-size (response-size channel)]
    (with-buffer (buffer rsp-size)
      (read-completely-from channel)
      (flip)
      (read-response offset))))

; Consumer sequence

(defn- seq-fetch
  ""Non-blocking fetch function used by consumer sequence.""
  [channel topic partition opts]
  (let [max-size (or (:max-size opts) 1000000)]
    (fn [offset]
      (fetch-messages channel topic partition offset max-size))))

(defn- blocking-seq-fetch
  ""Blocking fetch function used by consumer sequence.""
  [channel topic partition opts]
  (let [repeat-count   (or (:repeat-count opts) 10)
        repeat-timeout (or (:repeat-timeout opts) 1000)
        max-size       (or (:max-size opts) 1000000)]
    (fn [offset]
      (loop [c repeat-count]
        (if (> c 0)
          (let [rs (fetch-messages channel topic partition offset max-size)]
            (if (or (nil? rs) (= offset (first rs)))
              (do
                (Thread/sleep repeat-timeout)
                (recur (dec c)))
              (doall rs)))
          (debug ""Stopping blocking seq fetch.""))))))

(defn- fetch-queue
  [offset queue fetch-fn]
  (if (empty? @queue)
    (let [[new-offset msg] (fetch-fn @offset)]
      (when new-offset
        (debug (str ""Fetched "" (count msg) "" messages:""))
        (debug (str ""New offset "" new-offset "".""))
        (swap! queue #(reduce conj % (reverse msg)))
        (reset! offset new-offset)))))

(defn- consumer-seq
  ""Sequence constructor.""
  [offset fetch-fn]
  (let [offset (atom offset)
        queue  (atom (seq []))]
    (reify
      clojure.lang.IPersistentCollection
        (seq [this]    this)
        (cons [this _] (throw (Exception. ""cons not supported for consumer sequence."")))
        (empty [this]  nil)
        (equiv [this o]
          (fatal ""Implement equiv for consumer seq!"")
          false)
      clojure.lang.ISeq
        (first [this] 
          (fetch-queue offset queue fetch-fn)
          (first @queue))
        (next [this]
          (swap! queue rest)
          (fetch-queue offset queue fetch-fn)
          (if (not (empty? @queue)) this))
        (more [this]
          (swap! queue rest)
          (fetch-queue offset queue fetch-fn)
          (if (empty? @queue) (empty) this))
      Object
      (toString [this]
        (str ""ConsumerQueue"")))))

; Consumer factory 

(defn consumer
  ""Consumer factory. See new-channel for list of supported options.""
  [host port & [opts]]
  (let [channel (new-channel host port opts)]
    (reify Consumer
      (consume [this topic partition offset max-size]
        (fetch-messages channel topic partition offset max-size))
      
      (offsets [this topic partition time max-offsets]
        (fetch-offsets channel topic partition time max-offsets))

      (consume-seq [this topic partition]
        (let [[offset] (fetch-offsets channel topic partition -1 1)]
          (debug (str ""Initializing last offset to "" offset "".""))
          (consumer-seq (or offset 0) (seq-fetch channel topic partition opts))))

      (consume-seq [this topic partition opts]
        (let [[offset] (or (:offset opts)
                           (fetch-offsets channel topic partition -1 1))
              fetch-fn (if (:blocking opts)
                         (blocking-seq-fetch channel topic partition opts)
                         (seq-fetch channel topic partition opts))]
          (debug (str ""Initializing last offset to "" offset "".""))
          (consumer-seq (or offset 0) fetch-fn)))

      (close [this]
        (close-channel channel)))))

",,[],[],[],,,
27,642da2f28c9bc6e373603d6d9119ce33684090f5,print.clj,,clients/clojure/src/kafka/print.clj,ModificationType.ADD,"@@ -0,0 +1,22 @@
+(ns #^{:doc ""Basic Clojure print-dup -> read-string message serialization.""}
+  kafka.print
+  (:use kafka.types)
+  (:import (kafka.types Message)))
+
+(extend-type Object
+  Pack
+    (pack [this]
+      (let [^String st (with-out-str (print-dup this *out*))]
+        (kafka.types.Message. (.getBytes st ""UTF-8"")))))
+
+(extend-type Message
+  Unpack
+    (unpack [this] 
+      (let [^bytes ba  (.message this)
+                   msg (String. ba ""UTF-8"")]
+        (if (not (empty? msg))
+          (try
+            (read-string msg)
+            (catch Exception e
+              (println ""Invalid expression "" msg)))))))
+
","{'added': [(1, '(ns #^{:doc ""Basic Clojure print-dup -> read-string message serialization.""}'), (2, '  kafka.print'), (3, '  (:use kafka.types)'), (4, '  (:import (kafka.types Message)))'), (5, ''), (6, '(extend-type Object'), (7, '  Pack'), (8, '    (pack [this]'), (9, '      (let [^String st (with-out-str (print-dup this *out*))]'), (10, '        (kafka.types.Message. (.getBytes st ""UTF-8"")))))'), (11, ''), (12, '(extend-type Message'), (13, '  Unpack'), (14, '    (unpack [this]'), (15, '      (let [^bytes ba  (.message this)'), (16, '                   msg (String. ba ""UTF-8"")]'), (17, '        (if (not (empty? msg))'), (18, '          (try'), (19, '            (read-string msg)'), (20, '            (catch Exception e'), (21, '              (println ""Invalid expression "" msg)))))))'), (22, '')], 'deleted': []}",22,0,"(ns #^{:doc ""Basic Clojure print-dup -> read-string message serialization.""}
  kafka.print
  (:use kafka.types)
  (:import (kafka.types Message)))

(extend-type Object
  Pack
    (pack [this]
      (let [^String st (with-out-str (print-dup this *out*))]
        (kafka.types.Message. (.getBytes st ""UTF-8"")))))

(extend-type Message
  Unpack
    (unpack [this] 
      (let [^bytes ba  (.message this)
                   msg (String. ba ""UTF-8"")]
        (if (not (empty? msg))
          (try
            (read-string msg)
            (catch Exception e
              (println ""Invalid expression "" msg)))))))

",,[],[],[],,,
28,642da2f28c9bc6e373603d6d9119ce33684090f5,serializable.clj,,clients/clojure/src/kafka/serializable.clj,ModificationType.ADD,"@@ -0,0 +1,22 @@
+(ns #^{:doc ""Serialization for all Java Serializable objects.""}
+  kafka.serializable
+  (:use kafka.types)
+  (:import (kafka.types Message)
+           (java.io Serializable 
+                    ObjectOutputStream ByteArrayOutputStream
+                    ObjectInputStream ByteArrayInputStream)))
+
+(extend-type Serializable
+  Pack
+    (pack [this]
+      (let [bas (ByteArrayOutputStream.)]
+        (with-open [oos (ObjectOutputStream. bas)]
+          (.writeObject oos this))
+        (kafka.types.Message. (.toByteArray bas)))))
+
+(extend-type Message
+  Unpack
+    (unpack [this]
+      (with-open [ois (ObjectInputStream. (ByteArrayInputStream. (.message this)))]
+        (.readObject ois))))
+
","{'added': [(1, '(ns #^{:doc ""Serialization for all Java Serializable objects.""}'), (2, '  kafka.serializable'), (3, '  (:use kafka.types)'), (4, '  (:import (kafka.types Message)'), (5, '           (java.io Serializable'), (6, '                    ObjectOutputStream ByteArrayOutputStream'), (7, '                    ObjectInputStream ByteArrayInputStream)))'), (8, ''), (9, '(extend-type Serializable'), (10, '  Pack'), (11, '    (pack [this]'), (12, '      (let [bas (ByteArrayOutputStream.)]'), (13, '        (with-open [oos (ObjectOutputStream. bas)]'), (14, '          (.writeObject oos this))'), (15, '        (kafka.types.Message. (.toByteArray bas)))))'), (16, ''), (17, '(extend-type Message'), (18, '  Unpack'), (19, '    (unpack [this]'), (20, '      (with-open [ois (ObjectInputStream. (ByteArrayInputStream. (.message this)))]'), (21, '        (.readObject ois))))'), (22, '')], 'deleted': []}",22,0,"(ns #^{:doc ""Serialization for all Java Serializable objects.""}
  kafka.serializable
  (:use kafka.types)
  (:import (kafka.types Message)
           (java.io Serializable 
                    ObjectOutputStream ByteArrayOutputStream
                    ObjectInputStream ByteArrayInputStream)))

(extend-type Serializable
  Pack
    (pack [this]
      (let [bas (ByteArrayOutputStream.)]
        (with-open [oos (ObjectOutputStream. bas)]
          (.writeObject oos this))
        (kafka.types.Message. (.toByteArray bas)))))

(extend-type Message
  Unpack
    (unpack [this]
      (with-open [ois (ObjectInputStream. (ByteArrayInputStream. (.message this)))]
        (.readObject ois))))

",,[],[],[],,,
29,642da2f28c9bc6e373603d6d9119ce33684090f5,types.clj,,clients/clojure/src/kafka/types.clj,ModificationType.ADD,"@@ -0,0 +1,28 @@
+(ns #^{:doc ""Base kafka-clj types.""}
+  kafka.types)
+
+(deftype #^{:doc ""Message type, a wrapper around a byte array.""}
+  Message [^bytes message])
+
+(defprotocol Pack
+  ""Pack protocol converts an object to a Message.""
+  (pack [this] ""Convert object to a Message.""))
+
+(defprotocol Unpack
+  ""Unpack protocol, reads an object from a Message.""
+  (unpack [^Message this] ""Read an object from the message.""))
+
+(defprotocol Producer
+  ""Producer protocol.""
+  (produce [this topic partition messages] ""Send message[s] for a topic to a partition."")
+  (close   [this]                          ""Closes the producer, socket and channel.""))
+
+(defprotocol Consumer
+  ""Consumer protocol.""
+  (consume      [this topic partition offset max-size]  ""Fetch messages. Returns a pair [last-offset, message sequence]"")
+  (offsets      [this topic partition time max-offsets] ""Query offsets. Returns offsets seq."")
+
+  (consume-seq  [this topic partition]                  
+                [this topic partition opts]             ""Creates a sequence over the consumer."")
+  (close        [this]                                  ""Close the consumer, socket and channel.""))
+
","{'added': [(1, '(ns #^{:doc ""Base kafka-clj types.""}'), (2, '  kafka.types)'), (3, ''), (4, '(deftype #^{:doc ""Message type, a wrapper around a byte array.""}'), (5, '  Message [^bytes message])'), (6, ''), (7, '(defprotocol Pack'), (8, '  ""Pack protocol converts an object to a Message.""'), (9, '  (pack [this] ""Convert object to a Message.""))'), (10, ''), (11, '(defprotocol Unpack'), (12, '  ""Unpack protocol, reads an object from a Message.""'), (13, '  (unpack [^Message this] ""Read an object from the message.""))'), (14, ''), (15, '(defprotocol Producer'), (16, '  ""Producer protocol.""'), (17, '  (produce [this topic partition messages] ""Send message[s] for a topic to a partition."")'), (18, '  (close   [this]                          ""Closes the producer, socket and channel.""))'), (19, ''), (20, '(defprotocol Consumer'), (21, '  ""Consumer protocol.""'), (22, '  (consume      [this topic partition offset max-size]  ""Fetch messages. Returns a pair [last-offset, message sequence]"")'), (23, '  (offsets      [this topic partition time max-offsets] ""Query offsets. Returns offsets seq."")'), (24, ''), (25, '  (consume-seq  [this topic partition]'), (26, '                [this topic partition opts]             ""Creates a sequence over the consumer."")'), (27, '  (close        [this]                                  ""Close the consumer, socket and channel.""))'), (28, '')], 'deleted': []}",28,0,"(ns #^{:doc ""Base kafka-clj types.""}
  kafka.types)

(deftype #^{:doc ""Message type, a wrapper around a byte array.""}
  Message [^bytes message])

(defprotocol Pack
  ""Pack protocol converts an object to a Message.""
  (pack [this] ""Convert object to a Message.""))

(defprotocol Unpack
  ""Unpack protocol, reads an object from a Message.""
  (unpack [^Message this] ""Read an object from the message.""))

(defprotocol Producer
  ""Producer protocol.""
  (produce [this topic partition messages] ""Send message[s] for a topic to a partition."")
  (close   [this]                          ""Closes the producer, socket and channel.""))

(defprotocol Consumer
  ""Consumer protocol.""
  (consume      [this topic partition offset max-size]  ""Fetch messages. Returns a pair [last-offset, message sequence]"")
  (offsets      [this topic partition time max-offsets] ""Query offsets. Returns offsets seq."")

  (consume-seq  [this topic partition]                  
                [this topic partition opts]             ""Creates a sequence over the consumer."")
  (close        [this]                                  ""Close the consumer, socket and channel.""))

",,[],[],[],,,
30,642da2f28c9bc6e373603d6d9119ce33684090f5,buffer_test.clj,,clients/clojure/test/kafka/buffer_test.clj,ModificationType.ADD,"@@ -0,0 +1,46 @@
+(ns kafka.buffer-test
+  (:use (kafka buffer)
+        clojure.test))
+
+(deftest test-put-get
+  (with-buffer (buffer 64)
+    (put (byte 5))
+    (put (short 10))
+    (put (int 20))
+    (put (long 40))
+    (put ""test"")
+    (put (byte-array 3 [(byte 1) (byte 2) (byte 3)]))
+    (flip)
+
+    (is (= (get-byte)     (byte 5)))
+    (is (= (get-short)    (short 10)))
+    (is (= (get-int)      (int 20)))
+    (is (= (get-long)     (long 40)))
+    (is (= (get-string 4) ""test""))
+    (let [ba (get-array 3)]
+      (is (= (nth ba 0) (byte 1)))
+      (is (= (nth ba 1) (byte 2)))
+      (is (= (nth ba 2) (byte 3))))))
+
+(deftest test-with-put
+  (with-buffer (buffer 64)
+    (with-put 4 count
+      (put ""test 1""))
+    (flip)
+
+    (is (= (get-int) (int 6)))
+    (is (= (get-string 6) ""test 1""))))
+
+(deftest test-length-encoded
+  (with-buffer (buffer 64)
+    (length-encoded short
+      (put ""test 1""))
+    (length-encoded int
+      (put ""test 2""))
+    (flip)
+
+    (is (= (get-short) (short 6)))
+    (is (= (get-string 6) ""test 1""))
+    (is (= (get-int) (int 6)))
+    (is (= (get-string 6) ""test 2""))))
+
","{'added': [(1, '(ns kafka.buffer-test'), (2, '  (:use (kafka buffer)'), (3, '        clojure.test))'), (4, ''), (5, '(deftest test-put-get'), (6, '  (with-buffer (buffer 64)'), (7, '    (put (byte 5))'), (8, '    (put (short 10))'), (9, '    (put (int 20))'), (10, '    (put (long 40))'), (11, '    (put ""test"")'), (12, '    (put (byte-array 3 [(byte 1) (byte 2) (byte 3)]))'), (13, '    (flip)'), (14, ''), (15, '    (is (= (get-byte)     (byte 5)))'), (16, '    (is (= (get-short)    (short 10)))'), (17, '    (is (= (get-int)      (int 20)))'), (18, '    (is (= (get-long)     (long 40)))'), (19, '    (is (= (get-string 4) ""test""))'), (20, '    (let [ba (get-array 3)]'), (21, '      (is (= (nth ba 0) (byte 1)))'), (22, '      (is (= (nth ba 1) (byte 2)))'), (23, '      (is (= (nth ba 2) (byte 3))))))'), (24, ''), (25, '(deftest test-with-put'), (26, '  (with-buffer (buffer 64)'), (27, '    (with-put 4 count'), (28, '      (put ""test 1""))'), (29, '    (flip)'), (30, ''), (31, '    (is (= (get-int) (int 6)))'), (32, '    (is (= (get-string 6) ""test 1""))))'), (33, ''), (34, '(deftest test-length-encoded'), (35, '  (with-buffer (buffer 64)'), (36, '    (length-encoded short'), (37, '      (put ""test 1""))'), (38, '    (length-encoded int'), (39, '      (put ""test 2""))'), (40, '    (flip)'), (41, ''), (42, '    (is (= (get-short) (short 6)))'), (43, '    (is (= (get-string 6) ""test 1""))'), (44, '    (is (= (get-int) (int 6)))'), (45, '    (is (= (get-string 6) ""test 2""))))'), (46, '')], 'deleted': []}",46,0,"(ns kafka.buffer-test
  (:use (kafka buffer)
        clojure.test))

(deftest test-put-get
  (with-buffer (buffer 64)
    (put (byte 5))
    (put (short 10))
    (put (int 20))
    (put (long 40))
    (put ""test"")
    (put (byte-array 3 [(byte 1) (byte 2) (byte 3)]))
    (flip)

    (is (= (get-byte)     (byte 5)))
    (is (= (get-short)    (short 10)))
    (is (= (get-int)      (int 20)))
    (is (= (get-long)     (long 40)))
    (is (= (get-string 4) ""test""))
    (let [ba (get-array 3)]
      (is (= (nth ba 0) (byte 1)))
      (is (= (nth ba 1) (byte 2)))
      (is (= (nth ba 2) (byte 3))))))

(deftest test-with-put
  (with-buffer (buffer 64)
    (with-put 4 count
      (put ""test 1""))
    (flip)

    (is (= (get-int) (int 6)))
    (is (= (get-string 6) ""test 1""))))

(deftest test-length-encoded
  (with-buffer (buffer 64)
    (length-encoded short
      (put ""test 1""))
    (length-encoded int
      (put ""test 2""))
    (flip)

    (is (= (get-short) (short 6)))
    (is (= (get-string 6) ""test 1""))
    (is (= (get-int) (int 6)))
    (is (= (get-string 6) ""test 2""))))

",,[],[],[],,,
31,642da2f28c9bc6e373603d6d9119ce33684090f5,print_test.clj,,clients/clojure/test/kafka/print_test.clj,ModificationType.ADD,"@@ -0,0 +1,12 @@
+(ns kafka.print-test
+  (:use (kafka types print)
+        clojure.test))
+
+(deftest test-pack-unpack
+  (is (= ""test"" (unpack (pack ""test""))))
+  (is (= 123 (unpack (pack 123))))
+  (is (= true (unpack (pack true))))
+  (is (= [1 2 3] (unpack (pack [1 2 3]))))
+  (is (= {:a 1} (unpack (pack {:a 1}))))
+  (is (= '(+ 1 2 3) (unpack (pack '(+ 1 2 3))))))
+
","{'added': [(1, '(ns kafka.print-test'), (2, '  (:use (kafka types print)'), (3, '        clojure.test))'), (4, ''), (5, '(deftest test-pack-unpack'), (6, '  (is (= ""test"" (unpack (pack ""test""))))'), (7, '  (is (= 123 (unpack (pack 123))))'), (8, '  (is (= true (unpack (pack true))))'), (9, '  (is (= [1 2 3] (unpack (pack [1 2 3]))))'), (10, '  (is (= {:a 1} (unpack (pack {:a 1}))))'), (11, ""  (is (= '(+ 1 2 3) (unpack (pack '(+ 1 2 3))))))""), (12, '')], 'deleted': []}",12,0,"(ns kafka.print-test
  (:use (kafka types print)
        clojure.test))

(deftest test-pack-unpack
  (is (= ""test"" (unpack (pack ""test""))))
  (is (= 123 (unpack (pack 123))))
  (is (= true (unpack (pack true))))
  (is (= [1 2 3] (unpack (pack [1 2 3]))))
  (is (= {:a 1} (unpack (pack {:a 1}))))
  (is (= '(+ 1 2 3) (unpack (pack '(+ 1 2 3))))))

",,[],[],[],,,
32,642da2f28c9bc6e373603d6d9119ce33684090f5,serializable_test.clj,,clients/clojure/test/kafka/serializable_test.clj,ModificationType.ADD,"@@ -0,0 +1,14 @@
+(ns kafka.serializable-test
+  (:use (kafka types serializable)
+        clojure.test))
+
+(deftest test-pack-unpack
+  (is (= ""test"" (unpack (pack ""test""))))
+  (is (= 123 (unpack (pack 123))))
+  (is (= true (unpack (pack true))))
+  (is (= [1 2 3] (unpack (pack [1 2 3]))))
+  (is (= {:a 1} (unpack (pack {:a 1}))))
+  (is (= '(+ 1 2 3) (unpack (pack '(+ 1 2 3)))))
+  (let [now (java.util.Date.)]
+    (is (= now (unpack (pack now))))))
+
","{'added': [(1, '(ns kafka.serializable-test'), (2, '  (:use (kafka types serializable)'), (3, '        clojure.test))'), (4, ''), (5, '(deftest test-pack-unpack'), (6, '  (is (= ""test"" (unpack (pack ""test""))))'), (7, '  (is (= 123 (unpack (pack 123))))'), (8, '  (is (= true (unpack (pack true))))'), (9, '  (is (= [1 2 3] (unpack (pack [1 2 3]))))'), (10, '  (is (= {:a 1} (unpack (pack {:a 1}))))'), (11, ""  (is (= '(+ 1 2 3) (unpack (pack '(+ 1 2 3)))))""), (12, '  (let [now (java.util.Date.)]'), (13, '    (is (= now (unpack (pack now))))))'), (14, '')], 'deleted': []}",14,0,"(ns kafka.serializable-test
  (:use (kafka types serializable)
        clojure.test))

(deftest test-pack-unpack
  (is (= ""test"" (unpack (pack ""test""))))
  (is (= 123 (unpack (pack 123))))
  (is (= true (unpack (pack true))))
  (is (= [1 2 3] (unpack (pack [1 2 3]))))
  (is (= {:a 1} (unpack (pack {:a 1}))))
  (is (= '(+ 1 2 3) (unpack (pack '(+ 1 2 3)))))
  (let [now (java.util.Date.)]
    (is (= now (unpack (pack now))))))

",,[],[],[],,,
33,642da2f28c9bc6e373603d6d9119ce33684090f5,LICENSE,,clients/cpp/LICENSE,ModificationType.ADD,"@@ -0,0 +1,203 @@
+
+                              Apache License
+                        Version 2.0, January 2004
+                     http://www.apache.org/licenses/
+
+TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+1. Definitions.
+
+   ""License"" shall mean the terms and conditions for use, reproduction,
+   and distribution as defined by Sections 1 through 9 of this document.
+
+   ""Licensor"" shall mean the copyright owner or entity authorized by
+   the copyright owner that is granting the License.
+
+   ""Legal Entity"" shall mean the union of the acting entity and all
+   other entities that control, are controlled by, or are under common
+   control with that entity. For the purposes of this definition,
+   ""control"" means (i) the power, direct or indirect, to cause the
+   direction or management of such entity, whether by contract or
+   otherwise, or (ii) ownership of fifty percent (50%) or more of the
+   outstanding shares, or (iii) beneficial ownership of such entity.
+
+   ""You"" (or ""Your"") shall mean an individual or Legal Entity
+   exercising permissions granted by this License.
+
+   ""Source"" form shall mean the preferred form for making modifications,
+   including but not limited to software source code, documentation
+   source, and configuration files.
+
+   ""Object"" form shall mean any form resulting from mechanical
+   transformation or translation of a Source form, including but
+   not limited to compiled object code, generated documentation,
+   and conversions to other media types.
+
+   ""Work"" shall mean the work of authorship, whether in Source or
+   Object form, made available under the License, as indicated by a
+   copyright notice that is included in or attached to the work
+   (an example is provided in the Appendix below).
+
+   ""Derivative Works"" shall mean any work, whether in Source or Object
+   form, that is based on (or derived from) the Work and for which the
+   editorial revisions, annotations, elaborations, or other modifications
+   represent, as a whole, an original work of authorship. For the purposes
+   of this License, Derivative Works shall not include works that remain
+   separable from, or merely link (or bind by name) to the interfaces of,
+   the Work and Derivative Works thereof.
+
+   ""Contribution"" shall mean any work of authorship, including
+   the original version of the Work and any modifications or additions
+   to that Work or Derivative Works thereof, that is intentionally
+   submitted to Licensor for inclusion in the Work by the copyright owner
+   or by an individual or Legal Entity authorized to submit on behalf of
+   the copyright owner. For the purposes of this definition, ""submitted""
+   means any form of electronic, verbal, or written communication sent
+   to the Licensor or its representatives, including but not limited to
+   communication on electronic mailing lists, source code control systems,
+   and issue tracking systems that are managed by, or on behalf of, the
+   Licensor for the purpose of discussing and improving the Work, but
+   excluding communication that is conspicuously marked or otherwise
+   designated in writing by the copyright owner as ""Not a Contribution.""
+
+   ""Contributor"" shall mean Licensor and any individual or Legal Entity
+   on behalf of whom a Contribution has been received by Licensor and
+   subsequently incorporated within the Work.
+
+2. Grant of Copyright License. Subject to the terms and conditions of
+   this License, each Contributor hereby grants to You a perpetual,
+   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+   copyright license to reproduce, prepare Derivative Works of,
+   publicly display, publicly perform, sublicense, and distribute the
+   Work and such Derivative Works in Source or Object form.
+
+3. Grant of Patent License. Subject to the terms and conditions of
+   this License, each Contributor hereby grants to You a perpetual,
+   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+   (except as stated in this section) patent license to make, have made,
+   use, offer to sell, sell, import, and otherwise transfer the Work,
+   where such license applies only to those patent claims licensable
+   by such Contributor that are necessarily infringed by their
+   Contribution(s) alone or by combination of their Contribution(s)
+   with the Work to which such Contribution(s) was submitted. If You
+   institute patent litigation against any entity (including a
+   cross-claim or counterclaim in a lawsuit) alleging that the Work
+   or a Contribution incorporated within the Work constitutes direct
+   or contributory patent infringement, then any patent licenses
+   granted to You under this License for that Work shall terminate
+   as of the date such litigation is filed.
+
+4. Redistribution. You may reproduce and distribute copies of the
+   Work or Derivative Works thereof in any medium, with or without
+   modifications, and in Source or Object form, provided that You
+   meet the following conditions:
+
+   (a) You must give any other recipients of the Work or
+       Derivative Works a copy of this License; and
+
+   (b) You must cause any modified files to carry prominent notices
+       stating that You changed the files; and
+
+   (c) You must retain, in the Source form of any Derivative Works
+       that You distribute, all copyright, patent, trademark, and
+       attribution notices from the Source form of the Work,
+       excluding those notices that do not pertain to any part of
+       the Derivative Works; and
+
+   (d) If the Work includes a ""NOTICE"" text file as part of its
+       distribution, then any Derivative Works that You distribute must
+       include a readable copy of the attribution notices contained
+       within such NOTICE file, excluding those notices that do not
+       pertain to any part of the Derivative Works, in at least one
+       of the following places: within a NOTICE text file distributed
+       as part of the Derivative Works; within the Source form or
+       documentation, if provided along with the Derivative Works; or,
+       within a display generated by the Derivative Works, if and
+       wherever such third-party notices normally appear. The contents
+       of the NOTICE file are for informational purposes only and
+       do not modify the License. You may add Your own attribution
+       notices within Derivative Works that You distribute, alongside
+       or as an addendum to the NOTICE text from the Work, provided
+       that such additional attribution notices cannot be construed
+       as modifying the License.
+
+   You may add Your own copyright statement to Your modifications and
+   may provide additional or different license terms and conditions
+   for use, reproduction, or distribution of Your modifications, or
+   for any such Derivative Works as a whole, provided Your use,
+   reproduction, and distribution of the Work otherwise complies with
+   the conditions stated in this License.
+
+5. Submission of Contributions. Unless You explicitly state otherwise,
+   any Contribution intentionally submitted for inclusion in the Work
+   by You to the Licensor shall be under the terms and conditions of
+   this License, without any additional terms or conditions.
+   Notwithstanding the above, nothing herein shall supersede or modify
+   the terms of any separate license agreement you may have executed
+   with Licensor regarding such Contributions.
+
+6. Trademarks. This License does not grant permission to use the trade
+   names, trademarks, service marks, or product names of the Licensor,
+   except as required for reasonable and customary use in describing the
+   origin of the Work and reproducing the content of the NOTICE file.
+
+7. Disclaimer of Warranty. Unless required by applicable law or
+   agreed to in writing, Licensor provides the Work (and each
+   Contributor provides its Contributions) on an ""AS IS"" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+   implied, including, without limitation, any warranties or conditions
+   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+   PARTICULAR PURPOSE. You are solely responsible for determining the
+   appropriateness of using or redistributing the Work and assume any
+   risks associated with Your exercise of permissions under this License.
+
+8. Limitation of Liability. In no event and under no legal theory,
+   whether in tort (including negligence), contract, or otherwise,
+   unless required by applicable law (such as deliberate and grossly
+   negligent acts) or agreed to in writing, shall any Contributor be
+   liable to You for damages, including any direct, indirect, special,
+   incidental, or consequential damages of any character arising as a
+   result of this License or out of the use or inability to use the
+   Work (including but not limited to damages for loss of goodwill,
+   work stoppage, computer failure or malfunction, or any and all
+   other commercial damages or losses), even if such Contributor
+   has been advised of the possibility of such damages.
+
+9. Accepting Warranty or Additional Liability. While redistributing
+   the Work or Derivative Works thereof, You may choose to offer,
+   and charge a fee for, acceptance of support, warranty, indemnity,
+   or other liability obligations and/or rights consistent with this
+   License. However, in accepting such obligations, You may act only
+   on Your own behalf and on Your sole responsibility, not on behalf
+   of any other Contributor, and only if You agree to indemnify,
+   defend, and hold each Contributor harmless for any liability
+   incurred by, or claims asserted against, such Contributor by reason
+   of your accepting any such warranty or additional liability.
+
+END OF TERMS AND CONDITIONS
+
+APPENDIX: How to apply the Apache License to your work.
+
+   To apply the Apache License to your work, attach the following
+   boilerplate notice, with the fields enclosed by brackets ""[]""
+   replaced with your own identifying information. (Don't include
+   the brackets!)  The text should be enclosed in the appropriate
+   comment syntax for the file format. We also recommend that a
+   file or class name and description of purpose be included on the
+   same ""printed page"" as the copyright notice for easier
+   identification within third-party archives.
+
+Copyright 2011 LinkedIn
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+
","{'added': [(1, ''), (2, '                              Apache License'), (3, '                        Version 2.0, January 2004'), (4, '                     http://www.apache.org/licenses/'), (5, ''), (6, 'TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION'), (7, ''), (8, '1. Definitions.'), (9, ''), (10, '   ""License"" shall mean the terms and conditions for use, reproduction,'), (11, '   and distribution as defined by Sections 1 through 9 of this document.'), (12, ''), (13, '   ""Licensor"" shall mean the copyright owner or entity authorized by'), (14, '   the copyright owner that is granting the License.'), (15, ''), (16, '   ""Legal Entity"" shall mean the union of the acting entity and all'), (17, '   other entities that control, are controlled by, or are under common'), (18, '   control with that entity. For the purposes of this definition,'), (19, '   ""control"" means (i) the power, direct or indirect, to cause the'), (20, '   direction or management of such entity, whether by contract or'), (21, '   otherwise, or (ii) ownership of fifty percent (50%) or more of the'), (22, '   outstanding shares, or (iii) beneficial ownership of such entity.'), (23, ''), (24, '   ""You"" (or ""Your"") shall mean an individual or Legal Entity'), (25, '   exercising permissions granted by this License.'), (26, ''), (27, '   ""Source"" form shall mean the preferred form for making modifications,'), (28, '   including but not limited to software source code, documentation'), (29, '   source, and configuration files.'), (30, ''), (31, '   ""Object"" form shall mean any form resulting from mechanical'), (32, '   transformation or translation of a Source form, including but'), (33, '   not limited to compiled object code, generated documentation,'), (34, '   and conversions to other media types.'), (35, ''), (36, '   ""Work"" shall mean the work of authorship, whether in Source or'), (37, '   Object form, made available under the License, as indicated by a'), (38, '   copyright notice that is included in or attached to the work'), (39, '   (an example is provided in the Appendix below).'), (40, ''), (41, '   ""Derivative Works"" shall mean any work, whether in Source or Object'), (42, '   form, that is based on (or derived from) the Work and for which the'), (43, '   editorial revisions, annotations, elaborations, or other modifications'), (44, '   represent, as a whole, an original work of authorship. For the purposes'), (45, '   of this License, Derivative Works shall not include works that remain'), (46, '   separable from, or merely link (or bind by name) to the interfaces of,'), (47, '   the Work and Derivative Works thereof.'), (48, ''), (49, '   ""Contribution"" shall mean any work of authorship, including'), (50, '   the original version of the Work and any modifications or additions'), (51, '   to that Work or Derivative Works thereof, that is intentionally'), (52, '   submitted to Licensor for inclusion in the Work by the copyright owner'), (53, '   or by an individual or Legal Entity authorized to submit on behalf of'), (54, '   the copyright owner. For the purposes of this definition, ""submitted""'), (55, '   means any form of electronic, verbal, or written communication sent'), (56, '   to the Licensor or its representatives, including but not limited to'), (57, '   communication on electronic mailing lists, source code control systems,'), (58, '   and issue tracking systems that are managed by, or on behalf of, the'), (59, '   Licensor for the purpose of discussing and improving the Work, but'), (60, '   excluding communication that is conspicuously marked or otherwise'), (61, '   designated in writing by the copyright owner as ""Not a Contribution.""'), (62, ''), (63, '   ""Contributor"" shall mean Licensor and any individual or Legal Entity'), (64, '   on behalf of whom a Contribution has been received by Licensor and'), (65, '   subsequently incorporated within the Work.'), (66, ''), (67, '2. Grant of Copyright License. Subject to the terms and conditions of'), (68, '   this License, each Contributor hereby grants to You a perpetual,'), (69, '   worldwide, non-exclusive, no-charge, royalty-free, irrevocable'), (70, '   copyright license to reproduce, prepare Derivative Works of,'), (71, '   publicly display, publicly perform, sublicense, and distribute the'), (72, '   Work and such Derivative Works in Source or Object form.'), (73, ''), (74, '3. Grant of Patent License. Subject to the terms and conditions of'), (75, '   this License, each Contributor hereby grants to You a perpetual,'), (76, '   worldwide, non-exclusive, no-charge, royalty-free, irrevocable'), (77, '   (except as stated in this section) patent license to make, have made,'), (78, '   use, offer to sell, sell, import, and otherwise transfer the Work,'), (79, '   where such license applies only to those patent claims licensable'), (80, '   by such Contributor that are necessarily infringed by their'), (81, '   Contribution(s) alone or by combination of their Contribution(s)'), (82, '   with the Work to which such Contribution(s) was submitted. If You'), (83, '   institute patent litigation against any entity (including a'), (84, '   cross-claim or counterclaim in a lawsuit) alleging that the Work'), (85, '   or a Contribution incorporated within the Work constitutes direct'), (86, '   or contributory patent infringement, then any patent licenses'), (87, '   granted to You under this License for that Work shall terminate'), (88, '   as of the date such litigation is filed.'), (89, ''), (90, '4. Redistribution. You may reproduce and distribute copies of the'), (91, '   Work or Derivative Works thereof in any medium, with or without'), (92, '   modifications, and in Source or Object form, provided that You'), (93, '   meet the following conditions:'), (94, ''), (95, '   (a) You must give any other recipients of the Work or'), (96, '       Derivative Works a copy of this License; and'), (97, ''), (98, '   (b) You must cause any modified files to carry prominent notices'), (99, '       stating that You changed the files; and'), (100, ''), (101, '   (c) You must retain, in the Source form of any Derivative Works'), (102, '       that You distribute, all copyright, patent, trademark, and'), (103, '       attribution notices from the Source form of the Work,'), (104, '       excluding those notices that do not pertain to any part of'), (105, '       the Derivative Works; and'), (106, ''), (107, '   (d) If the Work includes a ""NOTICE"" text file as part of its'), (108, '       distribution, then any Derivative Works that You distribute must'), (109, '       include a readable copy of the attribution notices contained'), (110, '       within such NOTICE file, excluding those notices that do not'), (111, '       pertain to any part of the Derivative Works, in at least one'), (112, '       of the following places: within a NOTICE text file distributed'), (113, '       as part of the Derivative Works; within the Source form or'), (114, '       documentation, if provided along with the Derivative Works; or,'), (115, '       within a display generated by the Derivative Works, if and'), (116, '       wherever such third-party notices normally appear. The contents'), (117, '       of the NOTICE file are for informational purposes only and'), (118, '       do not modify the License. You may add Your own attribution'), (119, '       notices within Derivative Works that You distribute, alongside'), (120, '       or as an addendum to the NOTICE text from the Work, provided'), (121, '       that such additional attribution notices cannot be construed'), (122, '       as modifying the License.'), (123, ''), (124, '   You may add Your own copyright statement to Your modifications and'), (125, '   may provide additional or different license terms and conditions'), (126, '   for use, reproduction, or distribution of Your modifications, or'), (127, '   for any such Derivative Works as a whole, provided Your use,'), (128, '   reproduction, and distribution of the Work otherwise complies with'), (129, '   the conditions stated in this License.'), (130, ''), (131, '5. Submission of Contributions. Unless You explicitly state otherwise,'), (132, '   any Contribution intentionally submitted for inclusion in the Work'), (133, '   by You to the Licensor shall be under the terms and conditions of'), (134, '   this License, without any additional terms or conditions.'), (135, '   Notwithstanding the above, nothing herein shall supersede or modify'), (136, '   the terms of any separate license agreement you may have executed'), (137, '   with Licensor regarding such Contributions.'), (138, ''), (139, '6. Trademarks. This License does not grant permission to use the trade'), (140, '   names, trademarks, service marks, or product names of the Licensor,'), (141, '   except as required for reasonable and customary use in describing the'), (142, '   origin of the Work and reproducing the content of the NOTICE file.'), (143, ''), (144, '7. Disclaimer of Warranty. Unless required by applicable law or'), (145, '   agreed to in writing, Licensor provides the Work (and each'), (146, '   Contributor provides its Contributions) on an ""AS IS"" BASIS,'), (147, '   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'), (148, '   implied, including, without limitation, any warranties or conditions'), (149, '   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A'), (150, '   PARTICULAR PURPOSE. You are solely responsible for determining the'), (151, '   appropriateness of using or redistributing the Work and assume any'), (152, '   risks associated with Your exercise of permissions under this License.'), (153, ''), (154, '8. Limitation of Liability. In no event and under no legal theory,'), (155, '   whether in tort (including negligence), contract, or otherwise,'), (156, '   unless required by applicable law (such as deliberate and grossly'), (157, '   negligent acts) or agreed to in writing, shall any Contributor be'), (158, '   liable to You for damages, including any direct, indirect, special,'), (159, '   incidental, or consequential damages of any character arising as a'), (160, '   result of this License or out of the use or inability to use the'), (161, '   Work (including but not limited to damages for loss of goodwill,'), (162, '   work stoppage, computer failure or malfunction, or any and all'), (163, '   other commercial damages or losses), even if such Contributor'), (164, '   has been advised of the possibility of such damages.'), (165, ''), (166, '9. Accepting Warranty or Additional Liability. While redistributing'), (167, '   the Work or Derivative Works thereof, You may choose to offer,'), (168, '   and charge a fee for, acceptance of support, warranty, indemnity,'), (169, '   or other liability obligations and/or rights consistent with this'), (170, '   License. However, in accepting such obligations, You may act only'), (171, '   on Your own behalf and on Your sole responsibility, not on behalf'), (172, '   of any other Contributor, and only if You agree to indemnify,'), (173, '   defend, and hold each Contributor harmless for any liability'), (174, '   incurred by, or claims asserted against, such Contributor by reason'), (175, '   of your accepting any such warranty or additional liability.'), (176, ''), (177, 'END OF TERMS AND CONDITIONS'), (178, ''), (179, 'APPENDIX: How to apply the Apache License to your work.'), (180, ''), (181, '   To apply the Apache License to your work, attach the following'), (182, '   boilerplate notice, with the fields enclosed by brackets ""[]""'), (183, ""   replaced with your own identifying information. (Don't include""), (184, '   the brackets!)  The text should be enclosed in the appropriate'), (185, '   comment syntax for the file format. We also recommend that a'), (186, '   file or class name and description of purpose be included on the'), (187, '   same ""printed page"" as the copyright notice for easier'), (188, '   identification within third-party archives.'), (189, ''), (190, 'Copyright 2011 LinkedIn'), (191, ''), (192, 'Licensed under the Apache License, Version 2.0 (the ""License"");'), (193, 'you may not use this file except in compliance with the License.'), (194, 'You may obtain a copy of the License at'), (195, ''), (196, '    http://www.apache.org/licenses/LICENSE-2.0'), (197, ''), (198, 'Unless required by applicable law or agreed to in writing, software'), (199, 'distributed under the License is distributed on an ""AS IS"" BASIS,'), (200, 'WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (201, 'See the License for the specific language governing permissions and'), (202, 'limitations under the License.'), (203, '')], 'deleted': []}",203,0,"
                              Apache License
                        Version 2.0, January 2004
                     http://www.apache.org/licenses/

TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

1. Definitions.

   ""License"" shall mean the terms and conditions for use, reproduction,
   and distribution as defined by Sections 1 through 9 of this document.

   ""Licensor"" shall mean the copyright owner or entity authorized by
   the copyright owner that is granting the License.

   ""Legal Entity"" shall mean the union of the acting entity and all
   other entities that control, are controlled by, or are under common
   control with that entity. For the purposes of this definition,
   ""control"" means (i) the power, direct or indirect, to cause the
   direction or management of such entity, whether by contract or
   otherwise, or (ii) ownership of fifty percent (50%) or more of the
   outstanding shares, or (iii) beneficial ownership of such entity.

   ""You"" (or ""Your"") shall mean an individual or Legal Entity
   exercising permissions granted by this License.

   ""Source"" form shall mean the preferred form for making modifications,
   including but not limited to software source code, documentation
   source, and configuration files.

   ""Object"" form shall mean any form resulting from mechanical
   transformation or translation of a Source form, including but
   not limited to compiled object code, generated documentation,
   and conversions to other media types.

   ""Work"" shall mean the work of authorship, whether in Source or
   Object form, made available under the License, as indicated by a
   copyright notice that is included in or attached to the work
   (an example is provided in the Appendix below).

   ""Derivative Works"" shall mean any work, whether in Source or Object
   form, that is based on (or derived from) the Work and for which the
   editorial revisions, annotations, elaborations, or other modifications
   represent, as a whole, an original work of authorship. For the purposes
   of this License, Derivative Works shall not include works that remain
   separable from, or merely link (or bind by name) to the interfaces of,
   the Work and Derivative Works thereof.

   ""Contribution"" shall mean any work of authorship, including
   the original version of the Work and any modifications or additions
   to that Work or Derivative Works thereof, that is intentionally
   submitted to Licensor for inclusion in the Work by the copyright owner
   or by an individual or Legal Entity authorized to submit on behalf of
   the copyright owner. For the purposes of this definition, ""submitted""
   means any form of electronic, verbal, or written communication sent
   to the Licensor or its representatives, including but not limited to
   communication on electronic mailing lists, source code control systems,
   and issue tracking systems that are managed by, or on behalf of, the
   Licensor for the purpose of discussing and improving the Work, but
   excluding communication that is conspicuously marked or otherwise
   designated in writing by the copyright owner as ""Not a Contribution.""

   ""Contributor"" shall mean Licensor and any individual or Legal Entity
   on behalf of whom a Contribution has been received by Licensor and
   subsequently incorporated within the Work.

2. Grant of Copyright License. Subject to the terms and conditions of
   this License, each Contributor hereby grants to You a perpetual,
   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   copyright license to reproduce, prepare Derivative Works of,
   publicly display, publicly perform, sublicense, and distribute the
   Work and such Derivative Works in Source or Object form.

3. Grant of Patent License. Subject to the terms and conditions of
   this License, each Contributor hereby grants to You a perpetual,
   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   (except as stated in this section) patent license to make, have made,
   use, offer to sell, sell, import, and otherwise transfer the Work,
   where such license applies only to those patent claims licensable
   by such Contributor that are necessarily infringed by their
   Contribution(s) alone or by combination of their Contribution(s)
   with the Work to which such Contribution(s) was submitted. If You
   institute patent litigation against any entity (including a
   cross-claim or counterclaim in a lawsuit) alleging that the Work
   or a Contribution incorporated within the Work constitutes direct
   or contributory patent infringement, then any patent licenses
   granted to You under this License for that Work shall terminate
   as of the date such litigation is filed.

4. Redistribution. You may reproduce and distribute copies of the
   Work or Derivative Works thereof in any medium, with or without
   modifications, and in Source or Object form, provided that You
   meet the following conditions:

   (a) You must give any other recipients of the Work or
       Derivative Works a copy of this License; and

   (b) You must cause any modified files to carry prominent notices
       stating that You changed the files; and

   (c) You must retain, in the Source form of any Derivative Works
       that You distribute, all copyright, patent, trademark, and
       attribution notices from the Source form of the Work,
       excluding those notices that do not pertain to any part of
       the Derivative Works; and

   (d) If the Work includes a ""NOTICE"" text file as part of its
       distribution, then any Derivative Works that You distribute must
       include a readable copy of the attribution notices contained
       within such NOTICE file, excluding those notices that do not
       pertain to any part of the Derivative Works, in at least one
       of the following places: within a NOTICE text file distributed
       as part of the Derivative Works; within the Source form or
       documentation, if provided along with the Derivative Works; or,
       within a display generated by the Derivative Works, if and
       wherever such third-party notices normally appear. The contents
       of the NOTICE file are for informational purposes only and
       do not modify the License. You may add Your own attribution
       notices within Derivative Works that You distribute, alongside
       or as an addendum to the NOTICE text from the Work, provided
       that such additional attribution notices cannot be construed
       as modifying the License.

   You may add Your own copyright statement to Your modifications and
   may provide additional or different license terms and conditions
   for use, reproduction, or distribution of Your modifications, or
   for any such Derivative Works as a whole, provided Your use,
   reproduction, and distribution of the Work otherwise complies with
   the conditions stated in this License.

5. Submission of Contributions. Unless You explicitly state otherwise,
   any Contribution intentionally submitted for inclusion in the Work
   by You to the Licensor shall be under the terms and conditions of
   this License, without any additional terms or conditions.
   Notwithstanding the above, nothing herein shall supersede or modify
   the terms of any separate license agreement you may have executed
   with Licensor regarding such Contributions.

6. Trademarks. This License does not grant permission to use the trade
   names, trademarks, service marks, or product names of the Licensor,
   except as required for reasonable and customary use in describing the
   origin of the Work and reproducing the content of the NOTICE file.

7. Disclaimer of Warranty. Unless required by applicable law or
   agreed to in writing, Licensor provides the Work (and each
   Contributor provides its Contributions) on an ""AS IS"" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
   implied, including, without limitation, any warranties or conditions
   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
   PARTICULAR PURPOSE. You are solely responsible for determining the
   appropriateness of using or redistributing the Work and assume any
   risks associated with Your exercise of permissions under this License.

8. Limitation of Liability. In no event and under no legal theory,
   whether in tort (including negligence), contract, or otherwise,
   unless required by applicable law (such as deliberate and grossly
   negligent acts) or agreed to in writing, shall any Contributor be
   liable to You for damages, including any direct, indirect, special,
   incidental, or consequential damages of any character arising as a
   result of this License or out of the use or inability to use the
   Work (including but not limited to damages for loss of goodwill,
   work stoppage, computer failure or malfunction, or any and all
   other commercial damages or losses), even if such Contributor
   has been advised of the possibility of such damages.

9. Accepting Warranty or Additional Liability. While redistributing
   the Work or Derivative Works thereof, You may choose to offer,
   and charge a fee for, acceptance of support, warranty, indemnity,
   or other liability obligations and/or rights consistent with this
   License. However, in accepting such obligations, You may act only
   on Your own behalf and on Your sole responsibility, not on behalf
   of any other Contributor, and only if You agree to indemnify,
   defend, and hold each Contributor harmless for any liability
   incurred by, or claims asserted against, such Contributor by reason
   of your accepting any such warranty or additional liability.

END OF TERMS AND CONDITIONS

APPENDIX: How to apply the Apache License to your work.

   To apply the Apache License to your work, attach the following
   boilerplate notice, with the fields enclosed by brackets ""[]""
   replaced with your own identifying information. (Don't include
   the brackets!)  The text should be enclosed in the appropriate
   comment syntax for the file format. We also recommend that a
   file or class name and description of purpose be included on the
   same ""printed page"" as the copyright notice for easier
   identification within third-party archives.

Copyright 2011 LinkedIn

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

",,[],[],[],,,
34,642da2f28c9bc6e373603d6d9119ce33684090f5,Makefile.am,,clients/cpp/Makefile.am,ModificationType.ADD,"@@ -0,0 +1,51 @@
+## LibKafkaConect
+## A C++ shared libray for connecting to Kafka
+
+#
+# Warning this is the first time I've made a configure.ac/Makefile.am thing
+# Please improve it as I have no idea what I am doing
+# @benjamg
+#
+
+ACLOCAL_AMFLAGS = -I build-aux/m4 ${ACLOCAL_FLAGS}
+AM_CPPFLAGS = $(DEPS_CFLAGS)
+EXAMPLE_LIBS = -lboost_system -lboost_thread -lkafkaconnect
+
+#
+# Shared Library
+#
+
+lib_LTLIBRARIES = libkafkaconnect.la
+
+libkafkaconnect_la_SOURCES = src/producer.cpp
+libkafkaconnect_la_LDFLAGS = -version-info $(KAFKACONNECT_VERSION)
+
+kafkaconnect_includedir = $(includedir)/kafkaconnect
+kafkaconnect_include_HEADERS = src/producer.hpp \
+								src/encoder.hpp \
+								src/encoder_helper.hpp
+
+#
+# Examples
+#                                 
+
+noinst_PROGRAMS = producer
+
+producer_SOURCES = src/example.cpp
+producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS)
+
+#
+# Tests
+#
+
+check_PROGRAMS = tests/encoder_helper tests/encoder tests/producer
+TESTS = tests/encoder_helper tests/encoder tests/producer
+
+tests_encoder_helper_SOURCES = src/tests/encoder_helper_tests.cpp
+tests_encoder_helper_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework
+
+tests_encoder_SOURCES = src/tests/encoder_tests.cpp
+tests_encoder_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework
+
+tests_producer_SOURCES = src/tests/producer_tests.cpp
+tests_producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework
","{'added': [(1, '## LibKafkaConect'), (2, '## A C++ shared libray for connecting to Kafka'), (3, ''), (4, '#'), (5, ""# Warning this is the first time I've made a configure.ac/Makefile.am thing""), (6, '# Please improve it as I have no idea what I am doing'), (7, '# @benjamg'), (8, '#'), (9, ''), (10, 'ACLOCAL_AMFLAGS = -I build-aux/m4 ${ACLOCAL_FLAGS}'), (11, 'AM_CPPFLAGS = $(DEPS_CFLAGS)'), (12, 'EXAMPLE_LIBS = -lboost_system -lboost_thread -lkafkaconnect'), (13, ''), (14, '#'), (15, '# Shared Library'), (16, '#'), (17, ''), (18, 'lib_LTLIBRARIES = libkafkaconnect.la'), (19, ''), (20, 'libkafkaconnect_la_SOURCES = src/producer.cpp'), (21, 'libkafkaconnect_la_LDFLAGS = -version-info $(KAFKACONNECT_VERSION)'), (22, ''), (23, 'kafkaconnect_includedir = $(includedir)/kafkaconnect'), (24, 'kafkaconnect_include_HEADERS = src/producer.hpp \\'), (25, '\t\t\t\t\t\t\t\tsrc/encoder.hpp \\'), (26, '\t\t\t\t\t\t\t\tsrc/encoder_helper.hpp'), (27, ''), (28, '#'), (29, '# Examples'), (30, '#'), (31, ''), (32, 'noinst_PROGRAMS = producer'), (33, ''), (34, 'producer_SOURCES = src/example.cpp'), (35, 'producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS)'), (36, ''), (37, '#'), (38, '# Tests'), (39, '#'), (40, ''), (41, 'check_PROGRAMS = tests/encoder_helper tests/encoder tests/producer'), (42, 'TESTS = tests/encoder_helper tests/encoder tests/producer'), (43, ''), (44, 'tests_encoder_helper_SOURCES = src/tests/encoder_helper_tests.cpp'), (45, 'tests_encoder_helper_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework'), (46, ''), (47, 'tests_encoder_SOURCES = src/tests/encoder_tests.cpp'), (48, 'tests_encoder_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework'), (49, ''), (50, 'tests_producer_SOURCES = src/tests/producer_tests.cpp'), (51, 'tests_producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework')], 'deleted': []}",51,0,"## LibKafkaConect
## A C++ shared libray for connecting to Kafka

#
# Warning this is the first time I've made a configure.ac/Makefile.am thing
# Please improve it as I have no idea what I am doing
# @benjamg
#

ACLOCAL_AMFLAGS = -I build-aux/m4 ${ACLOCAL_FLAGS}
AM_CPPFLAGS = $(DEPS_CFLAGS)
EXAMPLE_LIBS = -lboost_system -lboost_thread -lkafkaconnect

#
# Shared Library
#

lib_LTLIBRARIES = libkafkaconnect.la

libkafkaconnect_la_SOURCES = src/producer.cpp
libkafkaconnect_la_LDFLAGS = -version-info $(KAFKACONNECT_VERSION)

kafkaconnect_includedir = $(includedir)/kafkaconnect
kafkaconnect_include_HEADERS = src/producer.hpp \
								src/encoder.hpp \
								src/encoder_helper.hpp

#
# Examples
#                                 

noinst_PROGRAMS = producer

producer_SOURCES = src/example.cpp
producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS)

#
# Tests
#

check_PROGRAMS = tests/encoder_helper tests/encoder tests/producer
TESTS = tests/encoder_helper tests/encoder tests/producer

tests_encoder_helper_SOURCES = src/tests/encoder_helper_tests.cpp
tests_encoder_helper_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework

tests_encoder_SOURCES = src/tests/encoder_tests.cpp
tests_encoder_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework

tests_producer_SOURCES = src/tests/producer_tests.cpp
tests_producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework
",,[],[],[],,,
35,642da2f28c9bc6e373603d6d9119ce33684090f5,Makefile.in,,clients/cpp/Makefile.in,ModificationType.ADD,"@@ -0,0 +1,946 @@
+# Makefile.in generated by automake 1.11.1 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
+# Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+#
+# Warning this is the first time I've made a configure.ac/Makefile.am thing
+# Please improve it as I have no idea what I am doing
+# @benjamg
+#
+
+
+
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH=""$${ZSH_VERSION+.}$(PATH_SEPARATOR)"" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+noinst_PROGRAMS = producer$(EXEEXT)
+check_PROGRAMS = tests/encoder_helper$(EXEEXT) tests/encoder$(EXEEXT) \
+	tests/producer$(EXEEXT)
+TESTS = tests/encoder_helper$(EXEEXT) tests/encoder$(EXEEXT) \
+	tests/producer$(EXEEXT)
+subdir = .
+DIST_COMMON = $(am__configure_deps) $(kafkaconnect_include_HEADERS) \
+	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
+	$(top_srcdir)/configure build-aux/config.guess \
+	build-aux/config.sub build-aux/depcomp build-aux/install-sh \
+	build-aux/ltmain.sh build-aux/missing
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/libtool.m4 \
+	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
+	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
+	$(top_srcdir)/build-aux/m4/ltversion.m4 \
+	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
+ configure.lineno config.status.lineno
+mkinstalldirs = $(install_sh) -d
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+am__vpath_adj_setup = srcdirstrip=`echo ""$(srcdir)"" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo ""$$p"" | sed ""s|^$$srcdirstrip/||""`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo ""$(srcdir)"" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo ""$$p""; done | sed -e ""s|$$srcdirstrip/||""
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo ""$$p $$p""; done | \
+  sed ""s| $$srcdirstrip/| |;""' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["".""] = """" } { files[$$2] = files[$$2] "" "" $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = """" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+am__installdirs = ""$(DESTDIR)$(libdir)"" \
+	""$(DESTDIR)$(kafkaconnect_includedir)""
+LTLIBRARIES = $(lib_LTLIBRARIES)
+libkafkaconnect_la_LIBADD =
+am_libkafkaconnect_la_OBJECTS = producer.lo
+libkafkaconnect_la_OBJECTS = $(am_libkafkaconnect_la_OBJECTS)
+libkafkaconnect_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
+	$(CXXFLAGS) $(libkafkaconnect_la_LDFLAGS) $(LDFLAGS) -o $@
+PROGRAMS = $(noinst_PROGRAMS)
+am_producer_OBJECTS = example.$(OBJEXT)
+producer_OBJECTS = $(am_producer_OBJECTS)
+am__DEPENDENCIES_1 =
+producer_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am_tests_encoder_OBJECTS = encoder_tests.$(OBJEXT)
+tests_encoder_OBJECTS = $(am_tests_encoder_OBJECTS)
+tests_encoder_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am__dirstamp = $(am__leading_dot)dirstamp
+am_tests_encoder_helper_OBJECTS = encoder_helper_tests.$(OBJEXT)
+tests_encoder_helper_OBJECTS = $(am_tests_encoder_helper_OBJECTS)
+tests_encoder_helper_DEPENDENCIES = $(am__DEPENDENCIES_1)
+am_tests_producer_OBJECTS = producer_tests.$(OBJEXT)
+tests_producer_OBJECTS = $(am_tests_producer_OBJECTS)
+tests_producer_DEPENDENCIES = $(am__DEPENDENCIES_1)
+DEFAULT_INCLUDES = -I.@am__isrc@
+depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
+am__depfiles_maybe = depfiles
+am__mv = mv -f
+CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
+CXXLD = $(CXX)
+CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
+	$(LDFLAGS) -o $@
+SOURCES = $(libkafkaconnect_la_SOURCES) $(producer_SOURCES) \
+	$(tests_encoder_SOURCES) $(tests_encoder_helper_SOURCES) \
+	$(tests_producer_SOURCES)
+DIST_SOURCES = $(libkafkaconnect_la_SOURCES) $(producer_SOURCES) \
+	$(tests_encoder_SOURCES) $(tests_encoder_helper_SOURCES) \
+	$(tests_producer_SOURCES)
+HEADERS = $(kafkaconnect_include_HEADERS)
+ETAGS = etags
+CTAGS = ctags
+am__tty_colors = \
+red=; grn=; lgn=; blu=; std=
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+distdir = $(PACKAGE)-$(VERSION)
+top_distdir = $(distdir)
+am__remove_distdir = \
+  { test ! -d ""$(distdir)"" \
+    || { find ""$(distdir)"" -type d ! -perm -200 -exec chmod u+w {} ';' \
+         && rm -fr ""$(distdir)""; }; }
+DIST_ARCHIVES = $(distdir).tar.gz
+GZIP_ENV = --best
+distuninstallcheck_listfiles = find . -type f -print
+distcleancheck_listfiles = find . -type f -print
+ACLOCAL = @ACLOCAL@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CXX = @CXX@
+CXXCPP = @CXXCPP@
+CXXDEPMODE = @CXXDEPMODE@
+CXXFLAGS = @CXXFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DSYMUTIL = @DSYMUTIL@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+FGREP = @FGREP@
+GREP = @GREP@
+INSTALL = @INSTALL@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+KAFKACONNECT_VERSION = @KAFKACONNECT_VERSION@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAKEINFO = @MAKEINFO@
+MKDIR_P = @MKDIR_P@
+NM = @NM@
+NMEDIT = @NMEDIT@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_CXX = @ac_ct_CXX@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+lt_ECHO = @lt_ECHO@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+ACLOCAL_AMFLAGS = -I build-aux/m4 ${ACLOCAL_FLAGS}
+AM_CPPFLAGS = $(DEPS_CFLAGS)
+EXAMPLE_LIBS = -lboost_system -lboost_thread -lkafkaconnect
+
+#
+# Shared Library
+#
+lib_LTLIBRARIES = libkafkaconnect.la
+libkafkaconnect_la_SOURCES = src/producer.cpp
+libkafkaconnect_la_LDFLAGS = -version-info $(KAFKACONNECT_VERSION)
+kafkaconnect_includedir = $(includedir)/kafkaconnect
+kafkaconnect_include_HEADERS = src/producer.hpp \
+								src/encoder.hpp \
+								src/encoder_helper.hpp
+
+producer_SOURCES = src/example.cpp
+producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS)
+tests_encoder_helper_SOURCES = src/tests/encoder_helper_tests.cpp
+tests_encoder_helper_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework
+tests_encoder_SOURCES = src/tests/encoder_tests.cpp
+tests_encoder_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework
+tests_producer_SOURCES = src/tests/producer_tests.cpp
+tests_producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .cpp .lo .o .obj
+am--refresh:
+	@:
+$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
+	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --foreign Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    echo ' $(SHELL) ./config.status'; \
+	    $(SHELL) ./config.status;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	$(SHELL) ./config.status --recheck
+
+$(top_srcdir)/configure:  $(am__configure_deps)
+	$(am__cd) $(srcdir) && $(AUTOCONF)
+$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
+	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
+$(am__aclocal_m4_deps):
+install-libLTLIBRARIES: $(lib_LTLIBRARIES)
+	@$(NORMAL_INSTALL)
+	test -z ""$(libdir)"" || $(MKDIR_P) ""$(DESTDIR)$(libdir)""
+	@list='$(lib_LTLIBRARIES)'; test -n ""$(libdir)"" || list=; \
+	list2=; for p in $$list; do \
+	  if test -f $$p; then \
+	    list2=""$$list2 $$p""; \
+	  else :; fi; \
+	done; \
+	test -z ""$$list2"" || { \
+	  echo "" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'""; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 ""$(DESTDIR)$(libdir)""; \
+	}
+
+uninstall-libLTLIBRARIES:
+	@$(NORMAL_UNINSTALL)
+	@list='$(lib_LTLIBRARIES)'; test -n ""$(libdir)"" || list=; \
+	for p in $$list; do \
+	  $(am__strip_dir) \
+	  echo "" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'""; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f ""$(DESTDIR)$(libdir)/$$f""; \
+	done
+
+clean-libLTLIBRARIES:
+	-test -z ""$(lib_LTLIBRARIES)"" || rm -f $(lib_LTLIBRARIES)
+	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
+	  dir=""`echo $$p | sed -e 's|/[^/]*$$||'`""; \
+	  test ""$$dir"" != ""$$p"" || dir=.; \
+	  echo ""rm -f \""$${dir}/so_locations\""""; \
+	  rm -f ""$${dir}/so_locations""; \
+	done
+libkafkaconnect.la: $(libkafkaconnect_la_OBJECTS) $(libkafkaconnect_la_DEPENDENCIES) 
+	$(libkafkaconnect_la_LINK) -rpath $(libdir) $(libkafkaconnect_la_OBJECTS) $(libkafkaconnect_la_LIBADD) $(LIBS)
+
+clean-checkPROGRAMS:
+	@list='$(check_PROGRAMS)'; test -n ""$$list"" || exit 0; \
+	echo "" rm -f"" $$list; \
+	rm -f $$list || exit $$?; \
+	test -n ""$(EXEEXT)"" || exit 0; \
+	list=`for p in $$list; do echo ""$$p""; done | sed 's/$(EXEEXT)$$//'`; \
+	echo "" rm -f"" $$list; \
+	rm -f $$list
+
+clean-noinstPROGRAMS:
+	@list='$(noinst_PROGRAMS)'; test -n ""$$list"" || exit 0; \
+	echo "" rm -f"" $$list; \
+	rm -f $$list || exit $$?; \
+	test -n ""$(EXEEXT)"" || exit 0; \
+	list=`for p in $$list; do echo ""$$p""; done | sed 's/$(EXEEXT)$$//'`; \
+	echo "" rm -f"" $$list; \
+	rm -f $$list
+producer$(EXEEXT): $(producer_OBJECTS) $(producer_DEPENDENCIES) 
+	@rm -f producer$(EXEEXT)
+	$(CXXLINK) $(producer_OBJECTS) $(producer_LDADD) $(LIBS)
+tests/$(am__dirstamp):
+	@$(MKDIR_P) tests
+	@: > tests/$(am__dirstamp)
+tests/encoder$(EXEEXT): $(tests_encoder_OBJECTS) $(tests_encoder_DEPENDENCIES) tests/$(am__dirstamp)
+	@rm -f tests/encoder$(EXEEXT)
+	$(CXXLINK) $(tests_encoder_OBJECTS) $(tests_encoder_LDADD) $(LIBS)
+tests/encoder_helper$(EXEEXT): $(tests_encoder_helper_OBJECTS) $(tests_encoder_helper_DEPENDENCIES) tests/$(am__dirstamp)
+	@rm -f tests/encoder_helper$(EXEEXT)
+	$(CXXLINK) $(tests_encoder_helper_OBJECTS) $(tests_encoder_helper_LDADD) $(LIBS)
+tests/producer$(EXEEXT): $(tests_producer_OBJECTS) $(tests_producer_DEPENDENCIES) tests/$(am__dirstamp)
+	@rm -f tests/producer$(EXEEXT)
+	$(CXXLINK) $(tests_producer_OBJECTS) $(tests_producer_LDADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_helper_tests.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_tests.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/example.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/producer.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/producer_tests.Po@am__quote@
+
+.cpp.o:
+@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<
+
+.cpp.obj:
+@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+
+.cpp.lo:
+@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<
+
+producer.lo: src/producer.cpp
+@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT producer.lo -MD -MP -MF $(DEPDIR)/producer.Tpo -c -o producer.lo `test -f 'src/producer.cpp' || echo '$(srcdir)/'`src/producer.cpp
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/producer.Tpo $(DEPDIR)/producer.Plo
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/producer.cpp' object='producer.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o producer.lo `test -f 'src/producer.cpp' || echo '$(srcdir)/'`src/producer.cpp
+
+example.o: src/example.cpp
+@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT example.o -MD -MP -MF $(DEPDIR)/example.Tpo -c -o example.o `test -f 'src/example.cpp' || echo '$(srcdir)/'`src/example.cpp
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/example.Tpo $(DEPDIR)/example.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/example.cpp' object='example.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o example.o `test -f 'src/example.cpp' || echo '$(srcdir)/'`src/example.cpp
+
+example.obj: src/example.cpp
+@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT example.obj -MD -MP -MF $(DEPDIR)/example.Tpo -c -o example.obj `if test -f 'src/example.cpp'; then $(CYGPATH_W) 'src/example.cpp'; else $(CYGPATH_W) '$(srcdir)/src/example.cpp'; fi`
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/example.Tpo $(DEPDIR)/example.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/example.cpp' object='example.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o example.obj `if test -f 'src/example.cpp'; then $(CYGPATH_W) 'src/example.cpp'; else $(CYGPATH_W) '$(srcdir)/src/example.cpp'; fi`
+
+encoder_tests.o: src/tests/encoder_tests.cpp
+@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_tests.o -MD -MP -MF $(DEPDIR)/encoder_tests.Tpo -c -o encoder_tests.o `test -f 'src/tests/encoder_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_tests.cpp
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/encoder_tests.Tpo $(DEPDIR)/encoder_tests.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/encoder_tests.cpp' object='encoder_tests.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_tests.o `test -f 'src/tests/encoder_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_tests.cpp
+
+encoder_tests.obj: src/tests/encoder_tests.cpp
+@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_tests.obj -MD -MP -MF $(DEPDIR)/encoder_tests.Tpo -c -o encoder_tests.obj `if test -f 'src/tests/encoder_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_tests.cpp'; fi`
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/encoder_tests.Tpo $(DEPDIR)/encoder_tests.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/encoder_tests.cpp' object='encoder_tests.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_tests.obj `if test -f 'src/tests/encoder_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_tests.cpp'; fi`
+
+encoder_helper_tests.o: src/tests/encoder_helper_tests.cpp
+@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_helper_tests.o -MD -MP -MF $(DEPDIR)/encoder_helper_tests.Tpo -c -o encoder_helper_tests.o `test -f 'src/tests/encoder_helper_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_helper_tests.cpp
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/encoder_helper_tests.Tpo $(DEPDIR)/encoder_helper_tests.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/encoder_helper_tests.cpp' object='encoder_helper_tests.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_helper_tests.o `test -f 'src/tests/encoder_helper_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_helper_tests.cpp
+
+encoder_helper_tests.obj: src/tests/encoder_helper_tests.cpp
+@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_helper_tests.obj -MD -MP -MF $(DEPDIR)/encoder_helper_tests.Tpo -c -o encoder_helper_tests.obj `if test -f 'src/tests/encoder_helper_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_helper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_helper_tests.cpp'; fi`
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/encoder_helper_tests.Tpo $(DEPDIR)/encoder_helper_tests.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/encoder_helper_tests.cpp' object='encoder_helper_tests.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_helper_tests.obj `if test -f 'src/tests/encoder_helper_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_helper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_helper_tests.cpp'; fi`
+
+producer_tests.o: src/tests/producer_tests.cpp
+@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT producer_tests.o -MD -MP -MF $(DEPDIR)/producer_tests.Tpo -c -o producer_tests.o `test -f 'src/tests/producer_tests.cpp' || echo '$(srcdir)/'`src/tests/producer_tests.cpp
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/producer_tests.Tpo $(DEPDIR)/producer_tests.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/producer_tests.cpp' object='producer_tests.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o producer_tests.o `test -f 'src/tests/producer_tests.cpp' || echo '$(srcdir)/'`src/tests/producer_tests.cpp
+
+producer_tests.obj: src/tests/producer_tests.cpp
+@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT producer_tests.obj -MD -MP -MF $(DEPDIR)/producer_tests.Tpo -c -o producer_tests.obj `if test -f 'src/tests/producer_tests.cpp'; then $(CYGPATH_W) 'src/tests/producer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/producer_tests.cpp'; fi`
+@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/producer_tests.Tpo $(DEPDIR)/producer_tests.Po
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/producer_tests.cpp' object='producer_tests.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o producer_tests.obj `if test -f 'src/tests/producer_tests.cpp'; then $(CYGPATH_W) 'src/tests/producer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/producer_tests.cpp'; fi`
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+	-rm -rf tests/.libs tests/_libs
+
+distclean-libtool:
+	-rm -f libtool config.lt
+install-kafkaconnect_includeHEADERS: $(kafkaconnect_include_HEADERS)
+	@$(NORMAL_INSTALL)
+	test -z ""$(kafkaconnect_includedir)"" || $(MKDIR_P) ""$(DESTDIR)$(kafkaconnect_includedir)""
+	@list='$(kafkaconnect_include_HEADERS)'; test -n ""$(kafkaconnect_includedir)"" || list=; \
+	for p in $$list; do \
+	  if test -f ""$$p""; then d=; else d=""$(srcdir)/""; fi; \
+	  echo ""$$d$$p""; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo "" $(INSTALL_HEADER) $$files '$(DESTDIR)$(kafkaconnect_includedir)'""; \
+	  $(INSTALL_HEADER) $$files ""$(DESTDIR)$(kafkaconnect_includedir)"" || exit $$?; \
+	done
+
+uninstall-kafkaconnect_includeHEADERS:
+	@$(NORMAL_UNINSTALL)
+	@list='$(kafkaconnect_include_HEADERS)'; test -n ""$(kafkaconnect_includedir)"" || list=; \
+	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
+	test -n ""$$files"" || exit 0; \
+	echo "" ( cd '$(DESTDIR)$(kafkaconnect_includedir)' && rm -f"" $$files "")""; \
+	cd ""$(DESTDIR)$(kafkaconnect_includedir)"" && rm -f $$files
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f ""$$i""; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	set x; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f ""$$i""; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	shift; \
+	if test -z ""$(ETAGS_ARGS)$$*$$unique""; then :; else \
+	  test -n ""$$unique"" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      ""$$@"" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f ""$$i""; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	test -z ""$(CTAGS_ARGS)$$unique"" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) ""$$here""
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+check-TESTS: $(TESTS)
+	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
+	srcdir=$(srcdir); export srcdir; \
+	list=' $(TESTS) '; \
+	$(am__tty_colors); \
+	if test -n ""$$list""; then \
+	  for tst in $$list; do \
+	    if test -f ./$$tst; then dir=./; \
+	    elif test -f $$tst; then dir=; \
+	    else dir=""$(srcdir)/""; fi; \
+	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
+	      all=`expr $$all + 1`; \
+	      case "" $(XFAIL_TESTS) "" in \
+	      *[\ \	]$$tst[\ \	]*) \
+		xpass=`expr $$xpass + 1`; \
+		failed=`expr $$failed + 1`; \
+		col=$$red; res=XPASS; \
+	      ;; \
+	      *) \
+		col=$$grn; res=PASS; \
+	      ;; \
+	      esac; \
+	    elif test $$? -ne 77; then \
+	      all=`expr $$all + 1`; \
+	      case "" $(XFAIL_TESTS) "" in \
+	      *[\ \	]$$tst[\ \	]*) \
+		xfail=`expr $$xfail + 1`; \
+		col=$$lgn; res=XFAIL; \
+	      ;; \
+	      *) \
+		failed=`expr $$failed + 1`; \
+		col=$$red; res=FAIL; \
+	      ;; \
+	      esac; \
+	    else \
+	      skip=`expr $$skip + 1`; \
+	      col=$$blu; res=SKIP; \
+	    fi; \
+	    echo ""$${col}$$res$${std}: $$tst""; \
+	  done; \
+	  if test ""$$all"" -eq 1; then \
+	    tests=""test""; \
+	    All=""""; \
+	  else \
+	    tests=""tests""; \
+	    All=""All ""; \
+	  fi; \
+	  if test ""$$failed"" -eq 0; then \
+	    if test ""$$xfail"" -eq 0; then \
+	      banner=""$$All$$all $$tests passed""; \
+	    else \
+	      if test ""$$xfail"" -eq 1; then failures=failure; else failures=failures; fi; \
+	      banner=""$$All$$all $$tests behaved as expected ($$xfail expected $$failures)""; \
+	    fi; \
+	  else \
+	    if test ""$$xpass"" -eq 0; then \
+	      banner=""$$failed of $$all $$tests failed""; \
+	    else \
+	      if test ""$$xpass"" -eq 1; then passes=pass; else passes=passes; fi; \
+	      banner=""$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)""; \
+	    fi; \
+	  fi; \
+	  dashes=""$$banner""; \
+	  skipped=""""; \
+	  if test ""$$skip"" -ne 0; then \
+	    if test ""$$skip"" -eq 1; then \
+	      skipped=""($$skip test was not run)""; \
+	    else \
+	      skipped=""($$skip tests were not run)""; \
+	    fi; \
+	    test `echo ""$$skipped"" | wc -c` -le `echo ""$$banner"" | wc -c` || \
+	      dashes=""$$skipped""; \
+	  fi; \
+	  report=""""; \
+	  if test ""$$failed"" -ne 0 && test -n ""$(PACKAGE_BUGREPORT)""; then \
+	    report=""Please report to $(PACKAGE_BUGREPORT)""; \
+	    test `echo ""$$report"" | wc -c` -le `echo ""$$banner"" | wc -c` || \
+	      dashes=""$$report""; \
+	  fi; \
+	  dashes=`echo ""$$dashes"" | sed s/./=/g`; \
+	  if test ""$$failed"" -eq 0; then \
+	    echo ""$$grn$$dashes""; \
+	  else \
+	    echo ""$$red$$dashes""; \
+	  fi; \
+	  echo ""$$banner""; \
+	  test -z ""$$skipped"" || echo ""$$skipped""; \
+	  test -z ""$$report"" || echo ""$$report""; \
+	  echo ""$$dashes$$std""; \
+	  test ""$$failed"" -eq 0; \
+	else :; fi
+
+distdir: $(DISTFILES)
+	$(am__remove_distdir)
+	test -d ""$(distdir)"" || mkdir ""$(distdir)""
+	@srcdirstrip=`echo ""$(srcdir)"" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	topsrcdirstrip=`echo ""$(top_srcdir)"" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	list='$(DISTFILES)'; \
+	  dist_files=`for file in $$list; do echo $$file; done | \
+	  sed -e ""s|^$$srcdirstrip/||;t"" \
+	      -e ""s|^$$topsrcdirstrip/|$(top_builddir)/|;t""`; \
+	case $$dist_files in \
+	  */*) $(MKDIR_P) `echo ""$$dist_files"" | \
+			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
+			   sort -u` ;; \
+	esac; \
+	for file in $$dist_files; do \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  if test -d $$d/$$file; then \
+	    dir=`echo ""/$$file"" | sed -e 's,/[^/]*$$,,'`; \
+	    if test -d ""$(distdir)/$$file""; then \
+	      find ""$(distdir)/$$file"" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -fpR $(srcdir)/$$file ""$(distdir)$$dir"" || exit 1; \
+	      find ""$(distdir)/$$file"" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    cp -fpR $$d/$$file ""$(distdir)$$dir"" || exit 1; \
+	  else \
+	    test -f ""$(distdir)/$$file"" \
+	    || cp -p $$d/$$file ""$(distdir)/$$file"" \
+	    || exit 1; \
+	  fi; \
+	done
+	-test -n ""$(am__skip_mode_fix)"" \
+	|| find ""$(distdir)"" -type d ! -perm -755 \
+		-exec chmod u+rwx,go+rx {} \; -o \
+	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
+	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
+	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
+	|| chmod -R a+r ""$(distdir)""
+dist-gzip: distdir
+	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	$(am__remove_distdir)
+
+dist-bzip2: distdir
+	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
+	$(am__remove_distdir)
+
+dist-lzma: distdir
+	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
+	$(am__remove_distdir)
+
+dist-xz: distdir
+	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
+	$(am__remove_distdir)
+
+dist-tarZ: distdir
+	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
+	$(am__remove_distdir)
+
+dist-shar: distdir
+	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
+	$(am__remove_distdir)
+
+dist-zip: distdir
+	-rm -f $(distdir).zip
+	zip -rq $(distdir).zip $(distdir)
+	$(am__remove_distdir)
+
+dist dist-all: distdir
+	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	$(am__remove_distdir)
+
+# This target untars the dist file and tries a VPATH configuration.  Then
+# it guarantees that the distribution is self-contained by making another
+# tarfile.
+distcheck: dist
+	case '$(DIST_ARCHIVES)' in \
+	*.tar.gz*) \
+	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
+	*.tar.bz2*) \
+	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
+	*.tar.lzma*) \
+	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
+	*.tar.xz*) \
+	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
+	*.tar.Z*) \
+	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
+	*.shar.gz*) \
+	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
+	*.zip*) \
+	  unzip $(distdir).zip ;;\
+	esac
+	chmod -R a-w $(distdir); chmod a+w $(distdir)
+	mkdir $(distdir)/_build
+	mkdir $(distdir)/_inst
+	chmod a-w $(distdir)
+	test -d $(distdir)/_build || exit 0; \
+	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
+	  && dc_destdir=""$${TMPDIR-/tmp}/am-dc-$$$$/"" \
+	  && am__cwd=`pwd` \
+	  && $(am__cd) $(distdir)/_build \
+	  && ../configure --srcdir=.. --prefix=""$$dc_install_base"" \
+	    $(DISTCHECK_CONFIGURE_FLAGS) \
+	  && $(MAKE) $(AM_MAKEFLAGS) \
+	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
+	  && $(MAKE) $(AM_MAKEFLAGS) check \
+	  && $(MAKE) $(AM_MAKEFLAGS) install \
+	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
+	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
+	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir=""$$dc_install_base"" \
+	        distuninstallcheck \
+	  && chmod -R a-w ""$$dc_install_base"" \
+	  && ({ \
+	       (cd ../.. && umask 077 && mkdir ""$$dc_destdir"") \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=""$$dc_destdir"" install \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=""$$dc_destdir"" uninstall \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=""$$dc_destdir"" \
+	            distuninstallcheck_dir=""$$dc_destdir"" distuninstallcheck; \
+	      } || { rm -rf ""$$dc_destdir""; exit 1; }) \
+	  && rm -rf ""$$dc_destdir"" \
+	  && $(MAKE) $(AM_MAKEFLAGS) dist \
+	  && rm -rf $(DIST_ARCHIVES) \
+	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
+	  && cd ""$$am__cwd"" \
+	  || exit 1
+	$(am__remove_distdir)
+	@(echo ""$(distdir) archives ready for distribution: ""; \
+	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
+	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
+distuninstallcheck:
+	@$(am__cd) '$(distuninstallcheck_dir)' \
+	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
+	   || { echo ""ERROR: files left after uninstall:"" ; \
+	        if test -n ""$(DESTDIR)""; then \
+	          echo ""  (check DESTDIR support)""; \
+	        fi ; \
+	        $(distuninstallcheck_listfiles) ; \
+	        exit 1; } >&2
+distcleancheck: distclean
+	@if test '$(srcdir)' = . ; then \
+	  echo ""ERROR: distcleancheck can only run from a VPATH build"" ; \
+	  exit 1 ; \
+	fi
+	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
+	  || { echo ""ERROR: files left in build directory after distclean:"" ; \
+	       $(distcleancheck_listfiles) ; \
+	       exit 1; } >&2
+check-am: all-am
+	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
+	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
+check: check-am
+all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
+installdirs:
+	for dir in ""$(DESTDIR)$(libdir)"" ""$(DESTDIR)$(kafkaconnect_includedir)""; do \
+	  test -z ""$$dir"" || $(MKDIR_P) ""$$dir""; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=""$(INSTALL_STRIP_PROGRAM)"" \
+	  install_sh_PROGRAM=""$(INSTALL_STRIP_PROGRAM)"" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo ""INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'""` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z ""$(CONFIG_CLEAN_FILES)"" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = ""$(srcdir)"" || test -z ""$(CONFIG_CLEAN_VPATH_FILES)"" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+	-rm -f tests/$(am__dirstamp)
+
+maintainer-clean-generic:
+	@echo ""This command is intended for maintainers to use""
+	@echo ""it deletes files that may require special tools to rebuild.""
+clean: clean-am
+
+clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
+	clean-libtool clean-noinstPROGRAMS mostlyclean-am
+
+distclean: distclean-am
+	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-libtool distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+html-am:
+
+info: info-am
+
+info-am:
+
+install-data-am: install-kafkaconnect_includeHEADERS
+
+install-dvi: install-dvi-am
+
+install-dvi-am:
+
+install-exec-am: install-libLTLIBRARIES
+
+install-html: install-html-am
+
+install-html-am:
+
+install-info: install-info-am
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am:
+
+install-ps: install-ps-am
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
+	-rm -rf $(top_srcdir)/autom4te.cache
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-kafkaconnect_includeHEADERS \
+	uninstall-libLTLIBRARIES
+
+.MAKE: check-am install-am install-strip
+
+.PHONY: CTAGS GTAGS all all-am am--refresh check check-TESTS check-am \
+	clean clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
+	clean-libtool clean-noinstPROGRAMS ctags dist dist-all \
+	dist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ dist-xz \
+	dist-zip distcheck distclean distclean-compile \
+	distclean-generic distclean-libtool distclean-tags \
+	distcleancheck distdir distuninstallcheck dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-dvi install-dvi-am install-exec \
+	install-exec-am install-html install-html-am install-info \
+	install-info-am install-kafkaconnect_includeHEADERS \
+	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
+	install-ps install-ps-am install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	tags uninstall uninstall-am \
+	uninstall-kafkaconnect_includeHEADERS uninstall-libLTLIBRARIES
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
","{'added': [(1, '# Makefile.in generated by automake 1.11.1 from Makefile.am.'), (2, '# @configure_input@'), (3, ''), (4, '# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,'), (5, '# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,'), (6, '# Inc.'), (7, '# This Makefile.in is free software; the Free Software Foundation'), (8, '# gives unlimited permission to copy and/or distribute it,'), (9, '# with or without modifications, as long as this notice is preserved.'), (10, ''), (11, '# This program is distributed in the hope that it will be useful,'), (12, '# but WITHOUT ANY WARRANTY, to the extent permitted by law; without'), (13, '# even the implied warranty of MERCHANTABILITY or FITNESS FOR A'), (14, '# PARTICULAR PURPOSE.'), (15, ''), (16, '@SET_MAKE@'), (17, ''), (18, '#'), (19, ""# Warning this is the first time I've made a configure.ac/Makefile.am thing""), (20, '# Please improve it as I have no idea what I am doing'), (21, '# @benjamg'), (22, '#'), (23, ''), (24, ''), (25, ''), (26, 'VPATH = @srcdir@'), (27, 'pkgdatadir = $(datadir)/@PACKAGE@'), (28, 'pkgincludedir = $(includedir)/@PACKAGE@'), (29, 'pkglibdir = $(libdir)/@PACKAGE@'), (30, 'pkglibexecdir = $(libexecdir)/@PACKAGE@'), (31, 'am__cd = CDPATH=""$${ZSH_VERSION+.}$(PATH_SEPARATOR)"" && cd'), (32, 'install_sh_DATA = $(install_sh) -c -m 644'), (33, 'install_sh_PROGRAM = $(install_sh) -c'), (34, 'install_sh_SCRIPT = $(install_sh) -c'), (35, 'INSTALL_HEADER = $(INSTALL_DATA)'), (36, 'transform = $(program_transform_name)'), (37, 'NORMAL_INSTALL = :'), (38, 'PRE_INSTALL = :'), (39, 'POST_INSTALL = :'), (40, 'NORMAL_UNINSTALL = :'), (41, 'PRE_UNINSTALL = :'), (42, 'POST_UNINSTALL = :'), (43, 'build_triplet = @build@'), (44, 'host_triplet = @host@'), (45, 'noinst_PROGRAMS = producer$(EXEEXT)'), (46, 'check_PROGRAMS = tests/encoder_helper$(EXEEXT) tests/encoder$(EXEEXT) \\'), (47, '\ttests/producer$(EXEEXT)'), (48, 'TESTS = tests/encoder_helper$(EXEEXT) tests/encoder$(EXEEXT) \\'), (49, '\ttests/producer$(EXEEXT)'), (50, 'subdir = .'), (51, 'DIST_COMMON = $(am__configure_deps) $(kafkaconnect_include_HEADERS) \\'), (52, '\t$(srcdir)/Makefile.am $(srcdir)/Makefile.in \\'), (53, '\t$(top_srcdir)/configure build-aux/config.guess \\'), (54, '\tbuild-aux/config.sub build-aux/depcomp build-aux/install-sh \\'), (55, '\tbuild-aux/ltmain.sh build-aux/missing'), (56, 'ACLOCAL_M4 = $(top_srcdir)/aclocal.m4'), (57, 'am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/libtool.m4 \\'), (58, '\t$(top_srcdir)/build-aux/m4/ltoptions.m4 \\'), (59, '\t$(top_srcdir)/build-aux/m4/ltsugar.m4 \\'), (60, '\t$(top_srcdir)/build-aux/m4/ltversion.m4 \\'), (61, '\t$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \\'), (62, '\t$(top_srcdir)/configure.ac'), (63, 'am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\'), (64, '\t$(ACLOCAL_M4)'), (65, 'am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\'), (66, ' configure.lineno config.status.lineno'), (67, 'mkinstalldirs = $(install_sh) -d'), (68, 'CONFIG_CLEAN_FILES ='), (69, 'CONFIG_CLEAN_VPATH_FILES ='), (70, 'am__vpath_adj_setup = srcdirstrip=`echo ""$(srcdir)"" | sed \'s|.|.|g\'`;'), (71, 'am__vpath_adj = case $$p in \\'), (72, '    $(srcdir)/*) f=`echo ""$$p"" | sed ""s|^$$srcdirstrip/||""`;; \\'), (73, '    *) f=$$p;; \\'), (74, '  esac;'), (75, ""am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;""), (76, 'am__install_max = 40'), (77, 'am__nobase_strip_setup = \\'), (78, '  srcdirstrip=`echo ""$(srcdir)"" | sed \'s/[].[^$$\\\\*|]/\\\\\\\\&/g\'`'), (79, 'am__nobase_strip = \\'), (80, '  for p in $$list; do echo ""$$p""; done | sed -e ""s|$$srcdirstrip/||""'), (81, 'am__nobase_list = $(am__nobase_strip_setup); \\'), (82, '  for p in $$list; do echo ""$$p $$p""; done | \\'), (83, '  sed ""s| $$srcdirstrip/| |;""\' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,\' | \\'), (84, '  $(AWK) \'BEGIN { files["".""] = """" } { files[$$2] = files[$$2] "" "" $$1; \\'), (85, '    if (++n[$$2] == $(am__install_max)) \\'), (86, '      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = """" } } \\'), (87, ""    END { for (dir in files) print dir, files[dir] }'""), (88, 'am__base_list = \\'), (89, ""  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\""), (90, ""  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'""), (91, 'am__installdirs = ""$(DESTDIR)$(libdir)"" \\'), (92, '\t""$(DESTDIR)$(kafkaconnect_includedir)""'), (93, 'LTLIBRARIES = $(lib_LTLIBRARIES)'), (94, 'libkafkaconnect_la_LIBADD ='), (95, 'am_libkafkaconnect_la_OBJECTS = producer.lo'), (96, 'libkafkaconnect_la_OBJECTS = $(am_libkafkaconnect_la_OBJECTS)'), (97, 'libkafkaconnect_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \\'), (98, '\t$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \\'), (99, '\t$(CXXFLAGS) $(libkafkaconnect_la_LDFLAGS) $(LDFLAGS) -o $@'), (100, 'PROGRAMS = $(noinst_PROGRAMS)'), (101, 'am_producer_OBJECTS = example.$(OBJEXT)'), (102, 'producer_OBJECTS = $(am_producer_OBJECTS)'), (103, 'am__DEPENDENCIES_1 ='), (104, 'producer_DEPENDENCIES = $(am__DEPENDENCIES_1)'), (105, 'am_tests_encoder_OBJECTS = encoder_tests.$(OBJEXT)'), (106, 'tests_encoder_OBJECTS = $(am_tests_encoder_OBJECTS)'), (107, 'tests_encoder_DEPENDENCIES = $(am__DEPENDENCIES_1)'), (108, 'am__dirstamp = $(am__leading_dot)dirstamp'), (109, 'am_tests_encoder_helper_OBJECTS = encoder_helper_tests.$(OBJEXT)'), (110, 'tests_encoder_helper_OBJECTS = $(am_tests_encoder_helper_OBJECTS)'), (111, 'tests_encoder_helper_DEPENDENCIES = $(am__DEPENDENCIES_1)'), (112, 'am_tests_producer_OBJECTS = producer_tests.$(OBJEXT)'), (113, 'tests_producer_OBJECTS = $(am_tests_producer_OBJECTS)'), (114, 'tests_producer_DEPENDENCIES = $(am__DEPENDENCIES_1)'), (115, 'DEFAULT_INCLUDES = -I.@am__isrc@'), (116, 'depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp'), (117, 'am__depfiles_maybe = depfiles'), (118, 'am__mv = mv -f'), (119, 'CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\'), (120, '\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)'), (121, 'LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\'), (122, '\t--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\'), (123, '\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)'), (124, 'CXXLD = $(CXX)'), (125, 'CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\'), (126, '\t--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \\'), (127, '\t$(LDFLAGS) -o $@'), (128, 'SOURCES = $(libkafkaconnect_la_SOURCES) $(producer_SOURCES) \\'), (129, '\t$(tests_encoder_SOURCES) $(tests_encoder_helper_SOURCES) \\'), (130, '\t$(tests_producer_SOURCES)'), (131, 'DIST_SOURCES = $(libkafkaconnect_la_SOURCES) $(producer_SOURCES) \\'), (132, '\t$(tests_encoder_SOURCES) $(tests_encoder_helper_SOURCES) \\'), (133, '\t$(tests_producer_SOURCES)'), (134, 'HEADERS = $(kafkaconnect_include_HEADERS)'), (135, 'ETAGS = etags'), (136, 'CTAGS = ctags'), (137, 'am__tty_colors = \\'), (138, 'red=; grn=; lgn=; blu=; std='), (139, 'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)'), (140, 'distdir = $(PACKAGE)-$(VERSION)'), (141, 'top_distdir = $(distdir)'), (142, 'am__remove_distdir = \\'), (143, '  { test ! -d ""$(distdir)"" \\'), (144, '    || { find ""$(distdir)"" -type d ! -perm -200 -exec chmod u+w {} \';\' \\'), (145, '         && rm -fr ""$(distdir)""; }; }'), (146, 'DIST_ARCHIVES = $(distdir).tar.gz'), (147, 'GZIP_ENV = --best'), (148, 'distuninstallcheck_listfiles = find . -type f -print'), (149, 'distcleancheck_listfiles = find . -type f -print'), (150, 'ACLOCAL = @ACLOCAL@'), (151, 'AMTAR = @AMTAR@'), (152, 'AR = @AR@'), (153, 'AUTOCONF = @AUTOCONF@'), (154, 'AUTOHEADER = @AUTOHEADER@'), (155, 'AUTOMAKE = @AUTOMAKE@'), (156, 'AWK = @AWK@'), (157, 'CC = @CC@'), (158, 'CCDEPMODE = @CCDEPMODE@'), (159, 'CFLAGS = @CFLAGS@'), (160, 'CPP = @CPP@'), (161, 'CPPFLAGS = @CPPFLAGS@'), (162, 'CXX = @CXX@'), (163, 'CXXCPP = @CXXCPP@'), (164, 'CXXDEPMODE = @CXXDEPMODE@'), (165, 'CXXFLAGS = @CXXFLAGS@'), (166, 'CYGPATH_W = @CYGPATH_W@'), (167, 'DEFS = @DEFS@'), (168, 'DEPDIR = @DEPDIR@'), (169, 'DSYMUTIL = @DSYMUTIL@'), (170, 'DUMPBIN = @DUMPBIN@'), (171, 'ECHO_C = @ECHO_C@'), (172, 'ECHO_N = @ECHO_N@'), (173, 'ECHO_T = @ECHO_T@'), (174, 'EGREP = @EGREP@'), (175, 'EXEEXT = @EXEEXT@'), (176, 'FGREP = @FGREP@'), (177, 'GREP = @GREP@'), (178, 'INSTALL = @INSTALL@'), (179, 'INSTALL_DATA = @INSTALL_DATA@'), (180, 'INSTALL_PROGRAM = @INSTALL_PROGRAM@'), (181, 'INSTALL_SCRIPT = @INSTALL_SCRIPT@'), (182, 'INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@'), (183, 'KAFKACONNECT_VERSION = @KAFKACONNECT_VERSION@'), (184, 'LD = @LD@'), (185, 'LDFLAGS = @LDFLAGS@'), (186, 'LIBOBJS = @LIBOBJS@'), (187, 'LIBS = @LIBS@'), (188, 'LIBTOOL = @LIBTOOL@'), (189, 'LIPO = @LIPO@'), (190, 'LN_S = @LN_S@'), (191, 'LTLIBOBJS = @LTLIBOBJS@'), (192, 'MAKEINFO = @MAKEINFO@'), (193, 'MKDIR_P = @MKDIR_P@'), (194, 'NM = @NM@'), (195, 'NMEDIT = @NMEDIT@'), (196, 'OBJDUMP = @OBJDUMP@'), (197, 'OBJEXT = @OBJEXT@'), (198, 'OTOOL = @OTOOL@'), (199, 'OTOOL64 = @OTOOL64@'), (200, 'PACKAGE = @PACKAGE@'), (201, 'PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@'), (202, 'PACKAGE_NAME = @PACKAGE_NAME@'), (203, 'PACKAGE_STRING = @PACKAGE_STRING@'), (204, 'PACKAGE_TARNAME = @PACKAGE_TARNAME@'), (205, 'PACKAGE_URL = @PACKAGE_URL@'), (206, 'PACKAGE_VERSION = @PACKAGE_VERSION@'), (207, 'PATH_SEPARATOR = @PATH_SEPARATOR@'), (208, 'RANLIB = @RANLIB@'), (209, 'SED = @SED@'), (210, 'SET_MAKE = @SET_MAKE@'), (211, 'SHELL = @SHELL@'), (212, 'STRIP = @STRIP@'), (213, 'VERSION = @VERSION@'), (214, 'abs_builddir = @abs_builddir@'), (215, 'abs_srcdir = @abs_srcdir@'), (216, 'abs_top_builddir = @abs_top_builddir@'), (217, 'abs_top_srcdir = @abs_top_srcdir@'), (218, 'ac_ct_CC = @ac_ct_CC@'), (219, 'ac_ct_CXX = @ac_ct_CXX@'), (220, 'ac_ct_DUMPBIN = @ac_ct_DUMPBIN@'), (221, 'am__include = @am__include@'), (222, 'am__leading_dot = @am__leading_dot@'), (223, 'am__quote = @am__quote@'), (224, 'am__tar = @am__tar@'), (225, 'am__untar = @am__untar@'), (226, 'bindir = @bindir@'), (227, 'build = @build@'), (228, 'build_alias = @build_alias@'), (229, 'build_cpu = @build_cpu@'), (230, 'build_os = @build_os@'), (231, 'build_vendor = @build_vendor@'), (232, 'builddir = @builddir@'), (233, 'datadir = @datadir@'), (234, 'datarootdir = @datarootdir@'), (235, 'docdir = @docdir@'), (236, 'dvidir = @dvidir@'), (237, 'exec_prefix = @exec_prefix@'), (238, 'host = @host@'), (239, 'host_alias = @host_alias@'), (240, 'host_cpu = @host_cpu@'), (241, 'host_os = @host_os@'), (242, 'host_vendor = @host_vendor@'), (243, 'htmldir = @htmldir@'), (244, 'includedir = @includedir@'), (245, 'infodir = @infodir@'), (246, 'install_sh = @install_sh@'), (247, 'libdir = @libdir@'), (248, 'libexecdir = @libexecdir@'), (249, 'localedir = @localedir@'), (250, 'localstatedir = @localstatedir@'), (251, 'lt_ECHO = @lt_ECHO@'), (252, 'mandir = @mandir@'), (253, 'mkdir_p = @mkdir_p@'), (254, 'oldincludedir = @oldincludedir@'), (255, 'pdfdir = @pdfdir@'), (256, 'prefix = @prefix@'), (257, 'program_transform_name = @program_transform_name@'), (258, 'psdir = @psdir@'), (259, 'sbindir = @sbindir@'), (260, 'sharedstatedir = @sharedstatedir@'), (261, 'srcdir = @srcdir@'), (262, 'sysconfdir = @sysconfdir@'), (263, 'target_alias = @target_alias@'), (264, 'top_build_prefix = @top_build_prefix@'), (265, 'top_builddir = @top_builddir@'), (266, 'top_srcdir = @top_srcdir@'), (267, 'ACLOCAL_AMFLAGS = -I build-aux/m4 ${ACLOCAL_FLAGS}'), (268, 'AM_CPPFLAGS = $(DEPS_CFLAGS)'), (269, 'EXAMPLE_LIBS = -lboost_system -lboost_thread -lkafkaconnect'), (270, ''), (271, '#'), (272, '# Shared Library'), (273, '#'), (274, 'lib_LTLIBRARIES = libkafkaconnect.la'), (275, 'libkafkaconnect_la_SOURCES = src/producer.cpp'), (276, 'libkafkaconnect_la_LDFLAGS = -version-info $(KAFKACONNECT_VERSION)'), (277, 'kafkaconnect_includedir = $(includedir)/kafkaconnect'), (278, 'kafkaconnect_include_HEADERS = src/producer.hpp \\'), (279, '\t\t\t\t\t\t\t\tsrc/encoder.hpp \\'), (280, '\t\t\t\t\t\t\t\tsrc/encoder_helper.hpp'), (281, ''), (282, 'producer_SOURCES = src/example.cpp'), (283, 'producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS)'), (284, 'tests_encoder_helper_SOURCES = src/tests/encoder_helper_tests.cpp'), (285, 'tests_encoder_helper_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework'), (286, 'tests_encoder_SOURCES = src/tests/encoder_tests.cpp'), (287, 'tests_encoder_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework'), (288, 'tests_producer_SOURCES = src/tests/producer_tests.cpp'), (289, 'tests_producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework'), (290, 'all: all-am'), (291, ''), (292, '.SUFFIXES:'), (293, '.SUFFIXES: .cpp .lo .o .obj'), (294, 'am--refresh:'), (295, '\t@:'), (296, '$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)'), (297, '\t@for dep in $?; do \\'), (298, ""\t  case '$(am__configure_deps)' in \\""), (299, '\t    *$$dep*) \\'), (300, ""\t      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \\""), (301, '\t      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \\'), (302, '\t\t&& exit 0; \\'), (303, '\t      exit 1;; \\'), (304, '\t  esac; \\'), (305, '\tdone; \\'), (306, ""\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \\""), (307, '\t$(am__cd) $(top_srcdir) && \\'), (308, '\t  $(AUTOMAKE) --foreign Makefile'), (309, '.PRECIOUS: Makefile'), (310, 'Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status'), (311, ""\t@case '$?' in \\""), (312, '\t  *config.status*) \\'), (313, ""\t    echo ' $(SHELL) ./config.status'; \\""), (314, '\t    $(SHELL) ./config.status;; \\'), (315, '\t  *) \\'), (316, ""\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\""), (317, '\t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\'), (318, '\tesac;'), (319, ''), (320, '$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)'), (321, '\t$(SHELL) ./config.status --recheck'), (322, ''), (323, '$(top_srcdir)/configure:  $(am__configure_deps)'), (324, '\t$(am__cd) $(srcdir) && $(AUTOCONF)'), (325, '$(ACLOCAL_M4):  $(am__aclocal_m4_deps)'), (326, '\t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)'), (327, '$(am__aclocal_m4_deps):'), (328, 'install-libLTLIBRARIES: $(lib_LTLIBRARIES)'), (329, '\t@$(NORMAL_INSTALL)'), (330, '\ttest -z ""$(libdir)"" || $(MKDIR_P) ""$(DESTDIR)$(libdir)""'), (331, '\t@list=\'$(lib_LTLIBRARIES)\'; test -n ""$(libdir)"" || list=; \\'), (332, '\tlist2=; for p in $$list; do \\'), (333, '\t  if test -f $$p; then \\'), (334, '\t    list2=""$$list2 $$p""; \\'), (335, '\t  else :; fi; \\'), (336, '\tdone; \\'), (337, '\ttest -z ""$$list2"" || { \\'), (338, '\t  echo "" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \'$(DESTDIR)$(libdir)\'""; \\'), (339, '\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 ""$(DESTDIR)$(libdir)""; \\'), (340, '\t}'), (341, ''), (342, 'uninstall-libLTLIBRARIES:'), (343, '\t@$(NORMAL_UNINSTALL)'), (344, '\t@list=\'$(lib_LTLIBRARIES)\'; test -n ""$(libdir)"" || list=; \\'), (345, '\tfor p in $$list; do \\'), (346, '\t  $(am__strip_dir) \\'), (347, '\t  echo "" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \'$(DESTDIR)$(libdir)/$$f\'""; \\'), (348, '\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f ""$(DESTDIR)$(libdir)/$$f""; \\'), (349, '\tdone'), (350, ''), (351, 'clean-libLTLIBRARIES:'), (352, '\t-test -z ""$(lib_LTLIBRARIES)"" || rm -f $(lib_LTLIBRARIES)'), (353, ""\t@list='$(lib_LTLIBRARIES)'; for p in $$list; do \\""), (354, '\t  dir=""`echo $$p | sed -e \'s|/[^/]*$$||\'`""; \\'), (355, '\t  test ""$$dir"" != ""$$p"" || dir=.; \\'), (356, '\t  echo ""rm -f \\""$${dir}/so_locations\\""""; \\'), (357, '\t  rm -f ""$${dir}/so_locations""; \\'), (358, '\tdone'), (359, 'libkafkaconnect.la: $(libkafkaconnect_la_OBJECTS) $(libkafkaconnect_la_DEPENDENCIES)'), (360, '\t$(libkafkaconnect_la_LINK) -rpath $(libdir) $(libkafkaconnect_la_OBJECTS) $(libkafkaconnect_la_LIBADD) $(LIBS)'), (361, ''), (362, 'clean-checkPROGRAMS:'), (363, '\t@list=\'$(check_PROGRAMS)\'; test -n ""$$list"" || exit 0; \\'), (364, '\techo "" rm -f"" $$list; \\'), (365, '\trm -f $$list || exit $$?; \\'), (366, '\ttest -n ""$(EXEEXT)"" || exit 0; \\'), (367, '\tlist=`for p in $$list; do echo ""$$p""; done | sed \'s/$(EXEEXT)$$//\'`; \\'), (368, '\techo "" rm -f"" $$list; \\'), (369, '\trm -f $$list'), (370, ''), (371, 'clean-noinstPROGRAMS:'), (372, '\t@list=\'$(noinst_PROGRAMS)\'; test -n ""$$list"" || exit 0; \\'), (373, '\techo "" rm -f"" $$list; \\'), (374, '\trm -f $$list || exit $$?; \\'), (375, '\ttest -n ""$(EXEEXT)"" || exit 0; \\'), (376, '\tlist=`for p in $$list; do echo ""$$p""; done | sed \'s/$(EXEEXT)$$//\'`; \\'), (377, '\techo "" rm -f"" $$list; \\'), (378, '\trm -f $$list'), (379, 'producer$(EXEEXT): $(producer_OBJECTS) $(producer_DEPENDENCIES)'), (380, '\t@rm -f producer$(EXEEXT)'), (381, '\t$(CXXLINK) $(producer_OBJECTS) $(producer_LDADD) $(LIBS)'), (382, 'tests/$(am__dirstamp):'), (383, '\t@$(MKDIR_P) tests'), (384, '\t@: > tests/$(am__dirstamp)'), (385, 'tests/encoder$(EXEEXT): $(tests_encoder_OBJECTS) $(tests_encoder_DEPENDENCIES) tests/$(am__dirstamp)'), (386, '\t@rm -f tests/encoder$(EXEEXT)'), (387, '\t$(CXXLINK) $(tests_encoder_OBJECTS) $(tests_encoder_LDADD) $(LIBS)'), (388, 'tests/encoder_helper$(EXEEXT): $(tests_encoder_helper_OBJECTS) $(tests_encoder_helper_DEPENDENCIES) tests/$(am__dirstamp)'), (389, '\t@rm -f tests/encoder_helper$(EXEEXT)'), (390, '\t$(CXXLINK) $(tests_encoder_helper_OBJECTS) $(tests_encoder_helper_LDADD) $(LIBS)'), (391, 'tests/producer$(EXEEXT): $(tests_producer_OBJECTS) $(tests_producer_DEPENDENCIES) tests/$(am__dirstamp)'), (392, '\t@rm -f tests/producer$(EXEEXT)'), (393, '\t$(CXXLINK) $(tests_producer_OBJECTS) $(tests_producer_LDADD) $(LIBS)'), (394, ''), (395, 'mostlyclean-compile:'), (396, '\t-rm -f *.$(OBJEXT)'), (397, ''), (398, 'distclean-compile:'), (399, '\t-rm -f *.tab.c'), (400, ''), (401, '@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_helper_tests.Po@am__quote@'), (402, '@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_tests.Po@am__quote@'), (403, '@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/example.Po@am__quote@'), (404, '@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/producer.Plo@am__quote@'), (405, '@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/producer_tests.Po@am__quote@'), (406, ''), (407, '.cpp.o:'), (408, '@am__fastdepCXX_TRUE@\t$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<'), (409, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po'), (410, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='$<' object='$@' libtool=no @AMDEPBACKSLASH@""), (411, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (412, '@am__fastdepCXX_FALSE@\t$(CXXCOMPILE) -c -o $@ $<'), (413, ''), (414, '.cpp.obj:'), (415, ""@am__fastdepCXX_TRUE@\t$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`""), (416, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po'), (417, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='$<' object='$@' libtool=no @AMDEPBACKSLASH@""), (418, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (419, ""@am__fastdepCXX_FALSE@\t$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`""), (420, ''), (421, '.cpp.lo:'), (422, '@am__fastdepCXX_TRUE@\t$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<'), (423, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo'), (424, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='$<' object='$@' libtool=yes @AMDEPBACKSLASH@""), (425, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (426, '@am__fastdepCXX_FALSE@\t$(LTCXXCOMPILE) -c -o $@ $<'), (427, ''), (428, 'producer.lo: src/producer.cpp'), (429, ""@am__fastdepCXX_TRUE@\t$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT producer.lo -MD -MP -MF $(DEPDIR)/producer.Tpo -c -o producer.lo `test -f 'src/producer.cpp' || echo '$(srcdir)/'`src/producer.cpp""), (430, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/producer.Tpo $(DEPDIR)/producer.Plo'), (431, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='src/producer.cpp' object='producer.lo' libtool=yes @AMDEPBACKSLASH@""), (432, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (433, ""@am__fastdepCXX_FALSE@\t$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o producer.lo `test -f 'src/producer.cpp' || echo '$(srcdir)/'`src/producer.cpp""), (434, ''), (435, 'example.o: src/example.cpp'), (436, ""@am__fastdepCXX_TRUE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT example.o -MD -MP -MF $(DEPDIR)/example.Tpo -c -o example.o `test -f 'src/example.cpp' || echo '$(srcdir)/'`src/example.cpp""), (437, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/example.Tpo $(DEPDIR)/example.Po'), (438, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='src/example.cpp' object='example.o' libtool=no @AMDEPBACKSLASH@""), (439, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (440, ""@am__fastdepCXX_FALSE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o example.o `test -f 'src/example.cpp' || echo '$(srcdir)/'`src/example.cpp""), (441, ''), (442, 'example.obj: src/example.cpp'), (443, ""@am__fastdepCXX_TRUE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT example.obj -MD -MP -MF $(DEPDIR)/example.Tpo -c -o example.obj `if test -f 'src/example.cpp'; then $(CYGPATH_W) 'src/example.cpp'; else $(CYGPATH_W) '$(srcdir)/src/example.cpp'; fi`""), (444, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/example.Tpo $(DEPDIR)/example.Po'), (445, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='src/example.cpp' object='example.obj' libtool=no @AMDEPBACKSLASH@""), (446, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (447, ""@am__fastdepCXX_FALSE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o example.obj `if test -f 'src/example.cpp'; then $(CYGPATH_W) 'src/example.cpp'; else $(CYGPATH_W) '$(srcdir)/src/example.cpp'; fi`""), (448, ''), (449, 'encoder_tests.o: src/tests/encoder_tests.cpp'), (450, ""@am__fastdepCXX_TRUE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_tests.o -MD -MP -MF $(DEPDIR)/encoder_tests.Tpo -c -o encoder_tests.o `test -f 'src/tests/encoder_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_tests.cpp""), (451, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/encoder_tests.Tpo $(DEPDIR)/encoder_tests.Po'), (452, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='src/tests/encoder_tests.cpp' object='encoder_tests.o' libtool=no @AMDEPBACKSLASH@""), (453, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (454, ""@am__fastdepCXX_FALSE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_tests.o `test -f 'src/tests/encoder_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_tests.cpp""), (455, ''), (456, 'encoder_tests.obj: src/tests/encoder_tests.cpp'), (457, ""@am__fastdepCXX_TRUE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_tests.obj -MD -MP -MF $(DEPDIR)/encoder_tests.Tpo -c -o encoder_tests.obj `if test -f 'src/tests/encoder_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_tests.cpp'; fi`""), (458, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/encoder_tests.Tpo $(DEPDIR)/encoder_tests.Po'), (459, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='src/tests/encoder_tests.cpp' object='encoder_tests.obj' libtool=no @AMDEPBACKSLASH@""), (460, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (461, ""@am__fastdepCXX_FALSE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_tests.obj `if test -f 'src/tests/encoder_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_tests.cpp'; fi`""), (462, ''), (463, 'encoder_helper_tests.o: src/tests/encoder_helper_tests.cpp'), (464, ""@am__fastdepCXX_TRUE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_helper_tests.o -MD -MP -MF $(DEPDIR)/encoder_helper_tests.Tpo -c -o encoder_helper_tests.o `test -f 'src/tests/encoder_helper_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_helper_tests.cpp""), (465, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/encoder_helper_tests.Tpo $(DEPDIR)/encoder_helper_tests.Po'), (466, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='src/tests/encoder_helper_tests.cpp' object='encoder_helper_tests.o' libtool=no @AMDEPBACKSLASH@""), (467, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (468, ""@am__fastdepCXX_FALSE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_helper_tests.o `test -f 'src/tests/encoder_helper_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_helper_tests.cpp""), (469, ''), (470, 'encoder_helper_tests.obj: src/tests/encoder_helper_tests.cpp'), (471, ""@am__fastdepCXX_TRUE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_helper_tests.obj -MD -MP -MF $(DEPDIR)/encoder_helper_tests.Tpo -c -o encoder_helper_tests.obj `if test -f 'src/tests/encoder_helper_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_helper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_helper_tests.cpp'; fi`""), (472, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/encoder_helper_tests.Tpo $(DEPDIR)/encoder_helper_tests.Po'), (473, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='src/tests/encoder_helper_tests.cpp' object='encoder_helper_tests.obj' libtool=no @AMDEPBACKSLASH@""), (474, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (475, ""@am__fastdepCXX_FALSE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_helper_tests.obj `if test -f 'src/tests/encoder_helper_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_helper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_helper_tests.cpp'; fi`""), (476, ''), (477, 'producer_tests.o: src/tests/producer_tests.cpp'), (478, ""@am__fastdepCXX_TRUE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT producer_tests.o -MD -MP -MF $(DEPDIR)/producer_tests.Tpo -c -o producer_tests.o `test -f 'src/tests/producer_tests.cpp' || echo '$(srcdir)/'`src/tests/producer_tests.cpp""), (479, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/producer_tests.Tpo $(DEPDIR)/producer_tests.Po'), (480, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='src/tests/producer_tests.cpp' object='producer_tests.o' libtool=no @AMDEPBACKSLASH@""), (481, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (482, ""@am__fastdepCXX_FALSE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o producer_tests.o `test -f 'src/tests/producer_tests.cpp' || echo '$(srcdir)/'`src/tests/producer_tests.cpp""), (483, ''), (484, 'producer_tests.obj: src/tests/producer_tests.cpp'), (485, ""@am__fastdepCXX_TRUE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT producer_tests.obj -MD -MP -MF $(DEPDIR)/producer_tests.Tpo -c -o producer_tests.obj `if test -f 'src/tests/producer_tests.cpp'; then $(CYGPATH_W) 'src/tests/producer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/producer_tests.cpp'; fi`""), (486, '@am__fastdepCXX_TRUE@\t$(am__mv) $(DEPDIR)/producer_tests.Tpo $(DEPDIR)/producer_tests.Po'), (487, ""@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tsource='src/tests/producer_tests.cpp' object='producer_tests.obj' libtool=no @AMDEPBACKSLASH@""), (488, '@AMDEP_TRUE@@am__fastdepCXX_FALSE@\tDEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@'), (489, ""@am__fastdepCXX_FALSE@\t$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o producer_tests.obj `if test -f 'src/tests/producer_tests.cpp'; then $(CYGPATH_W) 'src/tests/producer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/producer_tests.cpp'; fi`""), (490, ''), (491, 'mostlyclean-libtool:'), (492, '\t-rm -f *.lo'), (493, ''), (494, 'clean-libtool:'), (495, '\t-rm -rf .libs _libs'), (496, '\t-rm -rf tests/.libs tests/_libs'), (497, ''), (498, 'distclean-libtool:'), (499, '\t-rm -f libtool config.lt'), (500, 'install-kafkaconnect_includeHEADERS: $(kafkaconnect_include_HEADERS)'), (501, '\t@$(NORMAL_INSTALL)'), (502, '\ttest -z ""$(kafkaconnect_includedir)"" || $(MKDIR_P) ""$(DESTDIR)$(kafkaconnect_includedir)""'), (503, '\t@list=\'$(kafkaconnect_include_HEADERS)\'; test -n ""$(kafkaconnect_includedir)"" || list=; \\'), (504, '\tfor p in $$list; do \\'), (505, '\t  if test -f ""$$p""; then d=; else d=""$(srcdir)/""; fi; \\'), (506, '\t  echo ""$$d$$p""; \\'), (507, '\tdone | $(am__base_list) | \\'), (508, '\twhile read files; do \\'), (509, '\t  echo "" $(INSTALL_HEADER) $$files \'$(DESTDIR)$(kafkaconnect_includedir)\'""; \\'), (510, '\t  $(INSTALL_HEADER) $$files ""$(DESTDIR)$(kafkaconnect_includedir)"" || exit $$?; \\'), (511, '\tdone'), (512, ''), (513, 'uninstall-kafkaconnect_includeHEADERS:'), (514, '\t@$(NORMAL_UNINSTALL)'), (515, '\t@list=\'$(kafkaconnect_include_HEADERS)\'; test -n ""$(kafkaconnect_includedir)"" || list=; \\'), (516, ""\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\""), (517, '\ttest -n ""$$files"" || exit 0; \\'), (518, '\techo "" ( cd \'$(DESTDIR)$(kafkaconnect_includedir)\' && rm -f"" $$files "")""; \\'), (519, '\tcd ""$(DESTDIR)$(kafkaconnect_includedir)"" && rm -f $$files'), (520, ''), (521, 'ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)'), (522, ""\tlist='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\""), (523, '\tunique=`for i in $$list; do \\'), (524, '\t    if test -f ""$$i""; then echo $$i; else echo $(srcdir)/$$i; fi; \\'), (525, '\t  done | \\'), (526, ""\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\""), (527, ""\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\""), (528, '\tmkid -fID $$unique'), (529, 'tags: TAGS'), (530, ''), (531, 'TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\'), (532, '\t\t$(TAGS_FILES) $(LISP)'), (533, '\tset x; \\'), (534, '\there=`pwd`; \\'), (535, ""\tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\""), (536, '\tunique=`for i in $$list; do \\'), (537, '\t    if test -f ""$$i""; then echo $$i; else echo $(srcdir)/$$i; fi; \\'), (538, '\t  done | \\'), (539, ""\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\""), (540, ""\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\""), (541, '\tshift; \\'), (542, '\tif test -z ""$(ETAGS_ARGS)$$*$$unique""; then :; else \\'), (543, '\t  test -n ""$$unique"" || unique=$$empty_fix; \\'), (544, '\t  if test $$# -gt 0; then \\'), (545, '\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\'), (546, '\t      ""$$@"" $$unique; \\'), (547, '\t  else \\'), (548, '\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\'), (549, '\t      $$unique; \\'), (550, '\t  fi; \\'), (551, '\tfi'), (552, 'ctags: CTAGS'), (553, 'CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\'), (554, '\t\t$(TAGS_FILES) $(LISP)'), (555, ""\tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\""), (556, '\tunique=`for i in $$list; do \\'), (557, '\t    if test -f ""$$i""; then echo $$i; else echo $(srcdir)/$$i; fi; \\'), (558, '\t  done | \\'), (559, ""\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\""), (560, ""\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\""), (561, '\ttest -z ""$(CTAGS_ARGS)$$unique"" \\'), (562, '\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\'), (563, '\t     $$unique'), (564, ''), (565, 'GTAGS:'), (566, '\there=`$(am__cd) $(top_builddir) && pwd` \\'), (567, '\t  && $(am__cd) $(top_srcdir) \\'), (568, '\t  && gtags -i $(GTAGS_ARGS) ""$$here""'), (569, ''), (570, 'distclean-tags:'), (571, '\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags'), (572, ''), (573, 'check-TESTS: $(TESTS)'), (574, '\t@failed=0; all=0; xfail=0; xpass=0; skip=0; \\'), (575, '\tsrcdir=$(srcdir); export srcdir; \\'), (576, ""\tlist=' $(TESTS) '; \\""), (577, '\t$(am__tty_colors); \\'), (578, '\tif test -n ""$$list""; then \\'), (579, '\t  for tst in $$list; do \\'), (580, '\t    if test -f ./$$tst; then dir=./; \\'), (581, '\t    elif test -f $$tst; then dir=; \\'), (582, '\t    else dir=""$(srcdir)/""; fi; \\'), (583, '\t    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \\'), (584, '\t      all=`expr $$all + 1`; \\'), (585, '\t      case "" $(XFAIL_TESTS) "" in \\'), (586, '\t      *[\\ \\\t]$$tst[\\ \\\t]*) \\'), (587, '\t\txpass=`expr $$xpass + 1`; \\'), (588, '\t\tfailed=`expr $$failed + 1`; \\'), (589, '\t\tcol=$$red; res=XPASS; \\'), (590, '\t      ;; \\'), (591, '\t      *) \\'), (592, '\t\tcol=$$grn; res=PASS; \\'), (593, '\t      ;; \\'), (594, '\t      esac; \\'), (595, '\t    elif test $$? -ne 77; then \\'), (596, '\t      all=`expr $$all + 1`; \\'), (597, '\t      case "" $(XFAIL_TESTS) "" in \\'), (598, '\t      *[\\ \\\t]$$tst[\\ \\\t]*) \\'), (599, '\t\txfail=`expr $$xfail + 1`; \\'), (600, '\t\tcol=$$lgn; res=XFAIL; \\'), (601, '\t      ;; \\'), (602, '\t      *) \\'), (603, '\t\tfailed=`expr $$failed + 1`; \\'), (604, '\t\tcol=$$red; res=FAIL; \\'), (605, '\t      ;; \\'), (606, '\t      esac; \\'), (607, '\t    else \\'), (608, '\t      skip=`expr $$skip + 1`; \\'), (609, '\t      col=$$blu; res=SKIP; \\'), (610, '\t    fi; \\'), (611, '\t    echo ""$${col}$$res$${std}: $$tst""; \\'), (612, '\t  done; \\'), (613, '\t  if test ""$$all"" -eq 1; then \\'), (614, '\t    tests=""test""; \\'), (615, '\t    All=""""; \\'), (616, '\t  else \\'), (617, '\t    tests=""tests""; \\'), (618, '\t    All=""All ""; \\'), (619, '\t  fi; \\'), (620, '\t  if test ""$$failed"" -eq 0; then \\'), (621, '\t    if test ""$$xfail"" -eq 0; then \\'), (622, '\t      banner=""$$All$$all $$tests passed""; \\'), (623, '\t    else \\'), (624, '\t      if test ""$$xfail"" -eq 1; then failures=failure; else failures=failures; fi; \\'), (625, '\t      banner=""$$All$$all $$tests behaved as expected ($$xfail expected $$failures)""; \\'), (626, '\t    fi; \\'), (627, '\t  else \\'), (628, '\t    if test ""$$xpass"" -eq 0; then \\'), (629, '\t      banner=""$$failed of $$all $$tests failed""; \\'), (630, '\t    else \\'), (631, '\t      if test ""$$xpass"" -eq 1; then passes=pass; else passes=passes; fi; \\'), (632, '\t      banner=""$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)""; \\'), (633, '\t    fi; \\'), (634, '\t  fi; \\'), (635, '\t  dashes=""$$banner""; \\'), (636, '\t  skipped=""""; \\'), (637, '\t  if test ""$$skip"" -ne 0; then \\'), (638, '\t    if test ""$$skip"" -eq 1; then \\'), (639, '\t      skipped=""($$skip test was not run)""; \\'), (640, '\t    else \\'), (641, '\t      skipped=""($$skip tests were not run)""; \\'), (642, '\t    fi; \\'), (643, '\t    test `echo ""$$skipped"" | wc -c` -le `echo ""$$banner"" | wc -c` || \\'), (644, '\t      dashes=""$$skipped""; \\'), (645, '\t  fi; \\'), (646, '\t  report=""""; \\'), (647, '\t  if test ""$$failed"" -ne 0 && test -n ""$(PACKAGE_BUGREPORT)""; then \\'), (648, '\t    report=""Please report to $(PACKAGE_BUGREPORT)""; \\'), (649, '\t    test `echo ""$$report"" | wc -c` -le `echo ""$$banner"" | wc -c` || \\'), (650, '\t      dashes=""$$report""; \\'), (651, '\t  fi; \\'), (652, '\t  dashes=`echo ""$$dashes"" | sed s/./=/g`; \\'), (653, '\t  if test ""$$failed"" -eq 0; then \\'), (654, '\t    echo ""$$grn$$dashes""; \\'), (655, '\t  else \\'), (656, '\t    echo ""$$red$$dashes""; \\'), (657, '\t  fi; \\'), (658, '\t  echo ""$$banner""; \\'), (659, '\t  test -z ""$$skipped"" || echo ""$$skipped""; \\'), (660, '\t  test -z ""$$report"" || echo ""$$report""; \\'), (661, '\t  echo ""$$dashes$$std""; \\'), (662, '\t  test ""$$failed"" -eq 0; \\'), (663, '\telse :; fi'), (664, ''), (665, 'distdir: $(DISTFILES)'), (666, '\t$(am__remove_distdir)'), (667, '\ttest -d ""$(distdir)"" || mkdir ""$(distdir)""'), (668, '\t@srcdirstrip=`echo ""$(srcdir)"" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\'), (669, '\ttopsrcdirstrip=`echo ""$(top_srcdir)"" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\'), (670, ""\tlist='$(DISTFILES)'; \\""), (671, '\t  dist_files=`for file in $$list; do echo $$file; done | \\'), (672, '\t  sed -e ""s|^$$srcdirstrip/||;t"" \\'), (673, '\t      -e ""s|^$$topsrcdirstrip/|$(top_builddir)/|;t""`; \\'), (674, '\tcase $$dist_files in \\'), (675, '\t  */*) $(MKDIR_P) `echo ""$$dist_files"" | \\'), (676, ""\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\""), (677, '\t\t\t   sort -u` ;; \\'), (678, '\tesac; \\'), (679, '\tfor file in $$dist_files; do \\'), (680, '\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\'), (681, '\t  if test -d $$d/$$file; then \\'), (682, '\t    dir=`echo ""/$$file"" | sed -e \'s,/[^/]*$$,,\'`; \\'), (683, '\t    if test -d ""$(distdir)/$$file""; then \\'), (684, '\t      find ""$(distdir)/$$file"" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\'), (685, '\t    fi; \\'), (686, '\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\'), (687, '\t      cp -fpR $(srcdir)/$$file ""$(distdir)$$dir"" || exit 1; \\'), (688, '\t      find ""$(distdir)/$$file"" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\'), (689, '\t    fi; \\'), (690, '\t    cp -fpR $$d/$$file ""$(distdir)$$dir"" || exit 1; \\'), (691, '\t  else \\'), (692, '\t    test -f ""$(distdir)/$$file"" \\'), (693, '\t    || cp -p $$d/$$file ""$(distdir)/$$file"" \\'), (694, '\t    || exit 1; \\'), (695, '\t  fi; \\'), (696, '\tdone'), (697, '\t-test -n ""$(am__skip_mode_fix)"" \\'), (698, '\t|| find ""$(distdir)"" -type d ! -perm -755 \\'), (699, '\t\t-exec chmod u+rwx,go+rx {} \\; -o \\'), (700, '\t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\'), (701, '\t  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\'), (702, '\t  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \\; \\'), (703, '\t|| chmod -R a+r ""$(distdir)""'), (704, 'dist-gzip: distdir'), (705, '\ttardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz'), (706, '\t$(am__remove_distdir)'), (707, ''), (708, 'dist-bzip2: distdir'), (709, '\ttardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2'), (710, '\t$(am__remove_distdir)'), (711, ''), (712, 'dist-lzma: distdir'), (713, '\ttardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma'), (714, '\t$(am__remove_distdir)'), (715, ''), (716, 'dist-xz: distdir'), (717, '\ttardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz'), (718, '\t$(am__remove_distdir)'), (719, ''), (720, 'dist-tarZ: distdir'), (721, '\ttardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z'), (722, '\t$(am__remove_distdir)'), (723, ''), (724, 'dist-shar: distdir'), (725, '\tshar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz'), (726, '\t$(am__remove_distdir)'), (727, ''), (728, 'dist-zip: distdir'), (729, '\t-rm -f $(distdir).zip'), (730, '\tzip -rq $(distdir).zip $(distdir)'), (731, '\t$(am__remove_distdir)'), (732, ''), (733, 'dist dist-all: distdir'), (734, '\ttardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz'), (735, '\t$(am__remove_distdir)'), (736, ''), (737, '# This target untars the dist file and tries a VPATH configuration.  Then'), (738, '# it guarantees that the distribution is self-contained by making another'), (739, '# tarfile.'), (740, 'distcheck: dist'), (741, ""\tcase '$(DIST_ARCHIVES)' in \\""), (742, '\t*.tar.gz*) \\'), (743, '\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\\'), (744, '\t*.tar.bz2*) \\'), (745, '\t  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\\'), (746, '\t*.tar.lzma*) \\'), (747, '\t  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\\'), (748, '\t*.tar.xz*) \\'), (749, '\t  xz -dc $(distdir).tar.xz | $(am__untar) ;;\\'), (750, '\t*.tar.Z*) \\'), (751, '\t  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\\'), (752, '\t*.shar.gz*) \\'), (753, '\t  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\\'), (754, '\t*.zip*) \\'), (755, '\t  unzip $(distdir).zip ;;\\'), (756, '\tesac'), (757, '\tchmod -R a-w $(distdir); chmod a+w $(distdir)'), (758, '\tmkdir $(distdir)/_build'), (759, '\tmkdir $(distdir)/_inst'), (760, '\tchmod a-w $(distdir)'), (761, '\ttest -d $(distdir)/_build || exit 0; \\'), (762, ""\tdc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\\\/]:[\\\\/],/,'` \\""), (763, '\t  && dc_destdir=""$${TMPDIR-/tmp}/am-dc-$$$$/"" \\'), (764, '\t  && am__cwd=`pwd` \\'), (765, '\t  && $(am__cd) $(distdir)/_build \\'), (766, '\t  && ../configure --srcdir=.. --prefix=""$$dc_install_base"" \\'), (767, '\t    $(DISTCHECK_CONFIGURE_FLAGS) \\'), (768, '\t  && $(MAKE) $(AM_MAKEFLAGS) \\'), (769, '\t  && $(MAKE) $(AM_MAKEFLAGS) dvi \\'), (770, '\t  && $(MAKE) $(AM_MAKEFLAGS) check \\'), (771, '\t  && $(MAKE) $(AM_MAKEFLAGS) install \\'), (772, '\t  && $(MAKE) $(AM_MAKEFLAGS) installcheck \\'), (773, '\t  && $(MAKE) $(AM_MAKEFLAGS) uninstall \\'), (774, '\t  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir=""$$dc_install_base"" \\'), (775, '\t        distuninstallcheck \\'), (776, '\t  && chmod -R a-w ""$$dc_install_base"" \\'), (777, '\t  && ({ \\'), (778, '\t       (cd ../.. && umask 077 && mkdir ""$$dc_destdir"") \\'), (779, '\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=""$$dc_destdir"" install \\'), (780, '\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=""$$dc_destdir"" uninstall \\'), (781, '\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=""$$dc_destdir"" \\'), (782, '\t            distuninstallcheck_dir=""$$dc_destdir"" distuninstallcheck; \\'), (783, '\t      } || { rm -rf ""$$dc_destdir""; exit 1; }) \\'), (784, '\t  && rm -rf ""$$dc_destdir"" \\'), (785, '\t  && $(MAKE) $(AM_MAKEFLAGS) dist \\'), (786, '\t  && rm -rf $(DIST_ARCHIVES) \\'), (787, '\t  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \\'), (788, '\t  && cd ""$$am__cwd"" \\'), (789, '\t  || exit 1'), (790, '\t$(am__remove_distdir)'), (791, '\t@(echo ""$(distdir) archives ready for distribution: ""; \\'), (792, ""\t  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \\""), (793, ""\t  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'""), (794, 'distuninstallcheck:'), (795, ""\t@$(am__cd) '$(distuninstallcheck_dir)' \\""), (796, '\t&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \\'), (797, '\t   || { echo ""ERROR: files left after uninstall:"" ; \\'), (798, '\t        if test -n ""$(DESTDIR)""; then \\'), (799, '\t          echo ""  (check DESTDIR support)""; \\'), (800, '\t        fi ; \\'), (801, '\t        $(distuninstallcheck_listfiles) ; \\'), (802, '\t        exit 1; } >&2'), (803, 'distcleancheck: distclean'), (804, ""\t@if test '$(srcdir)' = . ; then \\""), (805, '\t  echo ""ERROR: distcleancheck can only run from a VPATH build"" ; \\'), (806, '\t  exit 1 ; \\'), (807, '\tfi'), (808, '\t@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \\'), (809, '\t  || { echo ""ERROR: files left in build directory after distclean:"" ; \\'), (810, '\t       $(distcleancheck_listfiles) ; \\'), (811, '\t       exit 1; } >&2'), (812, 'check-am: all-am'), (813, '\t$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)'), (814, '\t$(MAKE) $(AM_MAKEFLAGS) check-TESTS'), (815, 'check: check-am'), (816, 'all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)'), (817, 'installdirs:'), (818, '\tfor dir in ""$(DESTDIR)$(libdir)"" ""$(DESTDIR)$(kafkaconnect_includedir)""; do \\'), (819, '\t  test -z ""$$dir"" || $(MKDIR_P) ""$$dir""; \\'), (820, '\tdone'), (821, 'install: install-am'), (822, 'install-exec: install-exec-am'), (823, 'install-data: install-data-am'), (824, 'uninstall: uninstall-am'), (825, ''), (826, 'install-am: all-am'), (827, '\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am'), (828, ''), (829, 'installcheck: installcheck-am'), (830, 'install-strip:'), (831, '\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=""$(INSTALL_STRIP_PROGRAM)"" \\'), (832, '\t  install_sh_PROGRAM=""$(INSTALL_STRIP_PROGRAM)"" INSTALL_STRIP_FLAG=-s \\'), (833, ""\t  `test -z '$(STRIP)' || \\""), (834, '\t    echo ""INSTALL_PROGRAM_ENV=STRIPPROG=\'$(STRIP)\'""` install'), (835, 'mostlyclean-generic:'), (836, ''), (837, 'clean-generic:'), (838, ''), (839, 'distclean-generic:'), (840, '\t-test -z ""$(CONFIG_CLEAN_FILES)"" || rm -f $(CONFIG_CLEAN_FILES)'), (841, '\t-test . = ""$(srcdir)"" || test -z ""$(CONFIG_CLEAN_VPATH_FILES)"" || rm -f $(CONFIG_CLEAN_VPATH_FILES)'), (842, '\t-rm -f tests/$(am__dirstamp)'), (843, ''), (844, 'maintainer-clean-generic:'), (845, '\t@echo ""This command is intended for maintainers to use""'), (846, '\t@echo ""it deletes files that may require special tools to rebuild.""'), (847, 'clean: clean-am'), (848, ''), (849, 'clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \\'), (850, '\tclean-libtool clean-noinstPROGRAMS mostlyclean-am'), (851, ''), (852, 'distclean: distclean-am'), (853, '\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)'), (854, '\t-rm -rf ./$(DEPDIR)'), (855, '\t-rm -f Makefile'), (856, 'distclean-am: clean-am distclean-compile distclean-generic \\'), (857, '\tdistclean-libtool distclean-tags'), (858, ''), (859, 'dvi: dvi-am'), (860, ''), (861, 'dvi-am:'), (862, ''), (863, 'html: html-am'), (864, ''), (865, 'html-am:'), (866, ''), (867, 'info: info-am'), (868, ''), (869, 'info-am:'), (870, ''), (871, 'install-data-am: install-kafkaconnect_includeHEADERS'), (872, ''), (873, 'install-dvi: install-dvi-am'), (874, ''), (875, 'install-dvi-am:'), (876, ''), (877, 'install-exec-am: install-libLTLIBRARIES'), (878, ''), (879, 'install-html: install-html-am'), (880, ''), (881, 'install-html-am:'), (882, ''), (883, 'install-info: install-info-am'), (884, ''), (885, 'install-info-am:'), (886, ''), (887, 'install-man:'), (888, ''), (889, 'install-pdf: install-pdf-am'), (890, ''), (891, 'install-pdf-am:'), (892, ''), (893, 'install-ps: install-ps-am'), (894, ''), (895, 'install-ps-am:'), (896, ''), (897, 'installcheck-am:'), (898, ''), (899, 'maintainer-clean: maintainer-clean-am'), (900, '\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)'), (901, '\t-rm -rf $(top_srcdir)/autom4te.cache'), (902, '\t-rm -rf ./$(DEPDIR)'), (903, '\t-rm -f Makefile'), (904, 'maintainer-clean-am: distclean-am maintainer-clean-generic'), (905, ''), (906, 'mostlyclean: mostlyclean-am'), (907, ''), (908, 'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\'), (909, '\tmostlyclean-libtool'), (910, ''), (911, 'pdf: pdf-am'), (912, ''), (913, 'pdf-am:'), (914, ''), (915, 'ps: ps-am'), (916, ''), (917, 'ps-am:'), (918, ''), (919, 'uninstall-am: uninstall-kafkaconnect_includeHEADERS \\'), (920, '\tuninstall-libLTLIBRARIES'), (921, ''), (922, '.MAKE: check-am install-am install-strip'), (923, ''), (924, '.PHONY: CTAGS GTAGS all all-am am--refresh check check-TESTS check-am \\'), (925, '\tclean clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \\'), (926, '\tclean-libtool clean-noinstPROGRAMS ctags dist dist-all \\'), (927, '\tdist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ dist-xz \\'), (928, '\tdist-zip distcheck distclean distclean-compile \\'), (929, '\tdistclean-generic distclean-libtool distclean-tags \\'), (930, '\tdistcleancheck distdir distuninstallcheck dvi dvi-am html \\'), (931, '\thtml-am info info-am install install-am install-data \\'), (932, '\tinstall-data-am install-dvi install-dvi-am install-exec \\'), (933, '\tinstall-exec-am install-html install-html-am install-info \\'), (934, '\tinstall-info-am install-kafkaconnect_includeHEADERS \\'), (935, '\tinstall-libLTLIBRARIES install-man install-pdf install-pdf-am \\'), (936, '\tinstall-ps install-ps-am install-strip installcheck \\'), (937, '\tinstallcheck-am installdirs maintainer-clean \\'), (938, '\tmaintainer-clean-generic mostlyclean mostlyclean-compile \\'), (939, '\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\'), (940, '\ttags uninstall uninstall-am \\'), (941, '\tuninstall-kafkaconnect_includeHEADERS uninstall-libLTLIBRARIES'), (942, ''), (943, ''), (944, '# Tell versions [3.59,3.63) of GNU make to not export all variables.'), (945, '# Otherwise a system limit (for SysV at least) may be exceeded.'), (946, '.NOEXPORT:')], 'deleted': []}",946,0,"# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Warning this is the first time I've made a configure.ac/Makefile.am thing
# Please improve it as I have no idea what I am doing
# @benjamg
#



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH=""$${ZSH_VERSION+.}$(PATH_SEPARATOR)"" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
noinst_PROGRAMS = producer$(EXEEXT)
check_PROGRAMS = tests/encoder_helper$(EXEEXT) tests/encoder$(EXEEXT) \
	tests/producer$(EXEEXT)
TESTS = tests/encoder_helper$(EXEEXT) tests/encoder$(EXEEXT) \
	tests/producer$(EXEEXT)
subdir = .
DIST_COMMON = $(am__configure_deps) $(kafkaconnect_include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/configure build-aux/config.guess \
	build-aux/config.sub build-aux/depcomp build-aux/install-sh \
	build-aux/ltmain.sh build-aux/missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo ""$(srcdir)"" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo ""$$p"" | sed ""s|^$$srcdirstrip/||""`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo ""$(srcdir)"" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo ""$$p""; done | sed -e ""s|$$srcdirstrip/||""
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo ""$$p $$p""; done | \
  sed ""s| $$srcdirstrip/| |;""' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["".""] = """" } { files[$$2] = files[$$2] "" "" $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = """" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = ""$(DESTDIR)$(libdir)"" \
	""$(DESTDIR)$(kafkaconnect_includedir)""
LTLIBRARIES = $(lib_LTLIBRARIES)
libkafkaconnect_la_LIBADD =
am_libkafkaconnect_la_OBJECTS = producer.lo
libkafkaconnect_la_OBJECTS = $(am_libkafkaconnect_la_OBJECTS)
libkafkaconnect_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libkafkaconnect_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(noinst_PROGRAMS)
am_producer_OBJECTS = example.$(OBJEXT)
producer_OBJECTS = $(am_producer_OBJECTS)
am__DEPENDENCIES_1 =
producer_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_tests_encoder_OBJECTS = encoder_tests.$(OBJEXT)
tests_encoder_OBJECTS = $(am_tests_encoder_OBJECTS)
tests_encoder_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__dirstamp = $(am__leading_dot)dirstamp
am_tests_encoder_helper_OBJECTS = encoder_helper_tests.$(OBJEXT)
tests_encoder_helper_OBJECTS = $(am_tests_encoder_helper_OBJECTS)
tests_encoder_helper_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_tests_producer_OBJECTS = producer_tests.$(OBJEXT)
tests_producer_OBJECTS = $(am_tests_producer_OBJECTS)
tests_producer_DEPENDENCIES = $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libkafkaconnect_la_SOURCES) $(producer_SOURCES) \
	$(tests_encoder_SOURCES) $(tests_encoder_helper_SOURCES) \
	$(tests_producer_SOURCES)
DIST_SOURCES = $(libkafkaconnect_la_SOURCES) $(producer_SOURCES) \
	$(tests_encoder_SOURCES) $(tests_encoder_helper_SOURCES) \
	$(tests_producer_SOURCES)
HEADERS = $(kafkaconnect_include_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d ""$(distdir)"" \
    || { find ""$(distdir)"" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr ""$(distdir)""; }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KAFKACONNECT_VERSION = @KAFKACONNECT_VERSION@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
ACLOCAL_AMFLAGS = -I build-aux/m4 ${ACLOCAL_FLAGS}
AM_CPPFLAGS = $(DEPS_CFLAGS)
EXAMPLE_LIBS = -lboost_system -lboost_thread -lkafkaconnect

#
# Shared Library
#
lib_LTLIBRARIES = libkafkaconnect.la
libkafkaconnect_la_SOURCES = src/producer.cpp
libkafkaconnect_la_LDFLAGS = -version-info $(KAFKACONNECT_VERSION)
kafkaconnect_includedir = $(includedir)/kafkaconnect
kafkaconnect_include_HEADERS = src/producer.hpp \
								src/encoder.hpp \
								src/encoder_helper.hpp

producer_SOURCES = src/example.cpp
producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS)
tests_encoder_helper_SOURCES = src/tests/encoder_helper_tests.cpp
tests_encoder_helper_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework
tests_encoder_SOURCES = src/tests/encoder_tests.cpp
tests_encoder_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework
tests_producer_SOURCES = src/tests/producer_tests.cpp
tests_producer_LDADD = $(DEPS_LIBS) $(EXAMPLE_LIBS) -lboost_unit_test_framework
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z ""$(libdir)"" || $(MKDIR_P) ""$(DESTDIR)$(libdir)""
	@list='$(lib_LTLIBRARIES)'; test -n ""$(libdir)"" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2=""$$list2 $$p""; \
	  else :; fi; \
	done; \
	test -z ""$$list2"" || { \
	  echo "" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'""; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 ""$(DESTDIR)$(libdir)""; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n ""$(libdir)"" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo "" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'""; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f ""$(DESTDIR)$(libdir)/$$f""; \
	done

clean-libLTLIBRARIES:
	-test -z ""$(lib_LTLIBRARIES)"" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir=""`echo $$p | sed -e 's|/[^/]*$$||'`""; \
	  test ""$$dir"" != ""$$p"" || dir=.; \
	  echo ""rm -f \""$${dir}/so_locations\""""; \
	  rm -f ""$${dir}/so_locations""; \
	done
libkafkaconnect.la: $(libkafkaconnect_la_OBJECTS) $(libkafkaconnect_la_DEPENDENCIES) 
	$(libkafkaconnect_la_LINK) -rpath $(libdir) $(libkafkaconnect_la_OBJECTS) $(libkafkaconnect_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n ""$$list"" || exit 0; \
	echo "" rm -f"" $$list; \
	rm -f $$list || exit $$?; \
	test -n ""$(EXEEXT)"" || exit 0; \
	list=`for p in $$list; do echo ""$$p""; done | sed 's/$(EXEEXT)$$//'`; \
	echo "" rm -f"" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n ""$$list"" || exit 0; \
	echo "" rm -f"" $$list; \
	rm -f $$list || exit $$?; \
	test -n ""$(EXEEXT)"" || exit 0; \
	list=`for p in $$list; do echo ""$$p""; done | sed 's/$(EXEEXT)$$//'`; \
	echo "" rm -f"" $$list; \
	rm -f $$list
producer$(EXEEXT): $(producer_OBJECTS) $(producer_DEPENDENCIES) 
	@rm -f producer$(EXEEXT)
	$(CXXLINK) $(producer_OBJECTS) $(producer_LDADD) $(LIBS)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)
tests/encoder$(EXEEXT): $(tests_encoder_OBJECTS) $(tests_encoder_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/encoder$(EXEEXT)
	$(CXXLINK) $(tests_encoder_OBJECTS) $(tests_encoder_LDADD) $(LIBS)
tests/encoder_helper$(EXEEXT): $(tests_encoder_helper_OBJECTS) $(tests_encoder_helper_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/encoder_helper$(EXEEXT)
	$(CXXLINK) $(tests_encoder_helper_OBJECTS) $(tests_encoder_helper_LDADD) $(LIBS)
tests/producer$(EXEEXT): $(tests_producer_OBJECTS) $(tests_producer_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/producer$(EXEEXT)
	$(CXXLINK) $(tests_producer_OBJECTS) $(tests_producer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_helper_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/producer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/producer_tests.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

producer.lo: src/producer.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT producer.lo -MD -MP -MF $(DEPDIR)/producer.Tpo -c -o producer.lo `test -f 'src/producer.cpp' || echo '$(srcdir)/'`src/producer.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/producer.Tpo $(DEPDIR)/producer.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/producer.cpp' object='producer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o producer.lo `test -f 'src/producer.cpp' || echo '$(srcdir)/'`src/producer.cpp

example.o: src/example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT example.o -MD -MP -MF $(DEPDIR)/example.Tpo -c -o example.o `test -f 'src/example.cpp' || echo '$(srcdir)/'`src/example.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/example.Tpo $(DEPDIR)/example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/example.cpp' object='example.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o example.o `test -f 'src/example.cpp' || echo '$(srcdir)/'`src/example.cpp

example.obj: src/example.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT example.obj -MD -MP -MF $(DEPDIR)/example.Tpo -c -o example.obj `if test -f 'src/example.cpp'; then $(CYGPATH_W) 'src/example.cpp'; else $(CYGPATH_W) '$(srcdir)/src/example.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/example.Tpo $(DEPDIR)/example.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/example.cpp' object='example.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o example.obj `if test -f 'src/example.cpp'; then $(CYGPATH_W) 'src/example.cpp'; else $(CYGPATH_W) '$(srcdir)/src/example.cpp'; fi`

encoder_tests.o: src/tests/encoder_tests.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_tests.o -MD -MP -MF $(DEPDIR)/encoder_tests.Tpo -c -o encoder_tests.o `test -f 'src/tests/encoder_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_tests.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/encoder_tests.Tpo $(DEPDIR)/encoder_tests.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/encoder_tests.cpp' object='encoder_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_tests.o `test -f 'src/tests/encoder_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_tests.cpp

encoder_tests.obj: src/tests/encoder_tests.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_tests.obj -MD -MP -MF $(DEPDIR)/encoder_tests.Tpo -c -o encoder_tests.obj `if test -f 'src/tests/encoder_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/encoder_tests.Tpo $(DEPDIR)/encoder_tests.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/encoder_tests.cpp' object='encoder_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_tests.obj `if test -f 'src/tests/encoder_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_tests.cpp'; fi`

encoder_helper_tests.o: src/tests/encoder_helper_tests.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_helper_tests.o -MD -MP -MF $(DEPDIR)/encoder_helper_tests.Tpo -c -o encoder_helper_tests.o `test -f 'src/tests/encoder_helper_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_helper_tests.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/encoder_helper_tests.Tpo $(DEPDIR)/encoder_helper_tests.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/encoder_helper_tests.cpp' object='encoder_helper_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_helper_tests.o `test -f 'src/tests/encoder_helper_tests.cpp' || echo '$(srcdir)/'`src/tests/encoder_helper_tests.cpp

encoder_helper_tests.obj: src/tests/encoder_helper_tests.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encoder_helper_tests.obj -MD -MP -MF $(DEPDIR)/encoder_helper_tests.Tpo -c -o encoder_helper_tests.obj `if test -f 'src/tests/encoder_helper_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_helper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_helper_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/encoder_helper_tests.Tpo $(DEPDIR)/encoder_helper_tests.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/encoder_helper_tests.cpp' object='encoder_helper_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encoder_helper_tests.obj `if test -f 'src/tests/encoder_helper_tests.cpp'; then $(CYGPATH_W) 'src/tests/encoder_helper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/encoder_helper_tests.cpp'; fi`

producer_tests.o: src/tests/producer_tests.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT producer_tests.o -MD -MP -MF $(DEPDIR)/producer_tests.Tpo -c -o producer_tests.o `test -f 'src/tests/producer_tests.cpp' || echo '$(srcdir)/'`src/tests/producer_tests.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/producer_tests.Tpo $(DEPDIR)/producer_tests.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/producer_tests.cpp' object='producer_tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o producer_tests.o `test -f 'src/tests/producer_tests.cpp' || echo '$(srcdir)/'`src/tests/producer_tests.cpp

producer_tests.obj: src/tests/producer_tests.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT producer_tests.obj -MD -MP -MF $(DEPDIR)/producer_tests.Tpo -c -o producer_tests.obj `if test -f 'src/tests/producer_tests.cpp'; then $(CYGPATH_W) 'src/tests/producer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/producer_tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/producer_tests.Tpo $(DEPDIR)/producer_tests.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/tests/producer_tests.cpp' object='producer_tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o producer_tests.obj `if test -f 'src/tests/producer_tests.cpp'; then $(CYGPATH_W) 'src/tests/producer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/tests/producer_tests.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf tests/.libs tests/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-kafkaconnect_includeHEADERS: $(kafkaconnect_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z ""$(kafkaconnect_includedir)"" || $(MKDIR_P) ""$(DESTDIR)$(kafkaconnect_includedir)""
	@list='$(kafkaconnect_include_HEADERS)'; test -n ""$(kafkaconnect_includedir)"" || list=; \
	for p in $$list; do \
	  if test -f ""$$p""; then d=; else d=""$(srcdir)/""; fi; \
	  echo ""$$d$$p""; \
	done | $(am__base_list) | \
	while read files; do \
	  echo "" $(INSTALL_HEADER) $$files '$(DESTDIR)$(kafkaconnect_includedir)'""; \
	  $(INSTALL_HEADER) $$files ""$(DESTDIR)$(kafkaconnect_includedir)"" || exit $$?; \
	done

uninstall-kafkaconnect_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(kafkaconnect_include_HEADERS)'; test -n ""$(kafkaconnect_includedir)"" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n ""$$files"" || exit 0; \
	echo "" ( cd '$(DESTDIR)$(kafkaconnect_includedir)' && rm -f"" $$files "")""; \
	cd ""$(DESTDIR)$(kafkaconnect_includedir)"" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f ""$$i""; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f ""$$i""; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z ""$(ETAGS_ARGS)$$*$$unique""; then :; else \
	  test -n ""$$unique"" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      ""$$@"" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f ""$$i""; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z ""$(CTAGS_ARGS)$$unique"" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) ""$$here""

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n ""$$list""; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir=""$(srcdir)/""; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case "" $(XFAIL_TESTS) "" in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case "" $(XFAIL_TESTS) "" in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo ""$${col}$$res$${std}: $$tst""; \
	  done; \
	  if test ""$$all"" -eq 1; then \
	    tests=""test""; \
	    All=""""; \
	  else \
	    tests=""tests""; \
	    All=""All ""; \
	  fi; \
	  if test ""$$failed"" -eq 0; then \
	    if test ""$$xfail"" -eq 0; then \
	      banner=""$$All$$all $$tests passed""; \
	    else \
	      if test ""$$xfail"" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner=""$$All$$all $$tests behaved as expected ($$xfail expected $$failures)""; \
	    fi; \
	  else \
	    if test ""$$xpass"" -eq 0; then \
	      banner=""$$failed of $$all $$tests failed""; \
	    else \
	      if test ""$$xpass"" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner=""$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)""; \
	    fi; \
	  fi; \
	  dashes=""$$banner""; \
	  skipped=""""; \
	  if test ""$$skip"" -ne 0; then \
	    if test ""$$skip"" -eq 1; then \
	      skipped=""($$skip test was not run)""; \
	    else \
	      skipped=""($$skip tests were not run)""; \
	    fi; \
	    test `echo ""$$skipped"" | wc -c` -le `echo ""$$banner"" | wc -c` || \
	      dashes=""$$skipped""; \
	  fi; \
	  report=""""; \
	  if test ""$$failed"" -ne 0 && test -n ""$(PACKAGE_BUGREPORT)""; then \
	    report=""Please report to $(PACKAGE_BUGREPORT)""; \
	    test `echo ""$$report"" | wc -c` -le `echo ""$$banner"" | wc -c` || \
	      dashes=""$$report""; \
	  fi; \
	  dashes=`echo ""$$dashes"" | sed s/./=/g`; \
	  if test ""$$failed"" -eq 0; then \
	    echo ""$$grn$$dashes""; \
	  else \
	    echo ""$$red$$dashes""; \
	  fi; \
	  echo ""$$banner""; \
	  test -z ""$$skipped"" || echo ""$$skipped""; \
	  test -z ""$$report"" || echo ""$$report""; \
	  echo ""$$dashes$$std""; \
	  test ""$$failed"" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d ""$(distdir)"" || mkdir ""$(distdir)""
	@srcdirstrip=`echo ""$(srcdir)"" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo ""$(top_srcdir)"" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e ""s|^$$srcdirstrip/||;t"" \
	      -e ""s|^$$topsrcdirstrip/|$(top_builddir)/|;t""`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo ""$$dist_files"" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo ""/$$file"" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d ""$(distdir)/$$file""; then \
	      find ""$(distdir)/$$file"" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file ""$(distdir)$$dir"" || exit 1; \
	      find ""$(distdir)/$$file"" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file ""$(distdir)$$dir"" || exit 1; \
	  else \
	    test -f ""$(distdir)/$$file"" \
	    || cp -p $$d/$$file ""$(distdir)/$$file"" \
	    || exit 1; \
	  fi; \
	done
	-test -n ""$(am__skip_mode_fix)"" \
	|| find ""$(distdir)"" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r ""$(distdir)""
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir=""$${TMPDIR-/tmp}/am-dc-$$$$/"" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix=""$$dc_install_base"" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir=""$$dc_install_base"" \
	        distuninstallcheck \
	  && chmod -R a-w ""$$dc_install_base"" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir ""$$dc_destdir"") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=""$$dc_destdir"" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=""$$dc_destdir"" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=""$$dc_destdir"" \
	            distuninstallcheck_dir=""$$dc_destdir"" distuninstallcheck; \
	      } || { rm -rf ""$$dc_destdir""; exit 1; }) \
	  && rm -rf ""$$dc_destdir"" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd ""$$am__cwd"" \
